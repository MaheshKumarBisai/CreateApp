{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"./LogBoxSymbolication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0},"end":{"line":19,"column":61}}],"key":"tnifsL40ZTtSGfTDHsrrD1NVb8k=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _LogBoxSymbolication = require(_dependencyMap[2], \"./LogBoxSymbolication\");\n  var LogBoxSymbolication = _interopNamespace(_LogBoxSymbolication);\n  var LogBoxLog = /*#__PURE__*/function () {\n    function LogBoxLog(data) {\n      (0, _classCallCheck.default)(this, LogBoxLog);\n      this.symbolicated = {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      };\n      this.level = data.level;\n      this.type = data.type;\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.extraData = data.extraData;\n      this.count = 1;\n    }\n    return (0, _createClass.default)(LogBoxLog, [{\n      key: \"incrementCount\",\n      value: function incrementCount() {\n        this.count += 1;\n      }\n    }, {\n      key: \"getAvailableStack\",\n      value: function getAvailableStack() {\n        return this.symbolicated.status === 'COMPLETE' ? this.symbolicated.stack : this.stack;\n      }\n    }, {\n      key: \"retrySymbolicate\",\n      value: function retrySymbolicate(callback) {\n        if (this.symbolicated.status !== 'COMPLETE') {\n          LogBoxSymbolication.deleteStack(this.stack);\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"symbolicate\",\n      value: function symbolicate(callback) {\n        if (this.symbolicated.status === 'NONE') {\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"handleSymbolicate\",\n      value: function handleSymbolicate(callback) {\n        if (this.symbolicated.status !== 'PENDING') {\n          this.updateStatus(null, null, null, callback);\n          LogBoxSymbolication.symbolicate(this.stack, this.extraData).then(data => {\n            this.updateStatus(null, data?.stack, data?.codeFrame, callback);\n          }, error => {\n            this.updateStatus(error, null, null, callback);\n          });\n        }\n      }\n    }, {\n      key: \"updateStatus\",\n      value: function updateStatus(error, stack, codeFrame, callback) {\n        var lastStatus = this.symbolicated.status;\n        if (error != null) {\n          this.symbolicated = {\n            error,\n            stack: null,\n            status: 'FAILED'\n          };\n        } else if (stack != null) {\n          if (codeFrame) {\n            this.codeFrame = codeFrame;\n          }\n          this.symbolicated = {\n            error: null,\n            stack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicated = {\n            error: null,\n            stack: null,\n            status: 'PENDING'\n          };\n        }\n        if (callback && lastStatus !== this.symbolicated.status) {\n          callback(this.symbolicated.status);\n        }\n      }\n    }]);\n  }();\n  var _default = LogBoxLog;\n});","lineCount":128,"map":[[27,2,145,0,"Object"],[27,8,145,0],[27,9,145,0,"defineProperty"],[27,23,145,0],[27,24,145,0,"exports"],[27,31,145,0],[28,4,145,0,"enumerable"],[28,14,145,0],[29,4,145,0,"get"],[29,7,145,0],[29,18,145,0,"get"],[29,19,145,0],[30,6,145,0],[30,13,145,0,"_default"],[30,21,145,0],[31,4,145,0],[32,2,145,0],[33,2,145,25],[33,6,145,25,"_babelRuntimeHelpersClassCallCheck"],[33,40,145,25],[33,43,145,25,"require"],[33,50,145,25],[33,51,145,25,"_dependencyMap"],[33,65,145,25],[34,2,145,25],[34,6,145,25,"_classCallCheck"],[34,21,145,25],[34,24,145,25,"_interopDefault"],[34,39,145,25],[34,40,145,25,"_babelRuntimeHelpersClassCallCheck"],[34,74,145,25],[35,2,145,25],[35,6,145,25,"_babelRuntimeHelpersCreateClass"],[35,37,145,25],[35,40,145,25,"require"],[35,47,145,25],[35,48,145,25,"_dependencyMap"],[35,62,145,25],[36,2,145,25],[36,6,145,25,"_createClass"],[36,18,145,25],[36,21,145,25,"_interopDefault"],[36,36,145,25],[36,37,145,25,"_babelRuntimeHelpersCreateClass"],[36,68,145,25],[37,2,19,0],[37,6,19,0,"_LogBoxSymbolication"],[37,26,19,0],[37,29,19,0,"require"],[37,36,19,0],[37,37,19,0,"_dependencyMap"],[37,51,19,0],[38,2,19,0],[38,6,19,0,"LogBoxSymbolication"],[38,25,19,0],[38,28,19,0,"_interopNamespace"],[38,45,19,0],[38,46,19,0,"_LogBoxSymbolication"],[38,66,19,0],[39,2,19,61],[39,6,37,6,"LogBoxLog"],[39,15,37,15],[40,4,58,2],[40,13,58,2,"LogBoxLog"],[40,23,58,14,"data"],[40,27,58,33],[40,29,58,35],[41,6,58,35],[41,10,58,35,"_classCallCheck"],[41,25,58,35],[41,26,58,35,"default"],[41,33,58,35],[41,41,58,35,"LogBoxLog"],[41,50,58,35],[42,6,58,35],[42,11,48,2,"symbolicated"],[42,23,48,14],[42,26,52,67],[43,8,53,4,"error"],[43,13,53,9],[43,15,53,11],[43,19,53,15],[44,8,54,4,"stack"],[44,13,54,9],[44,15,54,11],[44,19,54,15],[45,8,55,4,"status"],[45,14,55,10],[45,16,55,12],[46,6,56,2],[46,7,56,3],[47,6,59,4],[47,10,59,8],[47,11,59,9,"level"],[47,16,59,14],[47,19,59,17,"data"],[47,23,59,21],[47,24,59,22,"level"],[47,29,59,27],[48,6,60,4],[48,10,60,8],[48,11,60,9,"type"],[48,15,60,13],[48,18,60,16,"data"],[48,22,60,20],[48,23,60,21,"type"],[48,27,60,25],[49,6,61,4],[49,10,61,8],[49,11,61,9,"message"],[49,18,61,16],[49,21,61,19,"data"],[49,25,61,23],[49,26,61,24,"message"],[49,33,61,31],[50,6,62,4],[50,10,62,8],[50,11,62,9,"stack"],[50,16,62,14],[50,19,62,17,"data"],[50,23,62,21],[50,24,62,22,"stack"],[50,29,62,27],[51,6,63,4],[51,10,63,8],[51,11,63,9,"category"],[51,19,63,17],[51,22,63,20,"data"],[51,26,63,24],[51,27,63,25,"category"],[51,35,63,33],[52,6,64,4],[52,10,64,8],[52,11,64,9,"componentStack"],[52,25,64,23],[52,28,64,26,"data"],[52,32,64,30],[52,33,64,31,"componentStack"],[52,47,64,45],[53,6,65,4],[53,10,65,8],[53,11,65,9,"codeFrame"],[53,20,65,18],[53,23,65,21,"data"],[53,27,65,25],[53,28,65,26,"codeFrame"],[53,37,65,35],[54,6,66,4],[54,10,66,8],[54,11,66,9,"isComponentError"],[54,27,66,25],[54,30,66,28,"data"],[54,34,66,32],[54,35,66,33,"isComponentError"],[54,51,66,49],[55,6,67,4],[55,10,67,8],[55,11,67,9,"extraData"],[55,20,67,18],[55,23,67,21,"data"],[55,27,67,25],[55,28,67,26,"extraData"],[55,37,67,35],[56,6,68,4],[56,10,68,8],[56,11,68,9,"count"],[56,16,68,14],[56,19,68,17],[56,20,68,18],[57,4,69,2],[58,4,69,3],[58,15,69,3,"_createClass"],[58,27,69,3],[58,28,69,3,"default"],[58,35,69,3],[58,37,69,3,"LogBoxLog"],[58,46,69,3],[59,6,69,3,"key"],[59,9,69,3],[60,6,69,3,"value"],[60,11,69,3],[60,13,71,2],[60,22,71,2,"incrementCount"],[60,36,71,16,"incrementCount"],[60,37,71,16],[60,39,71,25],[61,8,72,4],[61,12,72,8],[61,13,72,9,"count"],[61,18,72,14],[61,22,72,18],[61,23,72,19],[62,6,73,2],[63,4,73,3],[64,6,73,3,"key"],[64,9,73,3],[65,6,73,3,"value"],[65,11,73,3],[65,13,75,2],[65,22,75,2,"getAvailableStack"],[65,39,75,19,"getAvailableStack"],[65,40,75,19],[65,42,75,29],[66,8,76,4],[66,15,76,11],[66,19,76,15],[66,20,76,16,"symbolicated"],[66,32,76,28],[66,33,76,29,"status"],[66,39,76,35],[66,44,76,40],[66,54,76,50],[66,57,77,8],[66,61,77,12],[66,62,77,13,"symbolicated"],[66,74,77,25],[66,75,77,26,"stack"],[66,80,77,31],[66,83,78,8],[66,87,78,12],[66,88,78,13,"stack"],[66,93,78,18],[67,6,79,2],[68,4,79,3],[69,6,79,3,"key"],[69,9,79,3],[70,6,79,3,"value"],[70,11,79,3],[70,13,81,2],[70,22,81,2,"retrySymbolicate"],[70,38,81,18,"retrySymbolicate"],[70,39,81,19,"callback"],[70,47,81,67],[70,49,81,75],[71,8,82,4],[71,12,82,8],[71,16,82,12],[71,17,82,13,"symbolicated"],[71,29,82,25],[71,30,82,26,"status"],[71,36,82,32],[71,41,82,37],[71,51,82,47],[71,53,82,49],[72,10,83,6,"LogBoxSymbolication"],[72,29,83,25],[72,30,83,26,"deleteStack"],[72,41,83,37],[72,42,83,38],[72,46,83,42],[72,47,83,43,"stack"],[72,52,83,48],[72,53,83,49],[73,10,84,6],[73,14,84,10],[73,15,84,11,"handleSymbolicate"],[73,32,84,28],[73,33,84,29,"callback"],[73,41,84,37],[73,42,84,38],[74,8,85,4],[75,6,86,2],[76,4,86,3],[77,6,86,3,"key"],[77,9,86,3],[78,6,86,3,"value"],[78,11,86,3],[78,13,88,2],[78,22,88,2,"symbolicate"],[78,33,88,13,"symbolicate"],[78,34,88,14,"callback"],[78,42,88,62],[78,44,88,70],[79,8,89,4],[79,12,89,8],[79,16,89,12],[79,17,89,13,"symbolicated"],[79,29,89,25],[79,30,89,26,"status"],[79,36,89,32],[79,41,89,37],[79,47,89,43],[79,49,89,45],[80,10,90,6],[80,14,90,10],[80,15,90,11,"handleSymbolicate"],[80,32,90,28],[80,33,90,29,"callback"],[80,41,90,37],[80,42,90,38],[81,8,91,4],[82,6,92,2],[83,4,92,3],[84,6,92,3,"key"],[84,9,92,3],[85,6,92,3,"value"],[85,11,92,3],[85,13,94,2],[85,22,94,2,"handleSymbolicate"],[85,39,94,19,"handleSymbolicate"],[85,40,94,20,"callback"],[85,48,94,68],[85,50,94,76],[86,8,95,4],[86,12,95,8],[86,16,95,12],[86,17,95,13,"symbolicated"],[86,29,95,25],[86,30,95,26,"status"],[86,36,95,32],[86,41,95,37],[86,50,95,46],[86,52,95,48],[87,10,96,6],[87,14,96,10],[87,15,96,11,"updateStatus"],[87,27,96,23],[87,28,96,24],[87,32,96,28],[87,34,96,30],[87,38,96,34],[87,40,96,36],[87,44,96,40],[87,46,96,42,"callback"],[87,54,96,50],[87,55,96,51],[88,10,97,6,"LogBoxSymbolication"],[88,29,97,25],[88,30,97,26,"symbolicate"],[88,41,97,37],[88,42,97,38],[88,46,97,42],[88,47,97,43,"stack"],[88,52,97,48],[88,54,97,50],[88,58,97,54],[88,59,97,55,"extraData"],[88,68,97,64],[88,69,97,65],[88,70,97,66,"then"],[88,74,97,70],[88,75,98,8,"data"],[88,79,98,12],[88,83,98,16],[89,12,99,10],[89,16,99,14],[89,17,99,15,"updateStatus"],[89,29,99,27],[89,30,99,28],[89,34,99,32],[89,36,99,34,"data"],[89,40,99,38],[89,42,99,40,"stack"],[89,47,99,45],[89,49,99,47,"data"],[89,53,99,51],[89,55,99,53,"codeFrame"],[89,64,99,62],[89,66,99,64,"callback"],[89,74,99,72],[89,75,99,73],[90,10,100,8],[90,11,100,9],[90,13,101,8,"error"],[90,18,101,13],[90,22,101,17],[91,12,102,10],[91,16,102,14],[91,17,102,15,"updateStatus"],[91,29,102,27],[91,30,102,28,"error"],[91,35,102,33],[91,37,102,35],[91,41,102,39],[91,43,102,41],[91,47,102,45],[91,49,102,47,"callback"],[91,57,102,55],[91,58,102,56],[92,10,103,8],[92,11,104,6],[92,12,104,7],[93,8,105,4],[94,6,106,2],[95,4,106,3],[96,6,106,3,"key"],[96,9,106,3],[97,6,106,3,"value"],[97,11,106,3],[97,13,108,2],[97,22,108,2,"updateStatus"],[97,34,108,14,"updateStatus"],[97,35,109,4,"error"],[97,40,109,17],[97,42,110,4,"stack"],[97,47,110,17],[97,49,111,4,"codeFrame"],[97,58,111,25],[97,60,112,4,"callback"],[97,68,112,52],[97,70,113,10],[98,8,114,4],[98,12,114,10,"lastStatus"],[98,22,114,20],[98,25,114,23],[98,29,114,27],[98,30,114,28,"symbolicated"],[98,42,114,40],[98,43,114,41,"status"],[98,49,114,47],[99,8,115,4],[99,12,115,8,"error"],[99,17,115,13],[99,21,115,17],[99,25,115,21],[99,27,115,23],[100,10,116,6],[100,14,116,10],[100,15,116,11,"symbolicated"],[100,27,116,23],[100,30,116,26],[101,12,117,8,"error"],[101,17,117,13],[102,12,118,8,"stack"],[102,17,118,13],[102,19,118,15],[102,23,118,19],[103,12,119,8,"status"],[103,18,119,14],[103,20,119,16],[104,10,120,6],[104,11,120,7],[105,8,121,4],[105,9,121,5],[105,15,121,11],[105,19,121,15,"stack"],[105,24,121,20],[105,28,121,24],[105,32,121,28],[105,34,121,30],[106,10,122,6],[106,14,122,10,"codeFrame"],[106,23,122,19],[106,25,122,21],[107,12,123,8],[107,16,123,12],[107,17,123,13,"codeFrame"],[107,26,123,22],[107,29,123,25,"codeFrame"],[107,38,123,34],[108,10,124,6],[109,10,126,6],[109,14,126,10],[109,15,126,11,"symbolicated"],[109,27,126,23],[109,30,126,26],[110,12,127,8,"error"],[110,17,127,13],[110,19,127,15],[110,23,127,19],[111,12,128,8,"stack"],[111,17,128,13],[112,12,129,8,"status"],[112,18,129,14],[112,20,129,16],[113,10,130,6],[113,11,130,7],[114,8,131,4],[114,9,131,5],[114,15,131,11],[115,10,132,6],[115,14,132,10],[115,15,132,11,"symbolicated"],[115,27,132,23],[115,30,132,26],[116,12,133,8,"error"],[116,17,133,13],[116,19,133,15],[116,23,133,19],[117,12,134,8,"stack"],[117,17,134,13],[117,19,134,15],[117,23,134,19],[118,12,135,8,"status"],[118,18,135,14],[118,20,135,16],[119,10,136,6],[119,11,136,7],[120,8,137,4],[121,8,139,4],[121,12,139,8,"callback"],[121,20,139,16],[121,24,139,20,"lastStatus"],[121,34,139,30],[121,39,139,35],[121,43,139,39],[121,44,139,40,"symbolicated"],[121,56,139,52],[121,57,139,53,"status"],[121,63,139,59],[121,65,139,61],[122,10,140,6,"callback"],[122,18,140,14],[122,19,140,15],[122,23,140,19],[122,24,140,20,"symbolicated"],[122,36,140,32],[122,37,140,33,"status"],[122,43,140,39],[122,44,140,40],[123,8,141,4],[124,6,142,2],[125,4,142,3],[126,2,142,3],[127,2,145,0],[127,6,145,0,"_default"],[127,14,145,0],[127,17,145,15,"LogBoxLog"],[127,26,145,24],[128,0,145,25],[128,3]],"functionMap":{"names":["<global>","LogBoxLog","constructor","incrementCount","getAvailableStack","retrySymbolicate","symbolicate","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus"],"mappings":"AAA;ACoC;ECqB;GDW;EEE;GFE;EGE;GHI;EIE;GJK;EKE;GLI;EME;QCI;SDE;QEC;SFE;GNG;ESE;GTkC;CDC"},"hasCjsExports":false},"type":"js/module"}]}