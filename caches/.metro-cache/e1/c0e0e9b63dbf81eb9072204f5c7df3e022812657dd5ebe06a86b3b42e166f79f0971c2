{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return useScheduleUpdate;\n    }\n  });\n  Object.defineProperty(exports, \"ScheduleUpdateContext\", {\n    enumerable: true,\n    get: function () {\n      return ScheduleUpdateContext;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var MISSING_CONTEXT_ERROR = \"Couldn't find a schedule context.\";\n  var ScheduleUpdateContext = /*#__PURE__*/React.createContext({\n    scheduleUpdate() {\n      throw new Error(MISSING_CONTEXT_ERROR);\n    },\n    flushUpdates() {\n      throw new Error(MISSING_CONTEXT_ERROR);\n    }\n  });\n\n  /**\n   * When screen config changes, we want to update the navigator in the same update phase.\n   * However, navigation state is in the root component and React won't let us update it from a child.\n   * This is a workaround for that, the scheduled update is stored in the ref without actually calling setState.\n   * It lets all subsequent updates access the latest state so it stays correct.\n   * Then we call setState during after the component updates.\n   */\n  function useScheduleUpdate(callback) {\n    var _React$useContext = React.useContext(ScheduleUpdateContext),\n      scheduleUpdate = _React$useContext.scheduleUpdate,\n      flushUpdates = _React$useContext.flushUpdates;\n    scheduleUpdate(callback);\n    React.useEffect(flushUpdates);\n  }\n});","lineCount":60,"map":[[22,2,24,15,"Object"],[22,8,24,15],[22,9,24,15,"defineProperty"],[22,23,24,15],[22,24,24,15,"exports"],[22,31,24,15],[23,4,24,15,"enumerable"],[23,14,24,15],[24,4,24,15,"get"],[24,7,24,15],[24,18,24,15,"get"],[24,19,24,15],[25,6,24,15],[25,13,24,15,"useScheduleUpdate"],[25,30,24,15],[26,4,24,15],[27,2,24,15],[28,2,5,0,"Object"],[28,8,5,0],[28,9,5,0,"defineProperty"],[28,23,5,0],[28,24,5,0,"exports"],[28,31,5,0],[29,4,5,0,"enumerable"],[29,14,5,0],[30,4,5,0,"get"],[30,7,5,0],[30,18,5,0,"get"],[30,19,5,0],[31,6,5,0],[31,13,5,0,"ScheduleUpdateContext"],[31,34,5,0],[32,4,5,0],[33,2,5,0],[34,2,1,0],[34,6,1,0,"_react"],[34,12,1,0],[34,15,1,0,"require"],[34,22,1,0],[34,23,1,0,"_dependencyMap"],[34,37,1,0],[35,2,1,0],[35,6,1,0,"React"],[35,11,1,0],[35,14,1,0,"_interopNamespace"],[35,31,1,0],[35,32,1,0,"_react"],[35,38,1,0],[36,2,3,0],[36,6,3,6,"MISSING_CONTEXT_ERROR"],[36,27,3,27],[36,30,3,30],[36,65,3,65],[37,2,5,7],[37,6,5,13,"ScheduleUpdateContext"],[37,27,5,34],[37,43,5,37,"React"],[37,48,5,42],[37,49,5,43,"createContext"],[37,62,5,56],[37,63,8,3],[38,4,9,2,"scheduleUpdate"],[38,18,9,16,"scheduleUpdate"],[38,19,9,16],[38,21,9,19],[39,6,10,4],[39,12,10,10],[39,16,10,14,"Error"],[39,21,10,19],[39,22,10,20,"MISSING_CONTEXT_ERROR"],[39,43,10,41],[39,44,10,42],[40,4,11,2],[40,5,11,3],[41,4,12,2,"flushUpdates"],[41,16,12,14,"flushUpdates"],[41,17,12,14],[41,19,12,17],[42,6,13,4],[42,12,13,10],[42,16,13,14,"Error"],[42,21,13,19],[42,22,13,20,"MISSING_CONTEXT_ERROR"],[42,43,13,41],[42,44,13,42],[43,4,14,2],[44,2,15,0],[44,3,15,1],[44,4,15,2],[46,2,17,0],[47,0,18,0],[48,0,19,0],[49,0,20,0],[50,0,21,0],[51,0,22,0],[52,0,23,0],[53,2,24,15],[53,11,24,24,"useScheduleUpdate"],[53,28,24,41,"useScheduleUpdate"],[53,29,24,42,"callback"],[53,37,24,62],[53,39,24,64],[54,4,25,2],[54,8,25,2,"_React$useContext"],[54,25,25,2],[54,28,25,43,"React"],[54,33,25,48],[54,34,25,49,"useContext"],[54,44,25,59],[54,45,26,4,"ScheduleUpdateContext"],[54,66,27,2],[54,67,27,3],[55,6,25,10,"scheduleUpdate"],[55,20,25,24],[55,23,25,24,"_React$useContext"],[55,40,25,24],[55,41,25,10,"scheduleUpdate"],[55,55,25,24],[56,6,25,26,"flushUpdates"],[56,18,25,38],[56,21,25,38,"_React$useContext"],[56,38,25,38],[56,39,25,26,"flushUpdates"],[56,51,25,38],[57,4,29,2,"scheduleUpdate"],[57,18,29,16],[57,19,29,17,"callback"],[57,27,29,25],[57,28,29,26],[58,4,31,2,"React"],[58,9,31,7],[58,10,31,8,"useEffect"],[58,19,31,17],[58,20,31,18,"flushUpdates"],[58,32,31,30],[58,33,31,31],[59,2,32,0],[60,0,32,1],[60,3]],"functionMap":{"names":["<global>","React.createContext$argument_0.scheduleUpdate","React.createContext$argument_0.flushUpdates","useScheduleUpdate"],"mappings":"AAA;ECQ;GDE;EEC;GFE;eGU;CHQ"},"hasCjsExports":false},"type":"js/module"}]}