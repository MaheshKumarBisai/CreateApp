{"dependencies":[{"name":"stacktrace-parser","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":28,"index":105},"end":{"line":3,"column":56,"index":133}}],"key":"3r9LnSX2gWMcqYH/F2aaJpiC6Uw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var stacktrace_parser_1 = require(_dependencyMap[0], \"stacktrace-parser\");\n  function parseErrorStack(stack) {\n    if (stack == null) {\n      return [];\n    }\n    if (Array.isArray(stack)) {\n      return stack;\n    }\n    // This file seems to be web-only, so we can remove this.\n    // // Native support for parsing for non-standard Hermes stack traces.\n    // if (global.HermesInternal) {\n    //   return require('./parseHermesStack').parseErrorStack(stack);\n    // }\n    return (0, stacktrace_parser_1.parse)(stack).map(frame => {\n      // frame.file will mostly look like `http://localhost:8081/index.bundle?platform=web&dev=true&hot=false`\n      return {\n        ...frame,\n        column: frame.column != null ? frame.column - 1 : null\n      };\n    });\n  }\n  exports.default = parseErrorStack;\n});","lineCount":29,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0],[7,6,3,6,"stacktrace_parser_1"],[7,25,3,25],[7,28,3,28,"require"],[7,35,3,35],[7,36,3,35,"_dependencyMap"],[7,50,3,35],[7,74,3,55],[7,75,3,56],[8,2,4,0],[8,11,4,9,"parseErrorStack"],[8,26,4,24,"parseErrorStack"],[8,27,4,25,"stack"],[8,32,4,30],[8,34,4,32],[9,4,5,4],[9,8,5,8,"stack"],[9,13,5,13],[9,17,5,17],[9,21,5,21],[9,23,5,23],[10,6,6,8],[10,13,6,15],[10,15,6,17],[11,4,7,4],[12,4,8,4],[12,8,8,8,"Array"],[12,13,8,13],[12,14,8,14,"isArray"],[12,21,8,21],[12,22,8,22,"stack"],[12,27,8,27],[12,28,8,28],[12,30,8,30],[13,6,9,8],[13,13,9,15,"stack"],[13,18,9,20],[14,4,10,4],[15,4,11,4],[16,4,12,4],[17,4,13,4],[18,4,14,4],[19,4,15,4],[20,4,16,4],[20,11,16,11],[20,12,16,12],[20,13,16,13],[20,15,16,15,"stacktrace_parser_1"],[20,34,16,34],[20,35,16,35,"parse"],[20,40,16,40],[20,42,16,42,"stack"],[20,47,16,47],[20,48,16,48],[20,49,16,49,"map"],[20,52,16,52],[20,53,16,54,"frame"],[20,58,16,59],[20,62,16,64],[21,6,17,8],[22,6,18,8],[22,13,18,15],[23,8,19,12],[23,11,19,15,"frame"],[23,16,19,20],[24,8,20,12,"column"],[24,14,20,18],[24,16,20,20,"frame"],[24,21,20,25],[24,22,20,26,"column"],[24,28,20,32],[24,32,20,36],[24,36,20,40],[24,39,20,43,"frame"],[24,44,20,48],[24,45,20,49,"column"],[24,51,20,55],[24,54,20,58],[24,55,20,59],[24,58,20,62],[25,6,21,8],[25,7,21,9],[26,4,22,4],[26,5,22,5],[26,6,22,6],[27,2,23,0],[28,2,24,0,"exports"],[28,9,24,7],[28,10,24,8,"default"],[28,17,24,15],[28,20,24,18,"parseErrorStack"],[28,35,24,33],[29,0,24,34],[29,3]],"functionMap":{"names":["<global>","parseErrorStack","map$argument_0"],"mappings":"AAA;ACG;qDCY;KDM;CDC"},"hasCjsExports":true},"type":"js/module"}]}