{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/callSuper","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"378KbBHdmndC3iMXZ2Ix8oB3LeE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":7,"column":22,"index":133}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":134},"end":{"line":8,"column":66,"index":200}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"],"imports":1}},{"name":"lodash/isEqual","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":273},"end":{"line":10,"column":39,"index":312}}],"key":"4Sww8E1j8QYoAFRrbMwWd/lhqSI=","exportNames":["*"],"imports":1}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":313},"end":{"line":11,"column":63,"index":376}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":377},"end":{"line":12,"column":33,"index":410}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":411},"end":{"line":17,"column":28,"index":516}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"],"imports":1}},{"name":"./gestureHandlerCommon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":518},"end":{"line":26,"column":32,"index":690}}],"key":"M3YJtGPnWOlAL/cGsCkMRGpSLhc=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":28,"column":0,"index":731},"end":{"line":28,"column":59,"index":790}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":29,"column":0,"index":791},"end":{"line":29,"column":43,"index":834}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"],"imports":1}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":835},"end":{"line":30,"column":64,"index":899}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"],"imports":1}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":31,"column":0,"index":900},"end":{"line":31,"column":77,"index":977}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":32,"column":0,"index":978},"end":{"line":32,"column":55,"index":1033}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-gesture-handler/src/handlers/createHandler.tsx\"; // @ts-ignore - it isn't typed by TS & don't have definitelyTyped types\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return createHandler;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _babelRuntimeHelpersCallSuper = require(_dependencyMap[2], \"@babel/runtime/helpers/callSuper\");\n  var _callSuper = _interopDefault(_babelRuntimeHelpersCallSuper);\n  var _babelRuntimeHelpersInherits = require(_dependencyMap[3], \"@babel/runtime/helpers/inherits\");\n  var _inherits = _interopDefault(_babelRuntimeHelpersInherits);\n  var _react = require(_dependencyMap[4], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNative = require(_dependencyMap[5], \"react-native\");\n  var _customDirectEventTypes = require(_dependencyMap[6], \"./customDirectEventTypes\");\n  var _lodashIsEqual = require(_dependencyMap[7], \"lodash/isEqual\");\n  var deepEqual = _interopDefault(_lodashIsEqual);\n  var _RNGestureHandlerModule = require(_dependencyMap[8], \"../RNGestureHandlerModule\");\n  var RNGestureHandlerModule = _interopDefault(_RNGestureHandlerModule);\n  var _State = require(_dependencyMap[9], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[10], \"./handlersRegistry\");\n  var _gestureHandlerCommon = require(_dependencyMap[11], \"./gestureHandlerCommon\");\n  var _utils = require(_dependencyMap[12], \"../utils\");\n  var _ActionType = require(_dependencyMap[13], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[14], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = require(_dependencyMap[15], \"../GestureHandlerRootViewContext\");\n  var GestureHandlerRootViewContext = _interopDefault(_GestureHandlerRootViewContext);\n  var _ghQueueMicrotask = require(_dependencyMap[16], \"../ghQueueMicrotask\");\n  var _reactJsxDevRuntime = require(_dependencyMap[17], \"react/jsx-dev-runtime\");\n  var UIManagerAny = _reactNative.UIManager;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  var customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    },\n    // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n    // on Android with Fabric enabled, the native part still sends the native events to JS\n    // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n    // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n    // That's why we need to register another pair of event names.\n    // The incoming events will be queued but never handled.\n    // Without this piece of code below, you'll get the following JS error:\n    // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n    ...((0, _utils.isFabric)() && _reactNative.Platform.OS === 'android' && customGHEventsConfigFabricAndroid)\n  };\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = {\n    ...UIManagerAny.genericDirectEventTypes,\n    ...customGHEventsConfig\n  };\n  // In newer versions of RN the `genericDirectEventTypes` is located in the object\n  // returned by UIManager.getViewManagerConfig('getConstants') or in older RN UIManager.getConstants(), we need to add it there as well to make\n  // it compatible with RN 61+\n  var UIManagerConstants = UIManagerAny.getViewManagerConfig?.('getConstants') ?? UIManagerAny.getConstants?.();\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = {\n      ...UIManagerConstants.genericDirectEventTypes,\n      ...customGHEventsConfig\n    };\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  var _UIManagerAny$setJSRe = UIManagerAny.setJSResponder,\n    oldSetJSResponder = _UIManagerAny$setJSRe === void 0 ? () => {\n      //no operation\n    } : _UIManagerAny$setJSRe,\n    _UIManagerAny$clearJS = UIManagerAny.clearJSResponder,\n    oldClearJSResponder = _UIManagerAny$clearJS === void 0 ? () => {\n      //no operation\n    } : _UIManagerAny$clearJS;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  var allowTouches = true;\n  var DEV_ON_ANDROID = __DEV__ && _reactNative.Platform.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    var extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  var stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n\n  // TODO(TS) fix event types\n\n  var UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler(_ref) {\n    var name = _ref.name,\n      _ref$allowedProps = _ref.allowedProps,\n      allowedProps = _ref$allowedProps === void 0 ? [] : _ref$allowedProps,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? {} : _ref$config,\n      transformProps = _ref.transformProps,\n      _ref$customNativeProp = _ref.customNativeProps,\n      customNativeProps = _ref$customNativeProp === void 0 ? [] : _ref$customNativeProp;\n    var Handler = /*#__PURE__*/function (_React$Component) {\n      function Handler(props) {\n        var _this;\n        (0, _classCallCheck.default)(this, Handler);\n        _this = (0, _callSuper.default)(this, Handler, [props]);\n        _this.onGestureHandlerEvent = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onGestureEvent === 'function') {\n              _this.props.onGestureEvent?.(event);\n            }\n          } else {\n            _this.props.onGestureHandlerEvent?.(event);\n          }\n        };\n        // TODO(TS) - make sure this is right type for event\n        _this.onGestureHandlerStateChange = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onHandlerStateChange === 'function') {\n              _this.props.onHandlerStateChange?.(event);\n            }\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange?.(event);\n          }\n        };\n        _this.refHandler = node => {\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          // TODO(TS) fix ref type\n          var ref = child.ref;\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n        _this.createGestureHandler = newConfig => {\n          _this.config = newConfig;\n          RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n        _this.attachGestureHandler = newViewTag => {\n          _this.viewTag = newViewTag;\n          if (_reactNative.Platform.OS === 'web') {\n            // typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n            RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n            // ignored on web\n            _this.propsRef);\n          } else {\n            (0, _handlersRegistry.registerOldGestureHandler)(_this.handlerTag, {\n              onGestureEvent: _this.onGestureHandlerEvent,\n              onGestureStateChange: _this.onGestureHandlerStateChange\n            });\n            var actionType = (() => {\n              var onGestureEvent = _this.props?.onGestureEvent;\n              var isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              var onHandlerStateChange = _this.props?.onHandlerStateChange;\n              var isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              var isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _ActionType.ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n              }\n            })();\n            RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, actionType);\n          }\n          (0, _gestureHandlerCommon.scheduleFlushOperations)();\n        };\n        _this.updateGestureHandler = newConfig => {\n          _this.config = newConfig;\n          RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n          (0, _gestureHandlerCommon.scheduleFlushOperations)();\n        };\n        _this.handlerTag = (0, _handlersRegistry.getNextHandlerTag)();\n        _this.config = {};\n        _this.propsRef = /*#__PURE__*/React.createRef();\n        _this.isMountedRef = /*#__PURE__*/React.createRef();\n        _this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = _this.handlerTag;\n        }\n        return _this;\n      }\n      (0, _inherits.default)(Handler, _React$Component);\n      return (0, _createClass.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var props = this.props;\n          this.isMountedRef.current = true;\n          if (DEV_ON_ANDROID) {\n            this.inspectorToggleListener = _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', () => {\n              this.setState(_ => ({\n                allowTouches\n              }));\n              this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          if (hasUnresolvedRefs(props)) {\n            // If there are unresolved refs (e.g. \".current\" has not yet been set)\n            // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n            // _update method that will try to update native handler props using\n            // queueMicrotask. This makes it so update() function gets called after all\n            // react components are mounted and we expect the missing ref object to\n            // be resolved by then.\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n              this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          this.createGestureHandler((0, _gestureHandlerCommon.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n          this.attachGestureHandler((0, _gestureHandlerCommon.findNodeHandle)(this.viewNode)); // TODO(TS) - check if this can be null\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, _gestureHandlerCommon.findNodeHandle)(this.viewNode);\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n          }\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.inspectorToggleListener?.remove();\n          this.isMountedRef.current = false;\n          RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n          (0, _gestureHandlerCommon.scheduleFlushOperations)();\n          // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n          var handlerID = this.props.id;\n          if (handlerID) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete _handlersRegistry.handlerIDToTag[handlerID];\n          }\n        }\n      }, {\n        key: \"update\",\n        value: function update(remainingTries) {\n          if (!this.isMountedRef.current) {\n            return;\n          }\n          var props = this.props;\n\n          // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n          // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n          // again is easy enough fix.\n          if (hasUnresolvedRefs(props) && remainingTries > 0) {\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n              this.update(remainingTries - 1);\n            });\n          } else {\n            var newConfig = (0, _gestureHandlerCommon.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n            if (!(0, deepEqual.default)(this.config, newConfig)) {\n              this.updateGestureHandler(newConfig);\n            }\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = {\n            ...this.props,\n            ...updates\n          };\n          var newConfig = (0, _gestureHandlerCommon.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (__DEV__ && !this.context && !(0, _utils.isJestEnv)() && _reactNative.Platform.OS !== 'web') {\n            throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n          }\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props = this.props,\n            onGestureEvent = _this$props.onGestureEvent,\n            onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props2 = this.props,\n            onHandlerStateChange = _this$props2.onHandlerStateChange,\n            onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var events = {\n            onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n            onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n          };\n          this.propsRef.current = events;\n          var child = null;\n          try {\n            child = React.Children.only(this.props.children);\n          } catch (e) {\n            throw new Error((0, _utils.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n          }\n          var grandChildren = child.props.children;\n          if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = React.Children.toArray(grandChildren);\n            grandChildren.push(/*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_PressabilityDebugView.PressabilityDebugView, {\n              color: \"mediumspringgreen\",\n              hitSlop: child.props.hitSlop\n            }, \"pressabilityDebugView\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 11\n            }, this));\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            ref: this.refHandler,\n            collapsable: false,\n            ...((0, _utils.isJestEnv)() ? {\n              handlerType: name,\n              handlerTag: this.handlerTag\n            } : {}),\n            testID: this.props.testID ?? child.props.testID,\n            ...events\n          }, grandChildren);\n        }\n      }]);\n    }(React.Component);\n    Handler.displayName = name;\n    Handler.contextType = GestureHandlerRootViewContext.default;\n    return Handler;\n  }\n});","lineCount":435,"map":[[4,146,9,0],[5,2,9,0,"Object"],[5,8,9,0],[5,9,9,0,"defineProperty"],[5,23,9,0],[5,24,9,0,"exports"],[5,31,9,0],[6,4,9,0,"value"],[6,9,9,0],[7,2,9,0],[8,2,9,0],[8,11,9,0,"_interopDefault"],[8,27,9,0,"e"],[8,28,9,0],[9,4,9,0],[9,11,9,0,"e"],[9,12,9,0],[9,16,9,0,"e"],[9,17,9,0],[9,18,9,0,"__esModule"],[9,28,9,0],[9,31,9,0,"e"],[9,32,9,0],[10,6,9,0,"default"],[10,13,9,0],[10,15,9,0,"e"],[11,4,9,0],[12,2,9,0],[13,2,9,0],[13,11,9,0,"_interopNamespace"],[13,29,9,0,"e"],[13,30,9,0],[14,4,9,0],[14,8,9,0,"e"],[14,9,9,0],[14,13,9,0,"e"],[14,14,9,0],[14,15,9,0,"__esModule"],[14,25,9,0],[14,34,9,0,"e"],[14,35,9,0],[15,4,9,0],[15,8,9,0,"n"],[15,9,9,0],[16,4,9,0],[16,8,9,0,"e"],[16,9,9,0],[16,11,9,0,"Object"],[16,17,9,0],[16,18,9,0,"keys"],[16,22,9,0],[16,23,9,0,"e"],[16,24,9,0],[16,26,9,0,"forEach"],[16,33,9,0],[16,44,9,0,"k"],[16,45,9,0],[17,6,9,0],[17,10,9,0,"d"],[17,11,9,0],[17,14,9,0,"Object"],[17,20,9,0],[17,21,9,0,"getOwnPropertyDescriptor"],[17,45,9,0],[17,46,9,0,"e"],[17,47,9,0],[17,49,9,0,"k"],[17,50,9,0],[18,6,9,0,"Object"],[18,12,9,0],[18,13,9,0,"defineProperty"],[18,27,9,0],[18,28,9,0,"n"],[18,29,9,0],[18,31,9,0,"k"],[18,32,9,0],[18,34,9,0,"d"],[18,35,9,0],[18,36,9,0,"get"],[18,39,9,0],[18,42,9,0,"d"],[18,43,9,0],[19,8,9,0,"enumerable"],[19,18,9,0],[20,8,9,0,"get"],[20,11,9,0],[20,22,9,0,"get"],[20,23,9,0],[21,10,9,0],[21,17,9,0,"e"],[21,18,9,0],[21,19,9,0,"k"],[21,20,9,0],[22,8,9,0],[23,6,9,0],[24,4,9,0],[25,4,9,0,"n"],[25,5,9,0],[25,6,9,0,"default"],[25,13,9,0],[25,16,9,0,"e"],[25,17,9,0],[26,4,9,0],[26,11,9,0,"n"],[26,12,9,0],[27,2,9,0],[28,2,167,15,"Object"],[28,8,167,15],[28,9,167,15,"defineProperty"],[28,23,167,15],[28,24,167,15,"exports"],[28,31,167,15],[29,4,167,15,"enumerable"],[29,14,167,15],[30,4,167,15,"get"],[30,7,167,15],[30,18,167,15,"get"],[30,19,167,15],[31,6,167,15],[31,13,167,15,"createHandler"],[31,26,167,15],[32,4,167,15],[33,2,167,15],[34,2,549,1],[34,6,549,1,"_babelRuntimeHelpersClassCallCheck"],[34,40,549,1],[34,43,549,1,"require"],[34,50,549,1],[34,51,549,1,"_dependencyMap"],[34,65,549,1],[35,2,549,1],[35,6,549,1,"_classCallCheck"],[35,21,549,1],[35,24,549,1,"_interopDefault"],[35,39,549,1],[35,40,549,1,"_babelRuntimeHelpersClassCallCheck"],[35,74,549,1],[36,2,549,1],[36,6,549,1,"_babelRuntimeHelpersCreateClass"],[36,37,549,1],[36,40,549,1,"require"],[36,47,549,1],[36,48,549,1,"_dependencyMap"],[36,62,549,1],[37,2,549,1],[37,6,549,1,"_createClass"],[37,18,549,1],[37,21,549,1,"_interopDefault"],[37,36,549,1],[37,37,549,1,"_babelRuntimeHelpersCreateClass"],[37,68,549,1],[38,2,549,1],[38,6,549,1,"_babelRuntimeHelpersCallSuper"],[38,35,549,1],[38,38,549,1,"require"],[38,45,549,1],[38,46,549,1,"_dependencyMap"],[38,60,549,1],[39,2,549,1],[39,6,549,1,"_callSuper"],[39,16,549,1],[39,19,549,1,"_interopDefault"],[39,34,549,1],[39,35,549,1,"_babelRuntimeHelpersCallSuper"],[39,64,549,1],[40,2,549,1],[40,6,549,1,"_babelRuntimeHelpersInherits"],[40,34,549,1],[40,37,549,1,"require"],[40,44,549,1],[40,45,549,1,"_dependencyMap"],[40,59,549,1],[41,2,549,1],[41,6,549,1,"_inherits"],[41,15,549,1],[41,18,549,1,"_interopDefault"],[41,33,549,1],[41,34,549,1,"_babelRuntimeHelpersInherits"],[41,62,549,1],[42,2,1,0],[42,6,1,0,"_react"],[42,12,1,0],[42,15,1,0,"require"],[42,22,1,0],[42,23,1,0,"_dependencyMap"],[42,37,1,0],[43,2,1,0],[43,6,1,0,"React"],[43,11,1,0],[43,14,1,0,"_interopNamespace"],[43,31,1,0],[43,32,1,0,"_react"],[43,38,1,0],[44,2,2,0],[44,6,2,0,"_reactNative"],[44,18,2,0],[44,21,2,0,"require"],[44,28,2,0],[44,29,2,0,"_dependencyMap"],[44,43,2,0],[45,2,8,0],[45,6,8,0,"_customDirectEventTypes"],[45,29,8,0],[45,32,8,0,"require"],[45,39,8,0],[45,40,8,0,"_dependencyMap"],[45,54,8,0],[46,2,10,0],[46,6,10,0,"_lodashIsEqual"],[46,20,10,0],[46,23,10,0,"require"],[46,30,10,0],[46,31,10,0,"_dependencyMap"],[46,45,10,0],[47,2,10,0],[47,6,10,0,"deepEqual"],[47,15,10,0],[47,18,10,0,"_interopDefault"],[47,33,10,0],[47,34,10,0,"_lodashIsEqual"],[47,48,10,0],[48,2,11,0],[48,6,11,0,"_RNGestureHandlerModule"],[48,29,11,0],[48,32,11,0,"require"],[48,39,11,0],[48,40,11,0,"_dependencyMap"],[48,54,11,0],[49,2,11,0],[49,6,11,0,"RNGestureHandlerModule"],[49,28,11,0],[49,31,11,0,"_interopDefault"],[49,46,11,0],[49,47,11,0,"_RNGestureHandlerModule"],[49,70,11,0],[50,2,12,0],[50,6,12,0,"_State"],[50,12,12,0],[50,15,12,0,"require"],[50,22,12,0],[50,23,12,0,"_dependencyMap"],[50,37,12,0],[51,2,13,0],[51,6,13,0,"_handlersRegistry"],[51,23,13,0],[51,26,13,0,"require"],[51,33,13,0],[51,34,13,0,"_dependencyMap"],[51,48,13,0],[52,2,19,0],[52,6,19,0,"_gestureHandlerCommon"],[52,27,19,0],[52,30,19,0,"require"],[52,37,19,0],[52,38,19,0,"_dependencyMap"],[52,52,19,0],[53,2,28,0],[53,6,28,0,"_utils"],[53,12,28,0],[53,15,28,0,"require"],[53,22,28,0],[53,23,28,0,"_dependencyMap"],[53,37,28,0],[54,2,29,0],[54,6,29,0,"_ActionType"],[54,17,29,0],[54,20,29,0,"require"],[54,27,29,0],[54,28,29,0,"_dependencyMap"],[54,42,29,0],[55,2,30,0],[55,6,30,0,"_PressabilityDebugView"],[55,28,30,0],[55,31,30,0,"require"],[55,38,30,0],[55,39,30,0,"_dependencyMap"],[55,53,30,0],[56,2,31,0],[56,6,31,0,"_GestureHandlerRootViewContext"],[56,36,31,0],[56,39,31,0,"require"],[56,46,31,0],[56,47,31,0,"_dependencyMap"],[56,61,31,0],[57,2,31,0],[57,6,31,0,"GestureHandlerRootViewContext"],[57,35,31,0],[57,38,31,0,"_interopDefault"],[57,53,31,0],[57,54,31,0,"_GestureHandlerRootViewContext"],[57,84,31,0],[58,2,32,0],[58,6,32,0,"_ghQueueMicrotask"],[58,23,32,0],[58,26,32,0,"require"],[58,33,32,0],[58,34,32,0,"_dependencyMap"],[58,48,32,0],[59,2,32,55],[59,6,32,55,"_reactJsxDevRuntime"],[59,25,32,55],[59,28,32,55,"require"],[59,35,32,55],[59,36,32,55,"_dependencyMap"],[59,50,32,55],[60,2,34,0],[60,6,34,6,"UIManagerAny"],[60,18,34,18],[60,21,34,21,"UIManager"],[60,33,34,30],[60,34,34,30,"UIManager"],[60,43,34,37],[61,2,36,0,"customDirectEventTypes"],[61,25,36,22],[61,26,36,22,"customDirectEventTypes"],[61,48,36,22],[61,49,36,23,"topGestureHandlerEvent"],[61,71,36,45],[61,74,36,48],[62,4,37,2,"registrationName"],[62,20,37,18],[62,22,37,20],[63,2,38,0],[63,3,38,1],[64,2,40,0],[64,6,40,6,"customGHEventsConfigFabricAndroid"],[64,39,40,39],[64,42,40,42],[65,4,41,2,"topOnGestureHandlerEvent"],[65,28,41,26],[65,30,41,28],[66,6,41,30,"registrationName"],[66,22,41,46],[66,24,41,48],[67,4,41,72],[67,5,41,73],[68,4,42,2,"topOnGestureHandlerStateChange"],[68,34,42,32],[68,36,42,34],[69,6,43,4,"registrationName"],[69,22,43,20],[69,24,43,22],[70,4,44,2],[71,2,45,0],[71,3,45,1],[72,2,47,0],[72,6,47,6,"customGHEventsConfig"],[72,26,47,26],[72,29,47,29],[73,4,48,2,"onGestureHandlerEvent"],[73,25,48,23],[73,27,48,25],[74,6,48,27,"registrationName"],[74,22,48,43],[74,24,48,45],[75,4,48,69],[75,5,48,70],[76,4,49,2,"onGestureHandlerStateChange"],[76,31,49,29],[76,33,49,31],[77,6,50,4,"registrationName"],[77,22,50,20],[77,24,50,22],[78,4,51,2],[78,5,51,3],[79,4,53,2],[80,4,54,2],[81,4,55,2],[82,4,56,2],[83,4,57,2],[84,4,58,2],[85,4,59,2],[86,4,60,2],[87,4,61,2],[87,8,61,6],[87,12,61,6,"isFabric"],[87,18,61,14],[87,19,61,14,"isFabric"],[87,27,61,14],[87,29,61,15],[87,30,61,16],[87,34,62,4,"Platform"],[87,46,62,12],[87,47,62,12,"Platform"],[87,55,62,12],[87,56,62,13,"OS"],[87,58,62,15],[87,63,62,20],[87,72,62,29],[87,76,63,4,"customGHEventsConfigFabricAndroid"],[87,109,63,37],[88,2,64,0],[88,3,64,1],[90,2,66,0],[91,2,67,0],[92,2,68,0],[93,2,69,0],[94,2,70,0,"UIManagerAny"],[94,14,70,12],[94,15,70,13,"genericDirectEventTypes"],[94,38,70,36],[94,41,70,39],[95,4,71,2],[95,7,71,5,"UIManagerAny"],[95,19,71,17],[95,20,71,18,"genericDirectEventTypes"],[95,43,71,41],[96,4,72,2],[96,7,72,5,"customGHEventsConfig"],[97,2,73,0],[97,3,73,1],[98,2,74,0],[99,2,75,0],[100,2,76,0],[101,2,77,0],[101,6,77,6,"UIManagerConstants"],[101,24,77,24],[101,27,78,2,"UIManagerAny"],[101,39,78,14],[101,40,78,15,"getViewManagerConfig"],[101,60,78,35],[101,63,78,38],[101,77,78,52],[101,78,78,53],[101,82,79,2,"UIManagerAny"],[101,94,79,14],[101,95,79,15,"getConstants"],[101,107,79,27],[101,110,79,30],[101,111,79,31],[102,2,81,0],[102,6,81,4,"UIManagerConstants"],[102,24,81,22],[102,26,81,24],[103,4,82,2,"UIManagerConstants"],[103,22,82,20],[103,23,82,21,"genericDirectEventTypes"],[103,46,82,44],[103,49,82,47],[104,6,83,4],[104,9,83,7,"UIManagerConstants"],[104,27,83,25],[104,28,83,26,"genericDirectEventTypes"],[104,51,83,49],[105,6,84,4],[105,9,84,7,"customGHEventsConfig"],[106,4,85,2],[106,5,85,3],[107,2,86,0],[109,2,88,0],[110,2,89,0],[110,6,89,0,"_UIManagerAny$setJSRe"],[110,27,89,0],[110,30,96,4,"UIManagerAny"],[110,42,96,16],[110,43,90,2,"setJSResponder"],[110,57,90,16],[111,4,90,18,"oldSetJSResponder"],[111,21,90,35],[111,24,90,35,"_UIManagerAny$setJSRe"],[111,45,90,35],[111,59,90,38],[111,65,90,44],[112,6,91,4],[113,4,91,4],[113,5,92,3],[113,8,92,3,"_UIManagerAny$setJSRe"],[113,29,92,3],[114,4,92,3,"_UIManagerAny$clearJS"],[114,25,92,3],[114,28,96,4,"UIManagerAny"],[114,40,96,16],[114,41,93,2,"clearJSResponder"],[114,57,93,18],[115,4,93,20,"oldClearJSResponder"],[115,23,93,39],[115,26,93,39,"_UIManagerAny$clearJS"],[115,47,93,39],[115,61,93,42],[115,67,93,48],[116,6,94,4],[117,4,94,4],[117,5,95,3],[117,8,95,3,"_UIManagerAny$clearJS"],[117,29,95,3],[118,2,97,0,"UIManagerAny"],[118,14,97,12],[118,15,97,13,"setJSResponder"],[118,29,97,27],[118,32,97,30],[118,33,97,31,"tag"],[118,36,97,42],[118,38,97,44,"blockNativeResponder"],[118,58,97,73],[118,63,97,78],[119,4,98,2,"RNGestureHandlerModule"],[119,26,98,24],[119,27,98,24,"default"],[119,34,98,24],[119,35,98,25,"handleSetJSResponder"],[119,55,98,45],[119,56,98,46,"tag"],[119,59,98,49],[119,61,98,51,"blockNativeResponder"],[119,81,98,71],[119,82,98,72],[120,4,99,2,"oldSetJSResponder"],[120,21,99,19],[120,22,99,20,"tag"],[120,25,99,23],[120,27,99,25,"blockNativeResponder"],[120,47,99,45],[120,48,99,46],[121,2,100,0],[121,3,100,1],[122,2,101,0,"UIManagerAny"],[122,14,101,12],[122,15,101,13,"clearJSResponder"],[122,31,101,29],[122,34,101,32],[122,40,101,38],[123,4,102,2,"RNGestureHandlerModule"],[123,26,102,24],[123,27,102,24,"default"],[123,34,102,24],[123,35,102,25,"handleClearJSResponder"],[123,57,102,47],[123,58,102,48],[123,59,102,49],[124,4,103,2,"oldClearJSResponder"],[124,23,103,21],[124,24,103,22],[124,25,103,23],[125,2,104,0],[125,3,104,1],[126,2,106,0],[126,6,106,4,"allowTouches"],[126,18,106,16],[126,21,106,19],[126,25,106,23],[127,2,107,0],[127,6,107,6,"DEV_ON_ANDROID"],[127,20,107,20],[127,23,107,23,"__DEV__"],[127,30,107,30],[127,34,107,34,"Platform"],[127,46,107,42],[127,47,107,42,"Platform"],[127,55,107,42],[127,56,107,43,"OS"],[127,58,107,45],[127,63,107,50],[127,72,107,59],[128,2,108,0],[129,2,109,0],[130,2,110,0],[130,6,110,4,"DEV_ON_ANDROID"],[130,20,110,18],[130,22,110,20],[131,4,111,2,"DeviceEventEmitter"],[131,16,111,20],[131,17,111,20,"DeviceEventEmitter"],[131,35,111,20],[131,36,111,21,"addListener"],[131,47,111,32],[131,48,111,33],[131,72,111,57],[131,74,111,59],[131,80,111,65],[132,6,112,4,"allowTouches"],[132,18,112,16],[132,21,112,19],[132,22,112,20,"allowTouches"],[132,34,112,32],[133,4,113,2],[133,5,113,3],[133,6,113,4],[134,2,114,0],[135,2,119,0],[135,11,119,9,"hasUnresolvedRefs"],[135,28,119,26,"hasUnresolvedRefs"],[135,29,120,2,"props"],[135,34,120,24],[135,36,121,2],[136,4,122,2],[137,4,123,2],[137,8,123,8,"extract"],[137,15,123,15],[137,18,123,19,"refs"],[137,22,123,36],[137,26,123,41],[138,6,124,4],[138,10,124,8],[138,11,124,9,"Array"],[138,16,124,14],[138,17,124,15,"isArray"],[138,24,124,22],[138,25,124,23,"refs"],[138,29,124,27],[138,30,124,28],[138,32,124,30],[139,8,125,6],[139,15,125,13,"refs"],[139,19,125,17],[139,23,125,21,"refs"],[139,27,125,25],[139,28,125,26,"current"],[139,35,125,33],[139,40,125,38],[139,44,125,42],[140,6,126,4],[141,6,127,4],[141,13,127,11,"refs"],[141,17,127,15],[141,18,127,16,"some"],[141,22,127,20],[141,23,127,22,"r"],[141,24,127,23],[141,28,127,28,"r"],[141,29,127,29],[141,33,127,33,"r"],[141,34,127,34],[141,35,127,35,"current"],[141,42,127,42],[141,47,127,47],[141,51,127,51],[141,52,127,52],[142,4,128,2],[142,5,128,3],[143,4,129,2],[143,11,129,9,"extract"],[143,18,129,16],[143,19,129,17,"props"],[143,24,129,22],[143,25,129,23],[143,47,129,45],[143,48,129,46],[143,49,129,47],[143,53,129,51,"extract"],[143,60,129,58],[143,61,129,59,"props"],[143,66,129,64],[143,67,129,65],[143,76,129,74],[143,77,129,75],[143,78,129,76],[144,2,130,0],[145,2,132,0],[145,6,132,6,"stateToPropMappings"],[145,25,132,25],[145,28,132,28],[146,4,133,2],[146,5,133,3,"State"],[146,11,133,8],[146,12,133,8,"State"],[146,17,133,8],[146,18,133,9,"UNDETERMINED"],[146,30,133,21],[146,33,133,24,"undefined"],[146,42,133,33],[147,4,134,2],[147,5,134,3,"State"],[147,11,134,8],[147,12,134,8,"State"],[147,17,134,8],[147,18,134,9,"BEGAN"],[147,23,134,14],[147,26,134,17],[147,35,134,26],[148,4,135,2],[148,5,135,3,"State"],[148,11,135,8],[148,12,135,8,"State"],[148,17,135,8],[148,18,135,9,"FAILED"],[148,24,135,15],[148,27,135,18],[148,37,135,28],[149,4,136,2],[149,5,136,3,"State"],[149,11,136,8],[149,12,136,8,"State"],[149,17,136,8],[149,18,136,9,"CANCELLED"],[149,27,136,18],[149,30,136,21],[149,43,136,34],[150,4,137,2],[150,5,137,3,"State"],[150,11,137,8],[150,12,137,8,"State"],[150,17,137,8],[150,18,137,9,"ACTIVE"],[150,24,137,15],[150,27,137,18],[150,40,137,31],[151,4,138,2],[151,5,138,3,"State"],[151,11,138,8],[151,12,138,8,"State"],[151,17,138,8],[151,18,138,9,"END"],[151,21,138,12],[151,24,138,15],[152,2,139,0],[152,3,139,10],[154,2,150,0],[156,2,164,0],[156,6,164,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[156,33,164,33],[156,36,164,36],[156,37,164,37],[158,2,166,0],[159,2,167,15],[159,11,167,24,"createHandler"],[159,24,167,37,"createHandler"],[159,25,167,37,"_ref"],[159,29,167,37],[159,31,176,76],[160,4,176,76],[160,8,171,2,"name"],[160,12,171,6],[160,15,171,6,"_ref"],[160,19,171,6],[160,20,171,2,"name"],[160,24,171,6],[161,6,171,6,"_ref$allowedProps"],[161,23,171,6],[161,26,171,6,"_ref"],[161,30,171,6],[161,31,172,2,"allowedProps"],[161,43,172,14],[162,6,172,2,"allowedProps"],[162,18,172,14],[162,21,172,14,"_ref$allowedProps"],[162,38,172,14],[162,52,172,17],[162,54,172,19],[162,57,172,19,"_ref$allowedProps"],[162,74,172,19],[163,6,172,19,"_ref$config"],[163,17,172,19],[163,20,172,19,"_ref"],[163,24,172,19],[163,25,173,2,"config"],[163,31,173,8],[164,6,173,2,"config"],[164,12,173,8],[164,15,173,8,"_ref$config"],[164,26,173,8],[164,40,173,11],[164,41,173,12],[164,42,173,13],[164,45,173,13,"_ref$config"],[164,56,173,13],[165,6,174,2,"transformProps"],[165,20,174,16],[165,23,174,16,"_ref"],[165,27,174,16],[165,28,174,2,"transformProps"],[165,42,174,16],[166,6,174,16,"_ref$customNativeProp"],[166,27,174,16],[166,30,174,16,"_ref"],[166,34,174,16],[166,35,175,2,"customNativeProps"],[166,52,175,19],[167,6,175,2,"customNativeProps"],[167,23,175,19],[167,26,175,19,"_ref$customNativeProp"],[167,47,175,19],[167,61,175,22],[167,63,175,24],[167,66,175,24,"_ref$customNativeProp"],[167,87,175,24],[168,4,175,24],[168,8,180,8,"Handler"],[168,15,180,15],[168,41,180,15,"_React$Component"],[168,57,180,15],[169,6,195,4],[169,15,195,4,"Handler"],[169,23,195,16,"props"],[169,28,195,48],[169,30,195,50],[170,8,195,50],[170,12,195,50,"_this"],[170,17,195,50],[171,8,195,50],[171,12,195,50,"_classCallCheck"],[171,27,195,50],[171,28,195,50,"default"],[171,35,195,50],[171,43,195,50,"Handler"],[171,50,195,50],[172,8,196,6,"_this"],[172,13,196,6],[172,20,196,6,"_callSuper"],[172,30,196,6],[172,31,196,6,"default"],[172,38,196,6],[172,46,196,6,"Handler"],[172,53,196,6],[172,56,196,12,"props"],[172,61,196,17],[173,8,196,19,"_this"],[173,13,196,19],[173,14,267,12,"onGestureHandlerEvent"],[173,35,267,33],[173,38,267,37,"event"],[173,43,267,59],[173,47,267,64],[174,10,268,6],[174,14,268,10,"event"],[174,19,268,15],[174,20,268,16,"nativeEvent"],[174,31,268,27],[174,32,268,28,"handlerTag"],[174,42,268,38],[174,47,268,43,"_this"],[174,52,268,43],[174,53,268,48,"handlerTag"],[174,63,268,58],[174,65,268,60],[175,12,269,8],[175,16,269,12],[175,23,269,19,"_this"],[175,28,269,19],[175,29,269,24,"props"],[175,34,269,29],[175,35,269,30,"onGestureEvent"],[175,49,269,44],[175,54,269,49],[175,64,269,59],[175,66,269,61],[176,14,270,10,"_this"],[176,19,270,10],[176,20,270,15,"props"],[176,25,270,20],[176,26,270,21,"onGestureEvent"],[176,40,270,35],[176,43,270,38,"event"],[176,48,270,43],[176,49,270,44],[177,12,271,8],[178,10,272,6],[178,11,272,7],[178,17,272,13],[179,12,273,8,"_this"],[179,17,273,8],[179,18,273,13,"props"],[179,23,273,18],[179,24,273,19,"onGestureHandlerEvent"],[179,45,273,40],[179,48,273,43,"event"],[179,53,273,48],[179,54,273,49],[180,10,274,6],[181,8,275,4],[181,9,275,5],[182,8,277,4],[183,8,277,4,"_this"],[183,13,277,4],[183,14,278,12,"onGestureHandlerStateChange"],[183,41,278,39],[183,44,279,6,"event"],[183,49,279,39],[183,53,280,9],[184,10,281,6],[184,14,281,10,"event"],[184,19,281,15],[184,20,281,16,"nativeEvent"],[184,31,281,27],[184,32,281,28,"handlerTag"],[184,42,281,38],[184,47,281,43,"_this"],[184,52,281,43],[184,53,281,48,"handlerTag"],[184,63,281,58],[184,65,281,60],[185,12,282,8],[185,16,282,12],[185,23,282,19,"_this"],[185,28,282,19],[185,29,282,24,"props"],[185,34,282,29],[185,35,282,30,"onHandlerStateChange"],[185,55,282,50],[185,60,282,55],[185,70,282,65],[185,72,282,67],[186,14,283,10,"_this"],[186,19,283,10],[186,20,283,15,"props"],[186,25,283,20],[186,26,283,21,"onHandlerStateChange"],[186,46,283,41],[186,49,283,44,"event"],[186,54,283,49],[186,55,283,50],[187,12,284,8],[188,12,286,8],[188,16,286,14,"state"],[188,21,286,42],[188,24,286,45,"event"],[188,29,286,50],[188,30,286,51,"nativeEvent"],[188,41,286,62],[188,42,286,63,"state"],[188,47,286,68],[189,12,287,8],[189,16,287,14,"stateEventName"],[189,30,287,28],[189,33,287,31,"stateToPropMappings"],[189,52,287,50],[189,53,287,51,"state"],[189,58,287,56],[189,59,287,57],[190,12,288,8],[190,16,288,14,"eventHandler"],[190,28,288,26],[190,31,288,29,"stateEventName"],[190,45,288,43],[190,49,288,47,"_this"],[190,54,288,47],[190,55,288,52,"props"],[190,60,288,57],[190,61,288,58,"stateEventName"],[190,75,288,72],[190,76,288,73],[191,12,289,8],[191,16,289,12,"eventHandler"],[191,28,289,24],[191,32,289,28],[191,39,289,35,"eventHandler"],[191,51,289,47],[191,56,289,52],[191,66,289,62],[191,68,289,64],[192,14,290,10,"eventHandler"],[192,26,290,22],[192,27,290,23,"event"],[192,32,290,28],[192,33,290,29],[193,12,291,8],[194,10,292,6],[194,11,292,7],[194,17,292,13],[195,12,293,8,"_this"],[195,17,293,8],[195,18,293,13,"props"],[195,23,293,18],[195,24,293,19,"onGestureHandlerStateChange"],[195,51,293,46],[195,54,293,49,"event"],[195,59,293,54],[195,60,293,55],[196,10,294,6],[197,8,295,4],[197,9,295,5],[198,8,295,5,"_this"],[198,13,295,5],[198,14,297,12,"refHandler"],[198,24,297,22],[198,27,297,26,"node"],[198,31,297,35],[198,35,297,40],[199,10,298,6,"_this"],[199,15,298,6],[199,16,298,11,"viewNode"],[199,24,298,19],[199,27,298,22,"node"],[199,31,298,26],[200,10,300,6],[200,14,300,12,"child"],[200,19,300,17],[200,22,300,20,"React"],[200,27,300,25],[200,28,300,26,"Children"],[200,36,300,34],[200,37,300,35,"only"],[200,41,300,39],[200,42,300,40,"_this"],[200,47,300,40],[200,48,300,45,"props"],[200,53,300,50],[200,54,300,51,"children"],[200,62,300,59],[200,63,300,60],[201,10,301,6],[202,10,302,6],[202,14,302,14,"ref"],[202,17,302,17],[202,20,302,27,"child"],[202,25,302,32],[202,26,302,14,"ref"],[202,29,302,17],[203,10,303,6],[203,14,303,10,"ref"],[203,17,303,13],[203,22,303,18],[203,26,303,22],[203,28,303,24],[204,12,304,8],[204,16,304,12],[204,23,304,19,"ref"],[204,26,304,22],[204,31,304,27],[204,41,304,37],[204,43,304,39],[205,14,305,10,"ref"],[205,17,305,13],[205,18,305,14,"node"],[205,22,305,18],[205,23,305,19],[206,12,306,8],[206,13,306,9],[206,19,306,15],[207,14,307,10,"ref"],[207,17,307,13],[207,18,307,14,"current"],[207,25,307,21],[207,28,307,24,"node"],[207,32,307,28],[208,12,308,8],[209,10,309,6],[210,8,310,4],[210,9,310,5],[211,8,310,5,"_this"],[211,13,310,5],[211,14,312,12,"createGestureHandler"],[211,34,312,32],[211,37,313,6,"newConfig"],[211,46,313,50],[211,50,314,9],[212,10,315,6,"_this"],[212,15,315,6],[212,16,315,11,"config"],[212,22,315,17],[212,25,315,20,"newConfig"],[212,34,315,29],[213,10,317,6,"RNGestureHandlerModule"],[213,32,317,28],[213,33,317,28,"default"],[213,40,317,28],[213,41,317,29,"createGestureHandler"],[213,61,317,49],[213,62,318,8,"name"],[213,66,318,12],[213,68,319,8,"_this"],[213,73,319,8],[213,74,319,13,"handlerTag"],[213,84,319,23],[213,86,320,8,"newConfig"],[213,95,321,6],[213,96,321,7],[214,8,322,4],[214,9,322,5],[215,8,322,5,"_this"],[215,13,322,5],[215,14,324,12,"attachGestureHandler"],[215,34,324,32],[215,37,324,36,"newViewTag"],[215,47,324,54],[215,51,324,59],[216,10,325,6,"_this"],[216,15,325,6],[216,16,325,11,"viewTag"],[216,23,325,18],[216,26,325,21,"newViewTag"],[216,36,325,31],[217,10,327,6],[217,14,327,10,"Platform"],[217,26,327,18],[217,27,327,18,"Platform"],[217,35,327,18],[217,36,327,19,"OS"],[217,38,327,21],[217,43,327,26],[217,48,327,31],[217,50,327,33],[218,12,328,8],[219,12,330,10,"RNGestureHandlerModule"],[219,34,330,32],[219,35,330,32,"default"],[219,42,330,32],[219,43,330,33,"attachGestureHandler"],[219,63,330,53],[219,64,332,10,"_this"],[219,69,332,10],[219,70,332,15,"handlerTag"],[219,80,332,25],[219,82,333,10,"newViewTag"],[219,92,333,20],[219,94,334,10,"ActionType"],[219,105,334,20],[219,106,334,20,"ActionType"],[219,116,334,20],[219,117,334,21,"JS_FUNCTION_OLD_API"],[219,136,334,40],[220,12,334,42],[221,12,335,10,"_this"],[221,17,335,10],[221,18,335,15,"propsRef"],[221,26,336,8],[221,27,336,9],[222,10,337,6],[222,11,337,7],[222,17,337,13],[223,12,338,8],[223,16,338,8,"registerOldGestureHandler"],[223,33,338,33],[223,34,338,33,"registerOldGestureHandler"],[223,59,338,33],[223,61,338,34,"_this"],[223,66,338,34],[223,67,338,39,"handlerTag"],[223,77,338,49],[223,79,338,51],[224,14,339,10,"onGestureEvent"],[224,28,339,24],[224,30,339,26,"_this"],[224,35,339,26],[224,36,339,31,"onGestureHandlerEvent"],[224,57,339,52],[225,14,340,10,"onGestureStateChange"],[225,34,340,30],[225,36,340,32,"_this"],[225,41,340,32],[225,42,340,37,"onGestureHandlerStateChange"],[226,12,341,8],[226,13,341,9],[226,14,341,10],[227,12,343,8],[227,16,343,14,"actionType"],[227,26,343,24],[227,29,343,27],[227,30,343,28],[227,36,343,34],[228,14,344,10],[228,18,344,16,"onGestureEvent"],[228,32,344,30],[228,35,344,33,"_this"],[228,40,344,33],[228,41,344,38,"props"],[228,46,344,43],[228,48,344,45,"onGestureEvent"],[228,62,344,59],[229,14,345,10],[229,18,345,16,"isGestureHandlerWorklet"],[229,41,345,39],[229,44,346,12,"onGestureEvent"],[229,58,346,26],[229,63,347,13],[229,72,347,22],[229,76,347,26,"onGestureEvent"],[229,90,347,40],[229,94,348,14],[229,115,348,35],[229,119,348,39,"onGestureEvent"],[229,133,348,53],[229,134,348,54],[230,14,349,10],[230,18,349,16,"onHandlerStateChange"],[230,38,349,36],[230,41,349,39,"_this"],[230,46,349,39],[230,47,349,44,"props"],[230,52,349,49],[230,54,349,51,"onHandlerStateChange"],[230,74,349,71],[231,14,350,10],[231,18,350,16,"isStateChangeHandlerWorklet"],[231,45,350,43],[231,48,351,12,"onHandlerStateChange"],[231,68,351,32],[231,73,352,13],[231,82,352,22],[231,86,352,26,"onHandlerStateChange"],[231,106,352,46],[231,110,353,14],[231,131,353,35],[231,135,353,39,"onHandlerStateChange"],[231,155,353,59],[231,156,353,60],[232,14,354,10],[232,18,354,16,"isReanimatedHandler"],[232,37,354,35],[232,40,355,12,"isGestureHandlerWorklet"],[232,63,355,35],[232,67,355,39,"isStateChangeHandlerWorklet"],[232,94,355,66],[233,14,356,10],[233,18,356,14,"isReanimatedHandler"],[233,37,356,33],[233,39,356,35],[234,16,357,12],[235,16,358,12],[235,23,358,19,"ActionType"],[235,34,358,29],[235,35,358,29,"ActionType"],[235,45,358,29],[235,46,358,30,"REANIMATED_WORKLET"],[235,64,358,48],[236,14,359,10],[236,15,359,11],[236,21,359,17],[236,25,359,21,"onGestureEvent"],[236,39,359,35],[236,43,359,39],[236,55,359,51],[236,59,359,55,"onGestureEvent"],[236,73,359,69],[236,75,359,71],[237,16,360,12],[238,16,361,12],[238,23,361,19,"ActionType"],[238,34,361,29],[238,35,361,29,"ActionType"],[238,45,361,29],[238,46,361,30,"NATIVE_ANIMATED_EVENT"],[238,67,361,51],[239,14,362,10],[239,15,362,11],[239,21,362,17],[240,16,363,12],[241,16,364,12],[241,23,364,19,"ActionType"],[241,34,364,29],[241,35,364,29,"ActionType"],[241,45,364,29],[241,46,364,30,"JS_FUNCTION_OLD_API"],[241,65,364,49],[242,14,365,10],[243,12,366,8],[243,13,366,9],[243,15,366,11],[243,16,366,12],[244,12,368,8,"RNGestureHandlerModule"],[244,34,368,30],[244,35,368,30,"default"],[244,42,368,30],[244,43,368,31,"attachGestureHandler"],[244,63,368,51],[244,64,369,10,"_this"],[244,69,369,10],[244,70,369,15,"handlerTag"],[244,80,369,25],[244,82,370,10,"newViewTag"],[244,92,370,20],[244,94,371,10,"actionType"],[244,104,372,8],[244,105,372,9],[245,10,373,6],[246,10,375,6],[246,14,375,6,"scheduleFlushOperations"],[246,35,375,29],[246,36,375,29,"scheduleFlushOperations"],[246,59,375,29],[246,61,375,30],[246,62,375,31],[247,8,376,4],[247,9,376,5],[248,8,376,5,"_this"],[248,13,376,5],[248,14,378,12,"updateGestureHandler"],[248,34,378,32],[248,37,379,6,"newConfig"],[248,46,379,50],[248,50,380,9],[249,10,381,6,"_this"],[249,15,381,6],[249,16,381,11,"config"],[249,22,381,17],[249,25,381,20,"newConfig"],[249,34,381,29],[250,10,383,6,"RNGestureHandlerModule"],[250,32,383,28],[250,33,383,28,"default"],[250,40,383,28],[250,41,383,29,"updateGestureHandler"],[250,61,383,49],[250,62,383,50,"_this"],[250,67,383,50],[250,68,383,55,"handlerTag"],[250,78,383,65],[250,80,383,67,"newConfig"],[250,89,383,76],[250,90,383,77],[251,10,384,6],[251,14,384,6,"scheduleFlushOperations"],[251,35,384,29],[251,36,384,29,"scheduleFlushOperations"],[251,59,384,29],[251,61,384,30],[251,62,384,31],[252,8,385,4],[252,9,385,5],[253,8,197,6,"_this"],[253,13,197,6],[253,14,197,11,"handlerTag"],[253,24,197,21],[253,27,197,24],[253,31,197,24,"getNextHandlerTag"],[253,48,197,41],[253,49,197,41,"getNextHandlerTag"],[253,66,197,41],[253,68,197,42],[253,69,197,43],[254,8,198,6,"_this"],[254,13,198,6],[254,14,198,11,"config"],[254,20,198,17],[254,23,198,20],[254,24,198,21],[254,25,198,22],[255,8,199,6,"_this"],[255,13,199,6],[255,14,199,11,"propsRef"],[255,22,199,19],[255,38,199,22,"React"],[255,43,199,27],[255,44,199,28,"createRef"],[255,53,199,37],[255,54,199,38],[255,55,199,39],[256,8,200,6,"_this"],[256,13,200,6],[256,14,200,11,"isMountedRef"],[256,26,200,23],[256,42,200,26,"React"],[256,47,200,31],[256,48,200,32,"createRef"],[256,57,200,41],[256,58,200,42],[256,59,200,43],[257,8,201,6,"_this"],[257,13,201,6],[257,14,201,11,"state"],[257,19,201,16],[257,22,201,19],[258,10,201,21,"allowTouches"],[259,8,201,34],[259,9,201,35],[260,8,202,6],[260,12,202,10,"props"],[260,17,202,15],[260,18,202,16,"id"],[260,20,202,18],[260,22,202,20],[261,10,203,8],[261,14,203,12,"handlerIDToTag"],[261,31,203,26],[261,32,203,26,"handlerIDToTag"],[261,46,203,26],[261,47,203,27,"props"],[261,52,203,32],[261,53,203,33,"id"],[261,55,203,35],[261,56,203,36],[261,61,203,41,"undefined"],[261,70,203,50],[261,72,203,52],[262,12,204,10],[262,18,204,16],[262,22,204,20,"Error"],[262,27,204,25],[262,28,204,26],[262,48,204,46,"props"],[262,53,204,51],[262,54,204,52,"id"],[262,56,204,54],[262,78,204,76],[262,79,204,77],[263,10,205,8],[264,10,206,8,"handlerIDToTag"],[264,27,206,22],[264,28,206,22,"handlerIDToTag"],[264,42,206,22],[264,43,206,23,"props"],[264,48,206,28],[264,49,206,29,"id"],[264,51,206,31],[264,52,206,32],[264,55,206,35,"_this"],[264,60,206,35],[264,61,206,40,"handlerTag"],[264,71,206,50],[265,8,207,6],[266,8,207,7],[266,15,207,7,"_this"],[266,20,207,7],[267,6,208,4],[268,6,208,5],[268,10,208,5,"_inherits"],[268,19,208,5],[268,20,208,5,"default"],[268,27,208,5],[268,29,208,5,"Handler"],[268,36,208,5],[268,38,208,5,"_React$Component"],[268,54,208,5],[269,6,208,5],[269,17,208,5,"_createClass"],[269,29,208,5],[269,30,208,5,"default"],[269,37,208,5],[269,39,208,5,"Handler"],[269,46,208,5],[270,8,208,5,"key"],[270,11,208,5],[271,8,208,5,"value"],[271,13,208,5],[271,15,210,4],[271,24,210,4,"componentDidMount"],[271,41,210,21,"componentDidMount"],[271,42,210,21],[271,44,210,24],[272,10,211,6],[272,14,211,12,"props"],[272,19,211,34],[272,22,211,37],[272,26,211,41],[272,27,211,42,"props"],[272,32,211,47],[273,10,212,6],[273,14,212,10],[273,15,212,11,"isMountedRef"],[273,27,212,23],[273,28,212,24,"current"],[273,35,212,31],[273,38,212,34],[273,42,212,38],[274,10,214,6],[274,14,214,10,"DEV_ON_ANDROID"],[274,28,214,24],[274,30,214,26],[275,12,215,8],[275,16,215,12],[275,17,215,13,"inspectorToggleListener"],[275,40,215,36],[275,43,215,39,"DeviceEventEmitter"],[275,55,215,57],[275,56,215,57,"DeviceEventEmitter"],[275,74,215,57],[275,75,215,58,"addListener"],[275,86,215,69],[275,87,216,10],[275,111,216,34],[275,113,217,10],[275,119,217,16],[276,14,218,12],[276,18,218,16],[276,19,218,17,"setState"],[276,27,218,25],[276,28,218,27,"_"],[276,29,218,28],[276,34,218,34],[277,16,218,36,"allowTouches"],[278,14,218,49],[278,15,218,50],[278,16,218,51],[278,17,218,52],[279,14,219,12],[279,18,219,16],[279,19,219,17,"update"],[279,25,219,23],[279,26,219,24,"UNRESOLVED_REFS_RETRY_LIMIT"],[279,53,219,51],[279,54,219,52],[280,12,220,10],[280,13,221,8],[280,14,221,9],[281,10,222,6],[282,10,223,6],[282,14,223,10,"hasUnresolvedRefs"],[282,31,223,27],[282,32,223,28,"props"],[282,37,223,33],[282,38,223,34],[282,40,223,36],[283,12,224,8],[284,12,225,8],[285,12,226,8],[286,12,227,8],[287,12,228,8],[288,12,229,8],[289,12,230,8],[289,16,230,8,"ghQueueMicrotask"],[289,33,230,24],[289,34,230,24,"ghQueueMicrotask"],[289,50,230,24],[289,52,230,25],[289,58,230,31],[290,14,231,10],[290,18,231,14],[290,19,231,15,"update"],[290,25,231,21],[290,26,231,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[290,53,231,49],[290,54,231,50],[291,12,232,8],[291,13,232,9],[291,14,232,10],[292,10,233,6],[293,10,235,6],[293,14,235,10],[293,15,235,11,"createGestureHandler"],[293,35,235,31],[293,36,236,8],[293,40,236,8,"filterConfig"],[293,61,236,20],[293,62,236,20,"filterConfig"],[293,74,236,20],[293,76,237,10,"transformProps"],[293,90,237,24],[293,93,237,27,"transformProps"],[293,107,237,41],[293,108,237,42],[293,112,237,46],[293,113,237,47,"props"],[293,118,237,52],[293,119,237,53],[293,122,237,56],[293,126,237,60],[293,127,237,61,"props"],[293,132,237,66],[293,134,238,10],[293,135,238,11],[293,138,238,14,"allowedProps"],[293,150,238,26],[293,152,238,28],[293,155,238,31,"customNativeProps"],[293,172,238,48],[293,173,238,49],[293,175,239,10,"config"],[293,181,240,8],[293,182,241,6],[293,183,241,7],[294,10,243,6],[294,14,243,10],[294,15,243,11,"attachGestureHandler"],[294,35,243,31],[294,36,243,32],[294,40,243,32,"findNodeHandle"],[294,61,243,46],[294,62,243,46,"findNodeHandle"],[294,76,243,46],[294,78,243,47],[294,82,243,51],[294,83,243,52,"viewNode"],[294,91,243,60],[294,92,243,71],[294,93,243,72],[294,94,243,73],[294,95,243,74],[295,8,244,4],[296,6,244,5],[297,8,244,5,"key"],[297,11,244,5],[298,8,244,5,"value"],[298,13,244,5],[298,15,246,4],[298,24,246,4,"componentDidUpdate"],[298,42,246,22,"componentDidUpdate"],[298,43,246,22],[298,45,246,25],[299,10,247,6],[299,14,247,12,"viewTag"],[299,21,247,19],[299,24,247,22],[299,28,247,22,"findNodeHandle"],[299,49,247,36],[299,50,247,36,"findNodeHandle"],[299,64,247,36],[299,66,247,37],[299,70,247,41],[299,71,247,42,"viewNode"],[299,79,247,50],[299,80,247,51],[300,10,248,6],[300,14,248,10],[300,18,248,14],[300,19,248,15,"viewTag"],[300,26,248,22],[300,31,248,27,"viewTag"],[300,38,248,34],[300,40,248,36],[301,12,249,8],[301,16,249,12],[301,17,249,13,"attachGestureHandler"],[301,37,249,33],[301,38,249,34,"viewTag"],[301,45,249,51],[301,46,249,52],[301,47,249,53],[301,48,249,54],[302,10,250,6],[303,10,251,6],[303,14,251,10],[303,15,251,11,"update"],[303,21,251,17],[303,22,251,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[303,49,251,45],[303,50,251,46],[304,8,252,4],[305,6,252,5],[306,8,252,5,"key"],[306,11,252,5],[307,8,252,5,"value"],[307,13,252,5],[307,15,254,4],[307,24,254,4,"componentWillUnmount"],[307,44,254,24,"componentWillUnmount"],[307,45,254,24],[307,47,254,27],[308,10,255,6],[308,14,255,10],[308,15,255,11,"inspectorToggleListener"],[308,38,255,34],[308,40,255,36,"remove"],[308,46,255,42],[308,47,255,43],[308,48,255,44],[309,10,256,6],[309,14,256,10],[309,15,256,11,"isMountedRef"],[309,27,256,23],[309,28,256,24,"current"],[309,35,256,31],[309,38,256,34],[309,43,256,39],[310,10,257,6,"RNGestureHandlerModule"],[310,32,257,28],[310,33,257,28,"default"],[310,40,257,28],[310,41,257,29,"dropGestureHandler"],[310,59,257,47],[310,60,257,48],[310,64,257,52],[310,65,257,53,"handlerTag"],[310,75,257,63],[310,76,257,64],[311,10,258,6],[311,14,258,6,"scheduleFlushOperations"],[311,35,258,29],[311,36,258,29,"scheduleFlushOperations"],[311,59,258,29],[311,61,258,30],[311,62,258,31],[312,10,259,6],[313,10,260,6],[313,14,260,12,"handlerID"],[313,23,260,41],[313,26,260,44],[313,30,260,48],[313,31,260,49,"props"],[313,36,260,54],[313,37,260,55,"id"],[313,39,260,57],[314,10,261,6],[314,14,261,10,"handlerID"],[314,23,261,19],[314,25,261,21],[315,12,262,8],[316,12,263,8],[316,19,263,15,"handlerIDToTag"],[316,36,263,29],[316,37,263,29,"handlerIDToTag"],[316,51,263,29],[316,52,263,30,"handlerID"],[316,61,263,39],[316,62,263,40],[317,10,264,6],[318,8,265,4],[319,6,265,5],[320,8,265,5,"key"],[320,11,265,5],[321,8,265,5,"value"],[321,13,265,5],[321,15,387,4],[321,24,387,12,"update"],[321,30,387,18,"update"],[321,31,387,19,"remainingTries"],[321,45,387,41],[321,47,387,43],[322,10,388,6],[322,14,388,10],[322,15,388,11],[322,19,388,15],[322,20,388,16,"isMountedRef"],[322,32,388,28],[322,33,388,29,"current"],[322,40,388,36],[322,42,388,38],[323,12,389,8],[324,10,390,6],[325,10,392,6],[325,14,392,12,"props"],[325,19,392,34],[325,22,392,37],[325,26,392,41],[325,27,392,42,"props"],[325,32,392,47],[327,10,394,6],[328,10,395,6],[329,10,396,6],[330,10,397,6],[330,14,397,10,"hasUnresolvedRefs"],[330,31,397,27],[330,32,397,28,"props"],[330,37,397,33],[330,38,397,34],[330,42,397,38,"remainingTries"],[330,56,397,52],[330,59,397,55],[330,60,397,56],[330,62,397,58],[331,12,398,8],[331,16,398,8,"ghQueueMicrotask"],[331,33,398,24],[331,34,398,24,"ghQueueMicrotask"],[331,50,398,24],[331,52,398,25],[331,58,398,31],[332,14,399,10],[332,18,399,14],[332,19,399,15,"update"],[332,25,399,21],[332,26,399,22,"remainingTries"],[332,40,399,36],[332,43,399,39],[332,44,399,40],[332,45,399,41],[333,12,400,8],[333,13,400,9],[333,14,400,10],[334,10,401,6],[334,11,401,7],[334,17,401,13],[335,12,402,8],[335,16,402,14,"newConfig"],[335,25,402,23],[335,28,402,26],[335,32,402,26,"filterConfig"],[335,53,402,38],[335,54,402,38,"filterConfig"],[335,66,402,38],[335,68,403,10,"transformProps"],[335,82,403,24],[335,85,403,27,"transformProps"],[335,99,403,41],[335,100,403,42],[335,104,403,46],[335,105,403,47,"props"],[335,110,403,52],[335,111,403,53],[335,114,403,56],[335,118,403,60],[335,119,403,61,"props"],[335,124,403,66],[335,126,404,10],[335,127,404,11],[335,130,404,14,"allowedProps"],[335,142,404,26],[335,144,404,28],[335,147,404,31,"customNativeProps"],[335,164,404,48],[335,165,404,49],[335,167,405,10,"config"],[335,173,406,8],[335,174,406,9],[336,12,407,8],[336,16,407,12],[336,17,407,13],[336,21,407,13,"deepEqual"],[336,30,407,22],[336,31,407,22,"default"],[336,38,407,22],[336,40,407,23],[336,44,407,27],[336,45,407,28,"config"],[336,51,407,34],[336,53,407,36,"newConfig"],[336,62,407,45],[336,63,407,46],[336,65,407,48],[337,14,408,10],[337,18,408,14],[337,19,408,15,"updateGestureHandler"],[337,39,408,35],[337,40,408,36,"newConfig"],[337,49,408,45],[337,50,408,46],[338,12,409,8],[339,10,410,6],[340,8,411,4],[341,6,411,5],[342,8,411,5,"key"],[342,11,411,5],[343,8,411,5,"value"],[343,13,411,5],[343,15,413,4],[343,24,413,4,"setNativeProps"],[343,38,413,18,"setNativeProps"],[343,39,413,19,"updates"],[343,46,413,31],[343,48,413,33],[344,10,414,6],[344,14,414,12,"mergedProps"],[344,25,414,23],[344,28,414,26],[345,12,414,28],[345,15,414,31],[345,19,414,35],[345,20,414,36,"props"],[345,25,414,41],[346,12,414,43],[346,15,414,46,"updates"],[347,10,414,54],[347,11,414,55],[348,10,415,6],[348,14,415,12,"newConfig"],[348,23,415,21],[348,26,415,24],[348,30,415,24,"filterConfig"],[348,51,415,36],[348,52,415,36,"filterConfig"],[348,64,415,36],[348,66,416,8,"transformProps"],[348,80,416,22],[348,83,416,25,"transformProps"],[348,97,416,39],[348,98,416,40,"mergedProps"],[348,109,416,51],[348,110,416,52],[348,113,416,55,"mergedProps"],[348,124,416,66],[348,126,417,8],[348,127,417,9],[348,130,417,12,"allowedProps"],[348,142,417,24],[348,144,417,26],[348,147,417,29,"customNativeProps"],[348,164,417,46],[348,165,417,47],[348,167,418,8,"config"],[348,173,419,6],[348,174,419,7],[349,10,420,6],[349,14,420,10],[349,15,420,11,"updateGestureHandler"],[349,35,420,31],[349,36,420,32,"newConfig"],[349,45,420,41],[349,46,420,42],[350,8,421,4],[351,6,421,5],[352,8,421,5,"key"],[352,11,421,5],[353,8,421,5,"value"],[353,13,421,5],[353,15,423,4],[353,24,423,4,"render"],[353,30,423,10,"render"],[353,31,423,10],[353,33,423,13],[354,10,424,6],[354,14,424,10,"__DEV__"],[354,21,424,17],[354,25,424,21],[354,26,424,22],[354,30,424,26],[354,31,424,27,"context"],[354,38,424,34],[354,42,424,38],[354,43,424,39],[354,47,424,39,"isJestEnv"],[354,53,424,48],[354,54,424,48,"isJestEnv"],[354,63,424,48],[354,65,424,49],[354,66,424,50],[354,70,424,54,"Platform"],[354,82,424,62],[354,83,424,62,"Platform"],[354,91,424,62],[354,92,424,63,"OS"],[354,94,424,65],[354,99,424,70],[354,104,424,75],[354,106,424,77],[355,12,425,8],[355,18,425,14],[355,22,425,18,"Error"],[355,27,425,23],[355,28,426,10,"name"],[355,32,426,14],[355,35,427,12],[355,236,428,8],[355,237,428,9],[356,10,429,6],[357,10,431,6],[357,14,431,10,"gestureEventHandler"],[357,33,431,29],[357,36,431,32],[357,40,431,36],[357,41,431,37,"onGestureHandlerEvent"],[357,62,431,58],[358,10,432,6],[360,10,437,6],[360,14,437,6,"_this$props"],[360,25,437,6],[360,28,438,8],[360,32,438,12],[360,33,438,13,"props"],[360,38,438,18],[361,12,437,14,"onGestureEvent"],[361,26,437,28],[361,29,437,28,"_this$props"],[361,40,437,28],[361,41,437,14,"onGestureEvent"],[361,55,437,28],[362,12,437,30,"onGestureHandlerEvent"],[362,33,437,51],[362,36,437,51,"_this$props"],[362,47,437,51],[362,48,437,30,"onGestureHandlerEvent"],[362,69,437,51],[363,10,439,6],[363,14,439,10,"onGestureEvent"],[363,28,439,24],[363,32,439,28],[363,39,439,35,"onGestureEvent"],[363,53,439,49],[363,58,439,54],[363,68,439,64],[363,70,439,66],[364,12,440,8],[365,12,441,8],[366,12,442,8],[367,12,443,8],[367,16,443,12,"onGestureHandlerEvent"],[367,37,443,33],[367,39,443,35],[368,14,444,10],[368,20,444,16],[368,24,444,20,"Error"],[368,29,444,25],[368,30,445,12],[368,103,446,10],[368,104,446,11],[369,12,447,8],[370,12,448,8,"gestureEventHandler"],[370,31,448,27],[370,34,448,30,"onGestureEvent"],[370,48,448,44],[371,10,449,6],[371,11,449,7],[371,17,449,13],[372,12,450,8],[372,16,451,10,"onGestureHandlerEvent"],[372,37,451,31],[372,41,452,10],[372,48,452,17,"onGestureHandlerEvent"],[372,69,452,38],[372,74,452,43],[372,84,452,53],[372,86,453,10],[373,14,454,10],[373,20,454,16],[373,24,454,20,"Error"],[373,29,454,25],[373,30,455,12],[373,103,456,10],[373,104,456,11],[374,12,457,8],[375,10,458,6],[376,10,460,6],[376,14,460,10,"gestureStateEventHandler"],[376,38,460,34],[376,41,460,37],[376,45,460,41],[376,46,460,42,"onGestureHandlerStateChange"],[376,73,460,69],[377,10,461,6],[379,10,466,6],[379,14,466,6,"_this$props2"],[379,26,466,6],[379,29,469,40],[379,33,469,44],[379,34,469,45,"props"],[379,39,469,50],[380,12,467,8,"onHandlerStateChange"],[380,32,467,28],[380,35,467,28,"_this$props2"],[380,47,467,28],[380,48,467,8,"onHandlerStateChange"],[380,68,467,28],[381,12,468,8,"onGestureHandlerStateChange"],[381,39,468,35],[381,42,468,35,"_this$props2"],[381,54,468,35],[381,55,468,8,"onGestureHandlerStateChange"],[381,82,468,35],[382,10,470,6],[382,14,470,10,"onHandlerStateChange"],[382,34,470,30],[382,38,470,34],[382,45,470,41,"onHandlerStateChange"],[382,65,470,61],[382,70,470,66],[382,80,470,76],[382,82,470,78],[383,12,471,8],[384,12,472,8],[385,12,473,8],[386,12,474,8],[386,16,474,12,"onGestureHandlerStateChange"],[386,43,474,39],[386,45,474,41],[387,14,475,10],[387,20,475,16],[387,24,475,20,"Error"],[387,29,475,25],[387,30,476,12],[387,103,477,10],[387,104,477,11],[388,12,478,8],[389,12,479,8,"gestureStateEventHandler"],[389,36,479,32],[389,39,479,35,"onHandlerStateChange"],[389,59,479,55],[390,10,480,6],[390,11,480,7],[390,17,480,13],[391,12,481,8],[391,16,482,10,"onGestureHandlerStateChange"],[391,43,482,37],[391,47,483,10],[391,54,483,17,"onGestureHandlerStateChange"],[391,81,483,44],[391,86,483,49],[391,96,483,59],[391,98,484,10],[392,14,485,10],[392,20,485,16],[392,24,485,20,"Error"],[392,29,485,25],[392,30,486,12],[392,103,487,10],[392,104,487,11],[393,12,488,8],[394,10,489,6],[395,10,490,6],[395,14,490,12,"events"],[395,20,490,18],[395,23,490,21],[396,12,491,8,"onGestureHandlerEvent"],[396,33,491,29],[396,35,491,31],[396,39,491,35],[396,40,491,36,"state"],[396,45,491,41],[396,46,491,42,"allowTouches"],[396,58,491,54],[396,61,492,12,"gestureEventHandler"],[396,80,492,31],[396,83,493,12,"undefined"],[396,92,493,21],[397,12,494,8,"onGestureHandlerStateChange"],[397,39,494,35],[397,41,494,37],[397,45,494,41],[397,46,494,42,"state"],[397,51,494,47],[397,52,494,48,"allowTouches"],[397,64,494,60],[397,67,495,12,"gestureStateEventHandler"],[397,91,495,36],[397,94,496,12,"undefined"],[398,10,497,6],[398,11,497,7],[399,10,499,6],[399,14,499,10],[399,15,499,11,"propsRef"],[399,23,499,19],[399,24,499,20,"current"],[399,31,499,27],[399,34,499,30,"events"],[399,40,499,36],[400,10,501,6],[400,14,501,10,"child"],[400,19,501,20],[400,22,501,23],[400,26,501,27],[401,10,502,6],[401,14,502,10],[402,12,503,8,"child"],[402,17,503,13],[402,20,503,16,"React"],[402,25,503,21],[402,26,503,22,"Children"],[402,34,503,30],[402,35,503,31,"only"],[402,39,503,35],[402,40,503,36],[402,44,503,40],[402,45,503,41,"props"],[402,50,503,46],[402,51,503,47,"children"],[402,59,503,55],[402,60,503,56],[403,10,504,6],[403,11,504,7],[403,12,504,8],[403,19,504,15,"e"],[403,20,504,16],[403,22,504,18],[404,12,505,8],[404,18,505,14],[404,22,505,18,"Error"],[404,27,505,23],[404,28,506,10],[404,32,506,10,"tagMessage"],[404,38,506,20],[404,39,506,20,"tagMessage"],[404,49,506,20],[404,51,507,12],[404,54,507,15,"name"],[404,58,507,19],[404,214,508,10],[404,215,509,8],[404,216,509,9],[405,10,510,6],[406,10,512,6],[406,14,512,10,"grandChildren"],[406,27,512,23],[406,30,512,26,"child"],[406,35,512,31],[406,36,512,32,"props"],[406,41,512,37],[406,42,512,38,"children"],[406,50,512,46],[407,10,513,6],[407,14,514,8,"__DEV__"],[407,21,514,15],[407,25,515,8,"child"],[407,30,515,13],[407,31,515,14,"type"],[407,35,515,18],[407,40,516,9,"child"],[407,45,516,14],[407,46,516,15,"type"],[407,50,516,19],[407,55,516,24],[407,79,516,48],[407,83,517,10,"child"],[407,88,517,15],[407,89,517,16,"type"],[407,93,517,20],[407,94,517,21,"name"],[407,98,517,25],[407,103,517,30],[407,109,517,36],[407,113,518,10,"child"],[407,118,518,15],[407,119,518,16,"type"],[407,123,518,20],[407,124,518,21,"displayName"],[407,135,518,32],[407,140,518,37],[407,146,518,43],[407,147,518,44],[407,149,519,8],[408,12,520,8,"grandChildren"],[408,25,520,21],[408,28,520,24,"React"],[408,33,520,29],[408,34,520,30,"Children"],[408,42,520,38],[408,43,520,39,"toArray"],[408,50,520,46],[408,51,520,47,"grandChildren"],[408,64,520,60],[408,65,520,61],[409,12,521,8,"grandChildren"],[409,25,521,21],[409,26,521,22,"push"],[409,30,521,26],[409,44,522,10],[409,48,522,10,"_reactJsxDevRuntime"],[409,67,522,10],[409,68,522,10,"jsxDEV"],[409,74,522,10],[409,76,522,11,"_PressabilityDebugView"],[409,98,522,32],[409,99,522,32,"PressabilityDebugView"],[409,120,522,32],[410,14,524,12,"color"],[410,19,524,17],[410,21,524,18],[410,40,524,37],[411,14,525,12,"hitSlop"],[411,21,525,19],[411,23,525,21,"child"],[411,28,525,26],[411,29,525,27,"props"],[411,34,525,32],[411,35,525,33,"hitSlop"],[412,12,525,41],[412,15,523,16],[412,38,523,39],[413,14,523,39,"fileName"],[413,22,523,39],[413,24,523,39,"_jsxFileName"],[413,36,523,39],[414,14,523,39,"lineNumber"],[414,24,523,39],[415,14,523,39,"columnNumber"],[415,26,523,39],[416,12,523,39],[416,19,526,11],[416,20,527,8],[416,21,527,9],[417,10,528,6],[418,10,530,6],[418,30,530,13,"React"],[418,35,530,18],[418,36,530,19,"cloneElement"],[418,48,530,31],[418,49,531,8,"child"],[418,54,531,13],[418,56,532,8],[419,12,533,10,"ref"],[419,15,533,13],[419,17,533,15],[419,21,533,19],[419,22,533,20,"refHandler"],[419,32,533,30],[420,12,534,10,"collapsable"],[420,23,534,21],[420,25,534,23],[420,30,534,28],[421,12,535,10],[421,16,535,14],[421,20,535,14,"isJestEnv"],[421,26,535,23],[421,27,535,23,"isJestEnv"],[421,36,535,23],[421,38,535,24],[421,39,535,25],[421,42,536,14],[422,14,537,16,"handlerType"],[422,25,537,27],[422,27,537,29,"name"],[422,31,537,33],[423,14,538,16,"handlerTag"],[423,24,538,26],[423,26,538,28],[423,30,538,32],[423,31,538,33,"handlerTag"],[424,12,539,14],[424,13,539,15],[424,16,540,14],[424,17,540,15],[424,18,540,16],[424,19,540,17],[425,12,541,10,"testID"],[425,18,541,16],[425,20,541,18],[425,24,541,22],[425,25,541,23,"props"],[425,30,541,28],[425,31,541,29,"testID"],[425,37,541,35],[425,41,541,39,"child"],[425,46,541,44],[425,47,541,45,"props"],[425,52,541,50],[425,53,541,51,"testID"],[425,59,541,57],[426,12,542,10],[426,15,542,13,"events"],[427,10,543,8],[427,11,543,9],[427,13,544,8,"grandChildren"],[427,26,545,6],[427,27,545,7],[428,8,546,4],[429,6,546,5],[430,4,546,5],[430,6,180,24,"React"],[430,11,180,29],[430,12,180,30,"Component"],[430,21,180,39],[431,4,180,8,"Handler"],[431,11,180,15],[431,12,184,11,"displayName"],[431,23,184,22],[431,26,184,25,"name"],[431,30,184,29],[432,4,180,8,"Handler"],[432,11,180,15],[432,12,185,11,"contextType"],[432,23,185,22],[432,26,185,25,"GestureHandlerRootViewContext"],[432,55,185,54],[432,56,185,54,"default"],[432,63,185,54],[433,4,548,2],[433,11,548,9,"Handler"],[433,18,548,16],[434,2,549,0],[435,0,549,1],[435,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCCyF;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIO;GJE;AKM;kBCI;qBCI,8BD;GDC;CLE;eQqC;ECa;ICe;KDa;IEE;UPO;0BQC,yBR;WOE;yBEU;SFE;KFY;IKE;KLM;IME;KNW;oCOE;KPQ;0CQG;KRiB;yBSE;KTa;mCUE;KVU;mCWE;4BnBmB;SmBuB;KXU;mCYE;KZO;IaE;yBTW;SSE;KbW;IcE;KdQ;IeE;Kf2H;GDC;CRE"},"hasCjsExports":false},"type":"js/module"}]}