{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/callSuper","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"378KbBHdmndC3iMXZ2Ix8oB3LeE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":71,"index":71}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":72},"end":{"line":8,"column":19,"index":181}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"],"imports":1}},{"name":"./reanimatedWrapper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":182},"end":{"line":9,"column":62,"index":244}}],"key":"mbESMMm9nDr2Pm9c9N9QWtHIGDg=","exportNames":["*"],"imports":1}},{"name":"../handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":245},"end":{"line":10,"column":73,"index":318}}],"key":"ko+kACdA3Mfi5BxdyOfWCSrdI5A=","exportNames":["*"],"imports":1}},{"name":"../../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":319},"end":{"line":11,"column":66,"index":385}}],"key":"lbDx5uBORZMwAfEDZ4RK/JFqejI=","exportNames":["*"],"imports":1}},{"name":"../gestureHandlerCommon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":386},"end":{"line":23,"column":33,"index":653}}],"key":"MjK9KjEEjlxVuAtph0tjRUpQwsI=","exportNames":["*"],"imports":1}},{"name":"./gestureStateManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":654},"end":{"line":27,"column":31,"index":744}}],"key":"43AIY0kxTL+QZqg6gpeYS2tWh3Y=","exportNames":["*"],"imports":1}},{"name":"../FlingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":28,"column":0,"index":745},"end":{"line":28,"column":66,"index":811}}],"key":"q1L+VC3LBNElc+YLxgqQqzNKKOs=","exportNames":["*"],"imports":1}},{"name":"../ForceTouchGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":29,"column":0,"index":812},"end":{"line":29,"column":76,"index":888}}],"key":"N/VYN298KZAq/hJbqkhfZll/mSc=","exportNames":["*"],"imports":1}},{"name":"../LongPressGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":889},"end":{"line":30,"column":74,"index":963}}],"key":"ocuLnMO2jPYwVR8PGqW7UkEh97I=","exportNames":["*"],"imports":1}},{"name":"../PanGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":31,"column":0,"index":964},"end":{"line":34,"column":30,"index":1067}}],"key":"lSbbYM3hHtHq8dfAMZ+7pgtUZD4=","exportNames":["*"],"imports":1}},{"name":"../TapGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":35,"column":0,"index":1068},"end":{"line":35,"column":62,"index":1130}}],"key":"bF5mf93BLzjpT35GYgE1VZQ7v9k=","exportNames":["*"],"imports":1}},{"name":"./hoverGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":36,"column":0,"index":1131},"end":{"line":36,"column":58,"index":1189}}],"key":"+OU9Hr4DiheWQiFQL42cwzfCmfI=","exportNames":["*"],"imports":1}},{"name":"../../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":37,"column":0,"index":1190},"end":{"line":37,"column":36,"index":1226}}],"key":"WEWPBXLBFeeryzJLF/iqxrLBTrA=","exportNames":["*"],"imports":1}},{"name":"../../TouchEventType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":38,"column":0,"index":1227},"end":{"line":38,"column":54,"index":1281}}],"key":"gRi5aG9FyEb9/VJwo00LvbUmVMU=","exportNames":["*"],"imports":1}},{"name":"../../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":40,"column":0,"index":1338},"end":{"line":40,"column":46,"index":1384}}],"key":"zBc2A9gEK6+GYfyzo7hgaHixWCY=","exportNames":["*"],"imports":1}},{"name":"../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":41,"column":0,"index":1385},"end":{"line":41,"column":62,"index":1447}}],"key":"ByXat9lt9duIJLDmSeH0V+tRq1s=","exportNames":["*"],"imports":1}},{"name":"../../getReactNativeVersion","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":42,"column":0,"index":1448},"end":{"line":42,"column":68,"index":1516}}],"key":"lKhAf+kH4zO7uLYezxGGiAO7i9Q=","exportNames":["*"],"imports":1}},{"name":"../../getShadowNodeFromRef","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":43,"column":0,"index":1517},"end":{"line":43,"column":66,"index":1583}}],"key":"nvcZq+bKME4qcyJsQiZ29uN/jCw=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":44,"column":0,"index":1584},"end":{"line":44,"column":40,"index":1624}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./eventReceiver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":46,"column":0,"index":1704},"end":{"line":46,"column":56,"index":1760}}],"key":"yl7fUG0cP61ECbNus7D+HFl3ZE8=","exportNames":["*"],"imports":1}},{"name":"../../RNRenderer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":47,"column":0,"index":1761},"end":{"line":47,"column":46,"index":1807}}],"key":"DGWv1kcbW1ZQTiTFoqFCb82I7Ao=","exportNames":["*"],"imports":1}},{"name":"../../EnableNewWebImplementation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":48,"column":0,"index":1808},"end":{"line":48,"column":81,"index":1889}}],"key":"oz/NBHk+QT5n1Q4i5V1ckjuLKFQ=","exportNames":["*"],"imports":1}},{"name":"../NativeViewGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":49,"column":0,"index":1890},"end":{"line":49,"column":76,"index":1966}}],"key":"iKldTsaaStzPQ54HAfiY9NkXebw=","exportNames":["*"],"imports":1}},{"name":"../../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":50,"column":0,"index":1967},"end":{"line":50,"column":80,"index":2047}}],"key":"gB0YBSauh8kxyfc4wV4HM4M+epg=","exportNames":["*"],"imports":1}},{"name":"../../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":51,"column":0,"index":2048},"end":{"line":51,"column":58,"index":2106}}],"key":"oe1kVKvgBNFSaqooLTLG5bTkW6Q=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"GestureDetector\", {\n    enumerable: true,\n    get: function () {\n      return GestureDetector;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _babelRuntimeHelpersCallSuper = require(_dependencyMap[2], \"@babel/runtime/helpers/callSuper\");\n  var _callSuper = _interopDefault(_babelRuntimeHelpersCallSuper);\n  var _babelRuntimeHelpersInherits = require(_dependencyMap[3], \"@babel/runtime/helpers/inherits\");\n  var _inherits = _interopDefault(_babelRuntimeHelpersInherits);\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[4], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[5], \"react\");\n  var React = _interopDefault(_react);\n  var _gesture2 = require(_dependencyMap[6], \"./gesture\");\n  var _reanimatedWrapper = require(_dependencyMap[7], \"./reanimatedWrapper\");\n  var _handlersRegistry = require(_dependencyMap[8], \"../handlersRegistry\");\n  var _RNGestureHandlerModule = require(_dependencyMap[9], \"../../RNGestureHandlerModule\");\n  var RNGestureHandlerModule = _interopDefault(_RNGestureHandlerModule);\n  var _gestureHandlerCommon = require(_dependencyMap[10], \"../gestureHandlerCommon\");\n  var _gestureStateManager = require(_dependencyMap[11], \"./gestureStateManager\");\n  var _FlingGestureHandler = require(_dependencyMap[12], \"../FlingGestureHandler\");\n  var _ForceTouchGestureHandler = require(_dependencyMap[13], \"../ForceTouchGestureHandler\");\n  var _LongPressGestureHandler = require(_dependencyMap[14], \"../LongPressGestureHandler\");\n  var _PanGestureHandler = require(_dependencyMap[15], \"../PanGestureHandler\");\n  var _TapGestureHandler = require(_dependencyMap[16], \"../TapGestureHandler\");\n  var _hoverGesture = require(_dependencyMap[17], \"./hoverGesture\");\n  var _State = require(_dependencyMap[18], \"../../State\");\n  var _TouchEventType = require(_dependencyMap[19], \"../../TouchEventType\");\n  var _ActionType = require(_dependencyMap[20], \"../../ActionType\");\n  var _utils = require(_dependencyMap[21], \"../../utils\");\n  var _getReactNativeVersion = require(_dependencyMap[22], \"../../getReactNativeVersion\");\n  var _getShadowNodeFromRef = require(_dependencyMap[23], \"../../getShadowNodeFromRef\");\n  var _reactNative = require(_dependencyMap[24], \"react-native\");\n  var _eventReceiver = require(_dependencyMap[25], \"./eventReceiver\");\n  var _RNRenderer = require(_dependencyMap[26], \"../../RNRenderer\");\n  var _EnableNewWebImplementation = require(_dependencyMap[27], \"../../EnableNewWebImplementation\");\n  var _NativeViewGestureHandler = require(_dependencyMap[28], \"../NativeViewGestureHandler\");\n  var _GestureHandlerRootViewContext = require(_dependencyMap[29], \"../../GestureHandlerRootViewContext\");\n  var GestureHandlerRootViewContext = _interopDefault(_GestureHandlerRootViewContext);\n  var _ghQueueMicrotask = require(_dependencyMap[30], \"../../ghQueueMicrotask\");\n  var _reactJsxDevRuntime = require(_dependencyMap[31], \"react/jsx-dev-runtime\");\n  var ALLOWED_PROPS = [..._gestureHandlerCommon.baseGestureHandlerWithMonitorProps, ..._TapGestureHandler.tapGestureHandlerProps, ..._PanGestureHandler.panGestureHandlerProps, ..._PanGestureHandler.panGestureHandlerCustomNativeProps, ..._LongPressGestureHandler.longPressGestureHandlerProps, ..._ForceTouchGestureHandler.forceTouchGestureHandlerProps, ..._FlingGestureHandler.flingGestureHandlerProps, ..._hoverGesture.hoverGestureHandlerProps, ..._NativeViewGestureHandler.nativeViewGestureHandlerProps];\n  function convertToHandlerTag(ref) {\n    if (typeof ref === 'number') {\n      return ref;\n    } else if (ref instanceof _gesture2.BaseGesture) {\n      return ref.handlerTag;\n    } else {\n      // @ts-ignore in this case it should be a ref either to gesture object or\n      // a gesture handler component, in both cases handlerTag property exists\n      return ref.current?.handlerTag ?? -1;\n    }\n  }\n  function extractValidHandlerTags(interactionGroup) {\n    return interactionGroup?.map(convertToHandlerTag)?.filter(tag => tag > 0) ?? [];\n  }\n  function dropHandlers(preparedGesture) {\n    for (var handler of preparedGesture.config) {\n      RNGestureHandlerModule.default.dropGestureHandler(handler.handlerTag);\n      (0, _handlersRegistry.unregisterHandler)(handler.handlerTag, handler.config.testId);\n    }\n    (0, _gestureHandlerCommon.scheduleFlushOperations)();\n  }\n  function checkGestureCallbacksForWorklets(gesture) {\n    // if a gesture is explicitly marked to run on the JS thread there is no need to check\n    // if callbacks are worklets as the user is aware they will be ran on the JS thread\n    if (gesture.config.runOnJS) {\n      return;\n    }\n    var areSomeNotWorklets = gesture.handlers.isWorklet.includes(false);\n    var areSomeWorklets = gesture.handlers.isWorklet.includes(true);\n\n    // if some of the callbacks are worklets and some are not, and the gesture is not\n    // explicitly marked with `.runOnJS(true)` show an error\n    if (areSomeNotWorklets && areSomeWorklets) {\n      console.error((0, _utils.tagMessage)(`Some of the callbacks in the gesture are worklets and some are not. Either make sure that all calbacks are marked as 'worklet' if you wish to run them on the UI thread or use '.runOnJS(true)' modifier on the gesture explicitly to run all callbacks on the JS thread.`));\n    }\n  }\n  function attachHandlers(_ref) {\n    var preparedGesture = _ref.preparedGesture,\n      gestureConfig = _ref.gestureConfig,\n      gesture = _ref.gesture,\n      viewTag = _ref.viewTag,\n      webEventHandlersRef = _ref.webEventHandlersRef,\n      mountedRef = _ref.mountedRef;\n    if (!preparedGesture.firstExecution) {\n      gestureConfig.initialize();\n    } else {\n      preparedGesture.firstExecution = false;\n    }\n\n    // use queueMicrotask to extract handlerTags, because all refs should be initialized\n    // when it's ran\n    (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n      if (!mountedRef.current) {\n        return;\n      }\n      gestureConfig.prepare();\n    });\n    for (var handler of gesture) {\n      checkGestureCallbacksForWorklets(handler);\n      RNGestureHandlerModule.default.createGestureHandler(handler.handlerName, handler.handlerTag, (0, _gestureHandlerCommon.filterConfig)(handler.config, ALLOWED_PROPS));\n      (0, _handlersRegistry.registerHandler)(handler.handlerTag, handler, handler.config.testId);\n    }\n\n    // use queueMicrotask to extract handlerTags, because all refs should be initialized\n    // when it's ran\n    (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n      if (!mountedRef.current) {\n        return;\n      }\n      for (var _handler of gesture) {\n        var requireToFail = [];\n        if (_handler.config.requireToFail) {\n          requireToFail = extractValidHandlerTags(_handler.config.requireToFail);\n        }\n        var simultaneousWith = [];\n        if (_handler.config.simultaneousWith) {\n          simultaneousWith = extractValidHandlerTags(_handler.config.simultaneousWith);\n        }\n        var blocksHandlers = [];\n        if (_handler.config.blocksHandlers) {\n          blocksHandlers = extractValidHandlerTags(_handler.config.blocksHandlers);\n        }\n        RNGestureHandlerModule.default.updateGestureHandler(_handler.handlerTag, (0, _gestureHandlerCommon.filterConfig)(_handler.config, ALLOWED_PROPS, {\n          simultaneousHandlers: simultaneousWith,\n          waitFor: requireToFail,\n          blocksHandlers: blocksHandlers\n        }));\n      }\n      (0, _gestureHandlerCommon.scheduleFlushOperations)();\n    });\n    preparedGesture.config = gesture;\n    for (var _gesture of preparedGesture.config) {\n      var actionType = _gesture.shouldUseReanimated ? _ActionType.ActionType.REANIMATED_WORKLET : _ActionType.ActionType.JS_FUNCTION_NEW_API;\n      if (_reactNative.Platform.OS === 'web') {\n        RNGestureHandlerModule.default.attachGestureHandler(_gesture.handlerTag, viewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n        // ignored on web\n        webEventHandlersRef);\n      } else {\n        RNGestureHandlerModule.default.attachGestureHandler(_gesture.handlerTag, viewTag, actionType);\n      }\n    }\n    if (preparedGesture.animatedHandlers) {\n      var isAnimatedGesture = g => g.shouldUseReanimated;\n      preparedGesture.animatedHandlers.value = gesture.filter(isAnimatedGesture).map(g => g.handlers);\n    }\n  }\n  function updateHandlers(preparedGesture, gestureConfig, gesture, mountedRef) {\n    gestureConfig.prepare();\n    for (var i = 0; i < gesture.length; i++) {\n      var handler = preparedGesture.config[i];\n      checkGestureCallbacksForWorklets(handler);\n\n      // only update handlerTag when it's actually different, it may be the same\n      // if gesture config object is wrapped with useMemo\n      if (gesture[i].handlerTag !== handler.handlerTag) {\n        gesture[i].handlerTag = handler.handlerTag;\n        gesture[i].handlers.handlerTag = handler.handlerTag;\n      }\n    }\n\n    // use queueMicrotask to extract handlerTags, because when it's ran, all refs should be updated\n    // and handlerTags in BaseGesture references should be updated in the loop above (we need to wait\n    // in case of external relations)\n    (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n      if (!mountedRef.current) {\n        return;\n      }\n      for (var _i = 0; _i < gesture.length; _i++) {\n        var _handler2 = preparedGesture.config[_i];\n        _handler2.config = gesture[_i].config;\n        _handler2.handlers = gesture[_i].handlers;\n        var requireToFail = extractValidHandlerTags(_handler2.config.requireToFail);\n        var simultaneousWith = extractValidHandlerTags(_handler2.config.simultaneousWith);\n        RNGestureHandlerModule.default.updateGestureHandler(_handler2.handlerTag, (0, _gestureHandlerCommon.filterConfig)(_handler2.config, ALLOWED_PROPS, {\n          simultaneousHandlers: simultaneousWith,\n          waitFor: requireToFail\n        }));\n        (0, _handlersRegistry.registerHandler)(_handler2.handlerTag, _handler2, _handler2.config.testId);\n      }\n      if (preparedGesture.animatedHandlers) {\n        var previousHandlersValue = preparedGesture.animatedHandlers.value ?? [];\n        var newHandlersValue = preparedGesture.config.filter(g => g.shouldUseReanimated) // ignore gestures that shouldn't run on UI\n        .map(g => g.handlers);\n\n        // if amount of gesture configs changes, we need to update the callbacks in shared value\n        var shouldUpdateSharedValue = previousHandlersValue.length !== newHandlersValue.length;\n        if (!shouldUpdateSharedValue) {\n          // if the amount is the same, we need to check if any of the configs inside has changed\n          for (var _i2 = 0; _i2 < newHandlersValue.length; _i2++) {\n            if (\n            // we can use the `gestureId` prop as it's unique for every config instance\n            newHandlersValue[_i2].gestureId !== previousHandlersValue[_i2].gestureId) {\n              shouldUpdateSharedValue = true;\n              break;\n            }\n          }\n        }\n        if (shouldUpdateSharedValue) {\n          preparedGesture.animatedHandlers.value = newHandlersValue;\n        }\n      }\n      (0, _gestureHandlerCommon.scheduleFlushOperations)();\n    });\n  }\n  function needsToReattach(preparedGesture, gesture) {\n    if (gesture.length !== preparedGesture.config.length) {\n      return true;\n    }\n    for (var i = 0; i < gesture.length; i++) {\n      if (gesture[i].handlerName !== preparedGesture.config[i].handlerName || gesture[i].shouldUseReanimated !== preparedGesture.config[i].shouldUseReanimated) {\n        return true;\n      }\n    }\n    return false;\n  }\n  var _worklet_13883357260557_init_data = {\n    code: \"function isStateChangeEvent(event){return event.oldState!=null;}\",\n    location: \"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"isStateChangeEvent\\\",\\\"event\\\",\\\"oldState\\\"],\\\"sources\\\":[\\\"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\\\"],\\\"mappings\\\":\\\"AAqWA,SAAAA,kBAASA,CACPC,KAAA,CACD,CAGC,MAAO,CAAAA,KAAK,CAACC,QAAQ,EAAI,IAAI,CAC/B\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.10.1\"\n  };\n  var isStateChangeEvent = function () {\n    var _e = [new global.Error(), 1, -27];\n    var isStateChangeEvent = function (event) {\n      // @ts-ignore Yes, the oldState prop is missing on GestureTouchEvent, that's the point\n      return event.oldState != null;\n    };\n    isStateChangeEvent.__closure = {};\n    isStateChangeEvent.__workletHash = 13883357260557;\n    isStateChangeEvent.__initData = _worklet_13883357260557_init_data;\n    isStateChangeEvent.__stackDetails = _e;\n    return isStateChangeEvent;\n  }();\n  var _worklet_15872269086045_init_data = {\n    code: \"function isTouchEvent(event){return event.eventType!=null;}\",\n    location: \"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"isTouchEvent\\\",\\\"event\\\",\\\"eventType\\\"],\\\"sources\\\":[\\\"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\\\"],\\\"mappings\\\":\\\"AA6WA,SAAAA,YAASA,CACPC,KAAA,CACD,CAEC,MAAO,CAAAA,KAAK,CAACC,SAAS,EAAI,IAAI,CAChC\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.10.1\"\n  };\n  var isTouchEvent = function () {\n    var _e = [new global.Error(), 1, -27];\n    var isTouchEvent = function (event) {\n      return event.eventType != null;\n    };\n    isTouchEvent.__closure = {};\n    isTouchEvent.__workletHash = 15872269086045;\n    isTouchEvent.__initData = _worklet_15872269086045_init_data;\n    isTouchEvent.__stackDetails = _e;\n    return isTouchEvent;\n  }();\n  var _worklet_12621821362088_init_data = {\n    code: \"function getHandler(type,gesture){const{CALLBACK_TYPE}=this.__closure;switch(type){case CALLBACK_TYPE.BEGAN:return gesture.onBegin;case CALLBACK_TYPE.START:return gesture.onStart;case CALLBACK_TYPE.UPDATE:return gesture.onUpdate;case CALLBACK_TYPE.CHANGE:return gesture.onChange;case CALLBACK_TYPE.END:return gesture.onEnd;case CALLBACK_TYPE.FINALIZE:return gesture.onFinalize;case CALLBACK_TYPE.TOUCHES_DOWN:return gesture.onTouchesDown;case CALLBACK_TYPE.TOUCHES_MOVE:return gesture.onTouchesMove;case CALLBACK_TYPE.TOUCHES_UP:return gesture.onTouchesUp;case CALLBACK_TYPE.TOUCHES_CANCELLED:return gesture.onTouchesCancelled;}}\",\n    location: \"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getHandler\\\",\\\"type\\\",\\\"gesture\\\",\\\"CALLBACK_TYPE\\\",\\\"__closure\\\",\\\"BEGAN\\\",\\\"onBegin\\\",\\\"START\\\",\\\"onStart\\\",\\\"UPDATE\\\",\\\"onUpdate\\\",\\\"CHANGE\\\",\\\"onChange\\\",\\\"END\\\",\\\"onEnd\\\",\\\"FINALIZE\\\",\\\"onFinalize\\\",\\\"TOUCHES_DOWN\\\",\\\"onTouchesDown\\\",\\\"TOUCHES_MOVE\\\",\\\"onTouchesMove\\\",\\\"TOUCHES_UP\\\",\\\"onTouchesUp\\\",\\\"TOUCHES_CANCELLED\\\",\\\"onTouchesCancelled\\\"],\\\"sources\\\":[\\\"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\\\"],\\\"mappings\\\":\\\"AAoXA,SAAAA,UAASA,CACPC,IAAA,CAAmBC,OACnB,CAAkD,OAAAC,aAAA,OAAAC,SAAA,CAGlD,OAAQH,IAAI,EACV,IAAK,CAAAE,aAAa,CAACE,KAAK,CACtB,MAAO,CAAAH,OAAO,CAACI,OAAO,CACxB,IAAK,CAAAH,aAAa,CAACI,KAAK,CACtB,MAAO,CAAAL,OAAO,CAACM,OAAO,CACxB,IAAK,CAAAL,aAAa,CAACM,MAAM,CACvB,MAAO,CAAAP,OAAO,CAACQ,QAAQ,CACzB,IAAK,CAAAP,aAAa,CAACQ,MAAM,CACvB,MAAO,CAAAT,OAAO,CAACU,QAAQ,CACzB,IAAK,CAAAT,aAAa,CAACU,GAAG,CACpB,MAAO,CAAAX,OAAO,CAACY,KAAK,CACtB,IAAK,CAAAX,aAAa,CAACY,QAAQ,CACzB,MAAO,CAAAb,OAAO,CAACc,UAAU,CAC3B,IAAK,CAAAb,aAAa,CAACc,YAAY,CAC7B,MAAO,CAAAf,OAAO,CAACgB,aAAa,CAC9B,IAAK,CAAAf,aAAa,CAACgB,YAAY,CAC7B,MAAO,CAAAjB,OAAO,CAACkB,aAAa,CAC9B,IAAK,CAAAjB,aAAa,CAACkB,UAAU,CAC3B,MAAO,CAAAnB,OAAO,CAACoB,WAAW,CAC5B,IAAK,CAAAnB,aAAa,CAACoB,iBAAiB,CAClC,MAAO,CAAArB,OAAO,CAACsB,kBAAkB,CACrC,CACF\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.10.1\"\n  };\n  var getHandler = function () {\n    var _e = [new global.Error(), -2, -27];\n    var getHandler = function (type, gesture) {\n      switch (type) {\n        case _gesture2.CALLBACK_TYPE.BEGAN:\n          return gesture.onBegin;\n        case _gesture2.CALLBACK_TYPE.START:\n          return gesture.onStart;\n        case _gesture2.CALLBACK_TYPE.UPDATE:\n          return gesture.onUpdate;\n        case _gesture2.CALLBACK_TYPE.CHANGE:\n          return gesture.onChange;\n        case _gesture2.CALLBACK_TYPE.END:\n          return gesture.onEnd;\n        case _gesture2.CALLBACK_TYPE.FINALIZE:\n          return gesture.onFinalize;\n        case _gesture2.CALLBACK_TYPE.TOUCHES_DOWN:\n          return gesture.onTouchesDown;\n        case _gesture2.CALLBACK_TYPE.TOUCHES_MOVE:\n          return gesture.onTouchesMove;\n        case _gesture2.CALLBACK_TYPE.TOUCHES_UP:\n          return gesture.onTouchesUp;\n        case _gesture2.CALLBACK_TYPE.TOUCHES_CANCELLED:\n          return gesture.onTouchesCancelled;\n      }\n    };\n    getHandler.__closure = {\n      CALLBACK_TYPE: _gesture2.CALLBACK_TYPE\n    };\n    getHandler.__workletHash = 12621821362088;\n    getHandler.__initData = _worklet_12621821362088_init_data;\n    getHandler.__stackDetails = _e;\n    return getHandler;\n  }();\n  var _worklet_3914047291176_init_data = {\n    code: \"function touchEventTypeToCallbackType(eventType){const{TouchEventType,CALLBACK_TYPE}=this.__closure;switch(eventType){case TouchEventType.TOUCHES_DOWN:return CALLBACK_TYPE.TOUCHES_DOWN;case TouchEventType.TOUCHES_MOVE:return CALLBACK_TYPE.TOUCHES_MOVE;case TouchEventType.TOUCHES_UP:return CALLBACK_TYPE.TOUCHES_UP;case TouchEventType.TOUCHES_CANCELLED:return CALLBACK_TYPE.TOUCHES_CANCELLED;}return CALLBACK_TYPE.UNDEFINED;}\",\n    location: \"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"touchEventTypeToCallbackType\\\",\\\"eventType\\\",\\\"TouchEventType\\\",\\\"CALLBACK_TYPE\\\",\\\"__closure\\\",\\\"TOUCHES_DOWN\\\",\\\"TOUCHES_MOVE\\\",\\\"TOUCHES_UP\\\",\\\"TOUCHES_CANCELLED\\\",\\\"UNDEFINED\\\"],\\\"sources\\\":[\\\"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\\\"],\\\"mappings\\\":\\\"AAiZA,SAAAA,4BAASA,CACPC,SAAA,CACD,OAAAC,cAAA,CAAAC,aAAA,OAAAC,SAAA,CAEC,OAAQH,SAAS,EACf,IAAK,CAAAC,cAAc,CAACG,YAAY,CAC9B,MAAO,CAAAF,aAAa,CAACE,YAAY,CACnC,IAAK,CAAAH,cAAc,CAACI,YAAY,CAC9B,MAAO,CAAAH,aAAa,CAACG,YAAY,CACnC,IAAK,CAAAJ,cAAc,CAACK,UAAU,CAC5B,MAAO,CAAAJ,aAAa,CAACI,UAAU,CACjC,IAAK,CAAAL,cAAc,CAACM,iBAAiB,CACnC,MAAO,CAAAL,aAAa,CAACK,iBAAiB,CAC1C,CACA,MAAO,CAAAL,aAAa,CAACM,SAAS,CAChC\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.10.1\"\n  };\n  var touchEventTypeToCallbackType = function () {\n    var _e = [new global.Error(), -3, -27];\n    var touchEventTypeToCallbackType = function (eventType) {\n      switch (eventType) {\n        case _TouchEventType.TouchEventType.TOUCHES_DOWN:\n          return _gesture2.CALLBACK_TYPE.TOUCHES_DOWN;\n        case _TouchEventType.TouchEventType.TOUCHES_MOVE:\n          return _gesture2.CALLBACK_TYPE.TOUCHES_MOVE;\n        case _TouchEventType.TouchEventType.TOUCHES_UP:\n          return _gesture2.CALLBACK_TYPE.TOUCHES_UP;\n        case _TouchEventType.TouchEventType.TOUCHES_CANCELLED:\n          return _gesture2.CALLBACK_TYPE.TOUCHES_CANCELLED;\n      }\n      return _gesture2.CALLBACK_TYPE.UNDEFINED;\n    };\n    touchEventTypeToCallbackType.__closure = {\n      TouchEventType: _TouchEventType.TouchEventType,\n      CALLBACK_TYPE: _gesture2.CALLBACK_TYPE\n    };\n    touchEventTypeToCallbackType.__workletHash = 3914047291176;\n    touchEventTypeToCallbackType.__initData = _worklet_3914047291176_init_data;\n    touchEventTypeToCallbackType.__stackDetails = _e;\n    return touchEventTypeToCallbackType;\n  }();\n  var _worklet_5678919901512_init_data = {\n    code: \"function runWorklet(type,gesture,event){const{getHandler,tagMessage}=this.__closure;const handler=getHandler(type,gesture);if(gesture.isWorklet[type]){for(var _len=arguments.length,args=new Array(_len>3?_len-3:0),_key=3;_key<_len;_key++){args[_key-3]=arguments[_key];}handler===null||handler===void 0||handler(event,...args);}else if(handler){console.warn(tagMessage('Animated gesture callback must be a worklet'));}}\",\n    location: \"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"runWorklet\\\",\\\"type\\\",\\\"gesture\\\",\\\"event\\\",\\\"getHandler\\\",\\\"tagMessage\\\",\\\"__closure\\\",\\\"handler\\\",\\\"isWorklet\\\",\\\"_len\\\",\\\"arguments\\\",\\\"length\\\",\\\"args\\\",\\\"Array\\\",\\\"_key\\\",\\\"console\\\",\\\"warn\\\"],\\\"sources\\\":[\\\"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\\\"],\\\"mappings\\\":\\\"AAkaA,SAAAA,UAASA,CACPC,IAAA,CAAmBC,OACnB,CAAkDC,KAClD,CAAuE,OAAAC,UAAA,CAAAC,UAAA,OAAAC,SAAA,CAIvE,KAAM,CAAAC,OAAO,CAAGH,UAAU,CAACH,IAAI,CAAEC,OAAO,CAAC,CACzC,GAAIA,OAAO,CAACM,SAAS,CAACP,IAAI,CAAC,CAAE,SAAAQ,IAAA,CAAAC,SAAA,CAAAC,MAAA,CAJ1BC,IAAI,KAAAC,KAAA,CAAAJ,IAAA,GAAAA,IAAA,MAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA,GAOLP,OAAO,SAAPA,OAAO,WAAPA,OAAO,CAAGJ,KAAK,CAAE,GAAGS,IAAI,CAAC,CAC3B,CAAC,IAAM,IAAIL,OAAO,CAAE,CAClBQ,OAAO,CAACC,IAAI,CAACX,UAAU,CAAC,6CAA6C,CAAC,CAAC,CACzE,CACF\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.10.1\"\n  };\n  var runWorklet = function () {\n    var _e = [new global.Error(), -3, -27];\n    var runWorklet = function (type, gesture, event) {\n      var handler = getHandler(type, gesture);\n      if (gesture.isWorklet[type]) {\n        for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n          args[_key - 3] = arguments[_key];\n        }\n        // @ts-ignore Logic below makes sure the correct event is send to the\n        // correct handler.\n        handler?.(event, ...args);\n      } else if (handler) {\n        console.warn((0, _utils.tagMessage)('Animated gesture callback must be a worklet'));\n      }\n    };\n    runWorklet.__closure = {\n      getHandler,\n      tagMessage: _utils.tagMessage\n    };\n    runWorklet.__workletHash = 5678919901512;\n    runWorklet.__initData = _worklet_5678919901512_init_data;\n    runWorklet.__stackDetails = _e;\n    return runWorklet;\n  }();\n  var _worklet_14213353093337_init_data = {\n    code: \"function anonymous(event){const{sharedHandlersCallbacks,isStateChangeEvent,State,runWorklet,CALLBACK_TYPE,lastUpdateEvent,isTouchEvent,stateControllers,GestureStateManager,TouchEventType,touchEventTypeToCallbackType}=this.__closure;const currentCallback=sharedHandlersCallbacks.value;if(!currentCallback){return;}for(let i=0;i<currentCallback.length;i++){const gesture=currentCallback[i];if(event.handlerTag===gesture.handlerTag){if(isStateChangeEvent(event)){if(event.oldState===State.UNDETERMINED&&event.state===State.BEGAN){runWorklet(CALLBACK_TYPE.BEGAN,gesture,event);}else if((event.oldState===State.BEGAN||event.oldState===State.UNDETERMINED)&&event.state===State.ACTIVE){runWorklet(CALLBACK_TYPE.START,gesture,event);lastUpdateEvent.value[gesture.handlerTag]=undefined;}else if(event.oldState!==event.state&&event.state===State.END){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,true);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,true);}else if((event.state===State.FAILED||event.state===State.CANCELLED)&&event.state!==event.oldState){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,false);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,false);}}else if(isTouchEvent(event)){if(!stateControllers[i]){stateControllers[i]=GestureStateManager.create(event.handlerTag);}if(event.eventType!==TouchEventType.UNDETERMINED){runWorklet(touchEventTypeToCallbackType(event.eventType),gesture,event,stateControllers[i]);}}else{runWorklet(CALLBACK_TYPE.UPDATE,gesture,event);if(gesture.onChange&&gesture.changeEventCalculator){var _gesture$changeEventC;runWorklet(CALLBACK_TYPE.CHANGE,gesture,(_gesture$changeEventC=gesture.changeEventCalculator)===null||_gesture$changeEventC===void 0?void 0:_gesture$changeEventC.call(gesture,event,lastUpdateEvent.value[gesture.handlerTag]));lastUpdateEvent.value[gesture.handlerTag]=event;}}}}}\",\n    location: \"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"event\\\",\\\"sharedHandlersCallbacks\\\",\\\"isStateChangeEvent\\\",\\\"State\\\",\\\"runWorklet\\\",\\\"CALLBACK_TYPE\\\",\\\"lastUpdateEvent\\\",\\\"isTouchEvent\\\",\\\"stateControllers\\\",\\\"GestureStateManager\\\",\\\"TouchEventType\\\",\\\"touchEventTypeToCallbackType\\\",\\\"__closure\\\",\\\"currentCallback\\\",\\\"value\\\",\\\"i\\\",\\\"length\\\",\\\"gesture\\\",\\\"handlerTag\\\",\\\"oldState\\\",\\\"UNDETERMINED\\\",\\\"state\\\",\\\"BEGAN\\\",\\\"ACTIVE\\\",\\\"START\\\",\\\"undefined\\\",\\\"END\\\",\\\"FINALIZE\\\",\\\"FAILED\\\",\\\"CANCELLED\\\",\\\"create\\\",\\\"eventType\\\",\\\"UPDATE\\\",\\\"onChange\\\",\\\"changeEventCalculator\\\",\\\"_gesture$changeEventC\\\",\\\"CHANGE\\\",\\\"call\\\"],\\\"sources\\\":[\\\"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector.tsx\\\"],\\\"mappings\\\":\\\"AA0cmB,QACf,CAAAA,SACGA,CAAAC,KAAA,QAAAC,uBAAA,CAAAC,kBAAA,CAAAC,KAAA,CAAAC,UAAA,CAAAC,aAAA,CAAAC,eAAA,CAAAC,YAAA,CAAAC,gBAAA,CAAAC,mBAAA,CAAAC,cAAA,CAAAC,4BAAA,OAAAC,SAAA,CAGH,KAAM,CAAAC,eAAe,CAAGZ,uBAAuB,CAACa,KAAK,CACrD,GAAI,CAACD,eAAe,CAAE,CACpB,OACF,CAEA,IAAK,GAAI,CAAAE,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,eAAe,CAACG,MAAM,CAAED,CAAC,EAAE,CAAE,CAC/C,KAAM,CAAAE,OAAO,CAAGJ,eAAe,CAACE,CAAC,CAAC,CAElC,GAAIf,KAAK,CAACkB,UAAU,GAAKD,OAAO,CAACC,UAAU,CAAE,CAC3C,GAAIhB,kBAAkB,CAACF,KAAK,CAAC,CAAE,CAC7B,GACEA,KAAK,CAACmB,QAAQ,GAAKhB,KAAK,CAACiB,YAAY,EACrCpB,KAAK,CAACqB,KAAK,GAAKlB,KAAK,CAACmB,KAAK,CAC3B,CACAlB,UAAU,CAACC,aAAa,CAACiB,KAAK,CAAEL,OAAO,CAAEjB,KAAK,CAAC,CACjD,CAAC,IAAM,IACL,CAACA,KAAK,CAACmB,QAAQ,GAAKhB,KAAK,CAACmB,KAAK,EAC7BtB,KAAK,CAACmB,QAAQ,GAAKhB,KAAK,CAACiB,YAAY,GACvCpB,KAAK,CAACqB,KAAK,GAAKlB,KAAK,CAACoB,MAAM,CAC5B,CACAnB,UAAU,CAACC,aAAa,CAACmB,KAAK,CAAEP,OAAO,CAAEjB,KAAK,CAAC,CAC/CM,eAAe,CAACQ,KAAK,CAACG,OAAO,CAACC,UAAU,CAAC,CAAGO,SAAS,CACvD,CAAC,IAAM,IACLzB,KAAK,CAACmB,QAAQ,GAAKnB,KAAK,CAACqB,KAAK,EAC9BrB,KAAK,CAACqB,KAAK,GAAKlB,KAAK,CAACuB,GAAG,CACzB,CACA,GAAI1B,KAAK,CAACmB,QAAQ,GAAKhB,KAAK,CAACoB,MAAM,CAAE,CACnCnB,UAAU,CAACC,aAAa,CAACqB,GAAG,CAAET,OAAO,CAAEjB,KAAK,CAAE,IAAI,CAAC,CACrD,CACAI,UAAU,CAACC,aAAa,CAACsB,QAAQ,CAAEV,OAAO,CAAEjB,KAAK,CAAE,IAAI,CAAC,CAC1D,CAAC,IAAM,IACL,CAACA,KAAK,CAACqB,KAAK,GAAKlB,KAAK,CAACyB,MAAM,EAAI5B,KAAK,CAACqB,KAAK,GAAKlB,KAAK,CAAC0B,SAAS,GAChE7B,KAAK,CAACqB,KAAK,GAAKrB,KAAK,CAACmB,QAAQ,CAC9B,CACA,GAAInB,KAAK,CAACmB,QAAQ,GAAKhB,KAAK,CAACoB,MAAM,CAAE,CACnCnB,UAAU,CAACC,aAAa,CAACqB,GAAG,CAAET,OAAO,CAAEjB,KAAK,CAAE,KAAK,CAAC,CACtD,CACAI,UAAU,CAACC,aAAa,CAACsB,QAAQ,CAAEV,OAAO,CAAEjB,KAAK,CAAE,KAAK,CAAC,CAC3D,CACF,CAAC,IAAM,IAAIO,YAAY,CAACP,KAAK,CAAC,CAAE,CAC9B,GAAI,CAACQ,gBAAgB,CAACO,CAAC,CAAC,CAAE,CACxBP,gBAAgB,CAACO,CAAC,CAAC,CAAGN,mBAAmB,CAACqB,MAAM,CAAC9B,KAAK,CAACkB,UAAU,CAAC,CACpE,CAEA,GAAIlB,KAAK,CAAC+B,SAAS,GAAKrB,cAAc,CAACU,YAAY,CAAE,CACnDhB,UAAU,CACRO,4BAA4B,CAACX,KAAK,CAAC+B,SAAS,CAAC,CAC7Cd,OAAO,CACPjB,KAAK,CACLQ,gBAAgB,CAACO,CAAC,CACpB,CAAC,CACH,CACF,CAAC,IAAM,CACLX,UAAU,CAACC,aAAa,CAAC2B,MAAM,CAAEf,OAAO,CAAEjB,KAAK,CAAC,CAEhD,GAAIiB,OAAO,CAACgB,QAAQ,EAAIhB,OAAO,CAACiB,qBAAqB,CAAE,KAAAC,qBAAA,CACrD/B,UAAU,CACRC,aAAa,CAAC+B,MAAM,CACpBnB,OAAO,EAAAkB,qBAAA,CACPlB,OAAO,CAACiB,qBAAqB,UAAAC,qBAAA,iBAA7BA,qBAAA,CAAAE,IAAA,CAAApB,OAAO,CACLjB,KAAK,CACLM,eAAe,CAACQ,KAAK,CAACG,OAAO,CAACC,UAAU,CAC1C,CACF,CAAC,CAEDZ,eAAe,CAACQ,KAAK,CAACG,OAAO,CAACC,UAAU,CAAC,CAAGlB,KAAK,CACnD,CACF,CACF,CACF,CACF\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.10.1\"\n  };\n  function useAnimatedGesture(preparedGesture, needsRebuild) {\n    if (!_reanimatedWrapper.Reanimated) {\n      return;\n    }\n\n    // Hooks are called conditionally, but the condition is whether the\n    // react-native-reanimated is installed, which shouldn't change while running\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var sharedHandlersCallbacks = _reanimatedWrapper.Reanimated.useSharedValue(null);\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var lastUpdateEvent = _reanimatedWrapper.Reanimated.useSharedValue([]);\n\n    // not every gesture needs a state controller, init them lazily\n    var stateControllers = [];\n    var callback = function () {\n      var _e = [new global.Error(), -12, -27];\n      var anonymous = function (event) {\n        var currentCallback = sharedHandlersCallbacks.value;\n        if (!currentCallback) {\n          return;\n        }\n        for (var i = 0; i < currentCallback.length; i++) {\n          var gesture = currentCallback[i];\n          if (event.handlerTag === gesture.handlerTag) {\n            if (isStateChangeEvent(event)) {\n              if (event.oldState === _State.State.UNDETERMINED && event.state === _State.State.BEGAN) {\n                runWorklet(_gesture2.CALLBACK_TYPE.BEGAN, gesture, event);\n              } else if ((event.oldState === _State.State.BEGAN || event.oldState === _State.State.UNDETERMINED) && event.state === _State.State.ACTIVE) {\n                runWorklet(_gesture2.CALLBACK_TYPE.START, gesture, event);\n                lastUpdateEvent.value[gesture.handlerTag] = undefined;\n              } else if (event.oldState !== event.state && event.state === _State.State.END) {\n                if (event.oldState === _State.State.ACTIVE) {\n                  runWorklet(_gesture2.CALLBACK_TYPE.END, gesture, event, true);\n                }\n                runWorklet(_gesture2.CALLBACK_TYPE.FINALIZE, gesture, event, true);\n              } else if ((event.state === _State.State.FAILED || event.state === _State.State.CANCELLED) && event.state !== event.oldState) {\n                if (event.oldState === _State.State.ACTIVE) {\n                  runWorklet(_gesture2.CALLBACK_TYPE.END, gesture, event, false);\n                }\n                runWorklet(_gesture2.CALLBACK_TYPE.FINALIZE, gesture, event, false);\n              }\n            } else if (isTouchEvent(event)) {\n              if (!stateControllers[i]) {\n                stateControllers[i] = _gestureStateManager.GestureStateManager.create(event.handlerTag);\n              }\n              if (event.eventType !== _TouchEventType.TouchEventType.UNDETERMINED) {\n                runWorklet(touchEventTypeToCallbackType(event.eventType), gesture, event, stateControllers[i]);\n              }\n            } else {\n              runWorklet(_gesture2.CALLBACK_TYPE.UPDATE, gesture, event);\n              if (gesture.onChange && gesture.changeEventCalculator) {\n                runWorklet(_gesture2.CALLBACK_TYPE.CHANGE, gesture, gesture.changeEventCalculator?.(event, lastUpdateEvent.value[gesture.handlerTag]));\n                lastUpdateEvent.value[gesture.handlerTag] = event;\n              }\n            }\n          }\n        }\n      };\n      anonymous.__closure = {\n        sharedHandlersCallbacks,\n        isStateChangeEvent,\n        State: _State.State,\n        runWorklet,\n        CALLBACK_TYPE: _gesture2.CALLBACK_TYPE,\n        lastUpdateEvent,\n        isTouchEvent,\n        stateControllers,\n        GestureStateManager: _gestureStateManager.GestureStateManager,\n        TouchEventType: _TouchEventType.TouchEventType,\n        touchEventTypeToCallbackType\n      };\n      anonymous.__workletHash = 14213353093337;\n      anonymous.__initData = _worklet_14213353093337_init_data;\n      anonymous.__stackDetails = _e;\n      return anonymous;\n    }();\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var event = _reanimatedWrapper.Reanimated.useEvent(callback, ['onGestureHandlerStateChange', 'onGestureHandlerEvent'], needsRebuild);\n    preparedGesture.animatedEventHandler = event;\n    preparedGesture.animatedHandlers = sharedHandlersCallbacks;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function validateDetectorChildren(ref) {\n    // finds the first native view under the Wrap component and traverses the fiber tree upwards\n    // to check whether there is more than one native view as a pseudo-direct child of GestureDetector\n    // i.e. this is not ok:\n    //            Wrap\n    //             |\n    //            / \\\n    //           /   \\\n    //          /     \\\n    //         /       \\\n    //   NativeView  NativeView\n    //\n    // but this is fine:\n    //            Wrap\n    //             |\n    //         NativeView\n    //             |\n    //            / \\\n    //           /   \\\n    //          /     \\\n    //         /       \\\n    //   NativeView  NativeView\n    if (__DEV__ && _reactNative.Platform.OS !== 'web') {\n      var REACT_NATIVE_VERSION = (0, _getReactNativeVersion.getReactNativeVersion)();\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      var wrapType = REACT_NATIVE_VERSION.minor > 63 || REACT_NATIVE_VERSION.major > 0 ?\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      ref._reactInternals.elementType :\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      ref._reactInternalFiber.elementType;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      var instance = _RNRenderer.RNRenderer.findHostInstance_DEPRECATED(ref)._internalFiberInstanceHandleDEV;\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      while (instance && instance.elementType !== wrapType) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (instance.sibling) {\n          throw new Error('GestureDetector has more than one native view as its children. This can happen if you are using a custom component that renders multiple views, like React.Fragment. You should wrap content of GestureDetector with a <View> or <Animated.View>.');\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        instance = instance.return;\n      }\n    }\n  }\n  var applyUserSelectProp = (userSelect, gesture) => {\n    for (var g of gesture.toGestureArray()) {\n      g.config.userSelect = userSelect;\n    }\n  };\n  var applyEnableContextMenuProp = (enableContextMenu, gesture) => {\n    for (var g of gesture.toGestureArray()) {\n      g.config.enableContextMenu = enableContextMenu;\n    }\n  };\n  var applyTouchActionProp = (touchAction, gesture) => {\n    for (var g of gesture.toGestureArray()) {\n      g.config.touchAction = touchAction;\n    }\n  };\n  /**\n   * `GestureDetector` is responsible for creating and updating native gesture handlers based on the config of provided gesture.\n   *\n   * ### Props\n   * - `gesture`\n   * - `userSelect` (**Web only**)\n   * - `enableContextMenu` (**Web only**)\n   * - `touchAction` (**Web only**)\n   *\n   * ### Remarks\n   * - Gesture Detector will use first native view in its subtree to recognize gestures, however if this view is used only to group its children it may get automatically collapsed.\n   * - Using the same instance of a gesture across multiple Gesture Detectors is not possible.\n   *\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture-detector\n   */\n  var GestureDetector = props => {\n    var rootViewContext = (0, _react.useContext)(GestureHandlerRootViewContext.default);\n    if (__DEV__ && !rootViewContext && !(0, _utils.isJestEnv)() && _reactNative.Platform.OS !== 'web') {\n      throw new Error('GestureDetector must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n    }\n    var gestureConfig = props.gesture;\n    if (props.userSelect) {\n      applyUserSelectProp(props.userSelect, gestureConfig);\n    }\n    if (props.enableContextMenu !== undefined) {\n      applyEnableContextMenuProp(props.enableContextMenu, gestureConfig);\n    }\n    if (props.touchAction !== undefined) {\n      applyTouchActionProp(props.touchAction, gestureConfig);\n    }\n    var gesture = gestureConfig.toGestureArray();\n    var useReanimatedHook = gesture.some(g => g.shouldUseReanimated);\n\n    // store state in ref to prevent unnecessary renders\n    var state = (0, _react.useRef)({\n      firstRender: true,\n      viewRef: null,\n      previousViewTag: -1,\n      forceReattach: false\n    }).current;\n    var mountedRef = (0, _react.useRef)(false);\n    var webEventHandlersRef = (0, _react.useRef)({\n      onGestureHandlerEvent: e => {\n        (0, _eventReceiver.onGestureHandlerEvent)(e.nativeEvent);\n      },\n      onGestureHandlerStateChange: (0, _EnableNewWebImplementation.isNewWebImplementationEnabled)() ? e => {\n        (0, _eventReceiver.onGestureHandlerEvent)(e.nativeEvent);\n      } : undefined\n    });\n    var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      renderState = _useState2[0],\n      setRenderState = _useState2[1];\n    function forceRender() {\n      setRenderState(!renderState);\n    }\n    var preparedGesture = React.default.useRef({\n      config: gesture,\n      animatedEventHandler: null,\n      animatedHandlers: null,\n      firstExecution: true,\n      useReanimatedHook: useReanimatedHook\n    }).current;\n    if (useReanimatedHook !== preparedGesture.useReanimatedHook) {\n      throw new Error((0, _utils.tagMessage)('You cannot change the thread the callbacks are ran on while the app is running'));\n    }\n    function onHandlersUpdate(skipConfigUpdate) {\n      // if the underlying view has changed we need to reattach handlers to the new view\n      var viewTag = (0, _gestureHandlerCommon.findNodeHandle)(state.viewRef);\n      var forceReattach = viewTag !== state.previousViewTag;\n      if (forceReattach || needsToReattach(preparedGesture, gesture)) {\n        validateDetectorChildren(state.viewRef);\n        dropHandlers(preparedGesture);\n        attachHandlers({\n          preparedGesture,\n          gestureConfig,\n          gesture,\n          webEventHandlersRef,\n          viewTag,\n          mountedRef\n        });\n        state.previousViewTag = viewTag;\n        state.forceReattach = forceReattach;\n        if (forceReattach) {\n          forceRender();\n        }\n      } else if (!skipConfigUpdate) {\n        updateHandlers(preparedGesture, gestureConfig, gesture, mountedRef);\n      }\n    }\n\n    // Reanimated event should be rebuilt only when gestures are reattached, otherwise\n    // config update will be enough as all necessary items are stored in shared values anyway\n    var needsToRebuildReanimatedEvent = preparedGesture.firstExecution || needsToReattach(preparedGesture, gesture) || state.forceReattach;\n    state.forceReattach = false;\n    if (preparedGesture.firstExecution) {\n      gestureConfig.initialize();\n    }\n    if (useReanimatedHook) {\n      // Whether animatedGesture or gesture is used shouldn't change while the app is running\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useAnimatedGesture(preparedGesture, needsToRebuildReanimatedEvent);\n    }\n    (0, _react.useEffect)(() => {\n      var viewTag = (0, _gestureHandlerCommon.findNodeHandle)(state.viewRef);\n      state.firstRender = true;\n      mountedRef.current = true;\n      validateDetectorChildren(state.viewRef);\n      attachHandlers({\n        preparedGesture,\n        gestureConfig,\n        gesture,\n        webEventHandlersRef,\n        viewTag,\n        mountedRef\n      });\n      return () => {\n        mountedRef.current = false;\n        dropHandlers(preparedGesture);\n      };\n    }, []);\n    (0, _react.useEffect)(() => {\n      if (!state.firstRender) {\n        onHandlersUpdate();\n      } else {\n        state.firstRender = false;\n      }\n    }, [props]);\n    var refFunction = ref => {\n      if (ref !== null) {\n        // @ts-ignore Just setting the view ref\n        state.viewRef = ref;\n\n        // if it's the first render, also set the previousViewTag to prevent reattaching gestures when not needed\n        if (state.previousViewTag === -1) {\n          state.previousViewTag = (0, _gestureHandlerCommon.findNodeHandle)(state.viewRef);\n        }\n\n        // pass true as `skipConfigUpdate`, here we only want to trigger the eventual reattaching of handlers\n        // in case the view has changed, while config update would be handled be the `useEffect` above\n        onHandlersUpdate(true);\n        if ((0, _utils.isFabric)() && global.isFormsStackingContext) {\n          var node = (0, _getShadowNodeFromRef.getShadowNodeFromRef)(ref);\n          if (global.isFormsStackingContext(node) === false) {\n            console.error((0, _utils.tagMessage)('GestureDetector has received a child that may get view-flattened. ' + '\\nTo prevent it from misbehaving you need to wrap the child with a `<View collapsable={false}>`.'));\n          }\n        }\n      }\n    };\n    if (useReanimatedHook) {\n      return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AnimatedWrap, {\n        ref: refFunction,\n        onGestureHandlerEvent: preparedGesture.animatedEventHandler,\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 7\n      }, this);\n    } else {\n      return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(Wrap, {\n        ref: refFunction,\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 12\n      }, this);\n    }\n  };\n  var Wrap = /*#__PURE__*/function (_React$Component) {\n    function Wrap() {\n      (0, _classCallCheck.default)(this, Wrap);\n      return (0, _callSuper.default)(this, Wrap, arguments);\n    }\n    (0, _inherits.default)(Wrap, _React$Component);\n    return (0, _createClass.default)(Wrap, [{\n      key: \"render\",\n      value: function render() {\n        try {\n          // I don't think that fighting with types over such a simple function is worth it\n          // The only thing it does is add 'collapsable: false' to the child component\n          // to make sure it is in the native view hierarchy so the detector can find\n          // correct viewTag to attach to.\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          var child = React.default.Children.only(this.props.children);\n          return /*#__PURE__*/React.default.cloneElement(child, {\n            collapsable: false\n          },\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          child.props.children);\n        } catch (e) {\n          throw new Error((0, _utils.tagMessage)(`GestureDetector got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n        }\n      }\n    }]);\n  }(React.default.Component);\n  var AnimatedWrap = _reanimatedWrapper.Reanimated?.default?.createAnimatedComponent(Wrap) ?? Wrap;\n});","lineCount":719,"map":[[13,2,678,0,"Object"],[13,8,678,0],[13,9,678,0,"defineProperty"],[13,23,678,0],[13,24,678,0,"exports"],[13,31,678,0],[14,4,678,0,"enumerable"],[14,14,678,0],[15,4,678,0,"get"],[15,7,678,0],[15,18,678,0,"get"],[15,19,678,0],[16,6,678,0],[16,13,678,0,"GestureDetector"],[16,28,678,0],[17,4,678,0],[18,2,678,0],[19,2,858,2],[19,6,858,2,"_babelRuntimeHelpersClassCallCheck"],[19,40,858,2],[19,43,858,2,"require"],[19,50,858,2],[19,51,858,2,"_dependencyMap"],[19,65,858,2],[20,2,858,2],[20,6,858,2,"_classCallCheck"],[20,21,858,2],[20,24,858,2,"_interopDefault"],[20,39,858,2],[20,40,858,2,"_babelRuntimeHelpersClassCallCheck"],[20,74,858,2],[21,2,858,2],[21,6,858,2,"_babelRuntimeHelpersCreateClass"],[21,37,858,2],[21,40,858,2,"require"],[21,47,858,2],[21,48,858,2,"_dependencyMap"],[21,62,858,2],[22,2,858,2],[22,6,858,2,"_createClass"],[22,18,858,2],[22,21,858,2,"_interopDefault"],[22,36,858,2],[22,37,858,2,"_babelRuntimeHelpersCreateClass"],[22,68,858,2],[23,2,858,2],[23,6,858,2,"_babelRuntimeHelpersCallSuper"],[23,35,858,2],[23,38,858,2,"require"],[23,45,858,2],[23,46,858,2,"_dependencyMap"],[23,60,858,2],[24,2,858,2],[24,6,858,2,"_callSuper"],[24,16,858,2],[24,19,858,2,"_interopDefault"],[24,34,858,2],[24,35,858,2,"_babelRuntimeHelpersCallSuper"],[24,64,858,2],[25,2,858,2],[25,6,858,2,"_babelRuntimeHelpersInherits"],[25,34,858,2],[25,37,858,2,"require"],[25,44,858,2],[25,45,858,2,"_dependencyMap"],[25,59,858,2],[26,2,858,2],[26,6,858,2,"_inherits"],[26,15,858,2],[26,18,858,2,"_interopDefault"],[26,33,858,2],[26,34,858,2,"_babelRuntimeHelpersInherits"],[26,62,858,2],[27,2,858,2],[27,6,858,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,858,2],[27,42,858,2,"require"],[27,49,858,2],[27,50,858,2,"_dependencyMap"],[27,64,858,2],[28,2,858,2],[28,6,858,2,"_slicedToArray"],[28,20,858,2],[28,23,858,2,"_interopDefault"],[28,38,858,2],[28,39,858,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,858,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_gesture2"],[31,15,2,0],[31,18,2,0,"require"],[31,25,2,0],[31,26,2,0,"_dependencyMap"],[31,40,2,0],[32,2,9,0],[32,6,9,0,"_reanimatedWrapper"],[32,24,9,0],[32,27,9,0,"require"],[32,34,9,0],[32,35,9,0,"_dependencyMap"],[32,49,9,0],[33,2,10,0],[33,6,10,0,"_handlersRegistry"],[33,23,10,0],[33,26,10,0,"require"],[33,33,10,0],[33,34,10,0,"_dependencyMap"],[33,48,10,0],[34,2,11,0],[34,6,11,0,"_RNGestureHandlerModule"],[34,29,11,0],[34,32,11,0,"require"],[34,39,11,0],[34,40,11,0,"_dependencyMap"],[34,54,11,0],[35,2,11,0],[35,6,11,0,"RNGestureHandlerModule"],[35,28,11,0],[35,31,11,0,"_interopDefault"],[35,46,11,0],[35,47,11,0,"_RNGestureHandlerModule"],[35,70,11,0],[36,2,12,0],[36,6,12,0,"_gestureHandlerCommon"],[36,27,12,0],[36,30,12,0,"require"],[36,37,12,0],[36,38,12,0,"_dependencyMap"],[36,52,12,0],[37,2,24,0],[37,6,24,0,"_gestureStateManager"],[37,26,24,0],[37,29,24,0,"require"],[37,36,24,0],[37,37,24,0,"_dependencyMap"],[37,51,24,0],[38,2,28,0],[38,6,28,0,"_FlingGestureHandler"],[38,26,28,0],[38,29,28,0,"require"],[38,36,28,0],[38,37,28,0,"_dependencyMap"],[38,51,28,0],[39,2,29,0],[39,6,29,0,"_ForceTouchGestureHandler"],[39,31,29,0],[39,34,29,0,"require"],[39,41,29,0],[39,42,29,0,"_dependencyMap"],[39,56,29,0],[40,2,30,0],[40,6,30,0,"_LongPressGestureHandler"],[40,30,30,0],[40,33,30,0,"require"],[40,40,30,0],[40,41,30,0,"_dependencyMap"],[40,55,30,0],[41,2,31,0],[41,6,31,0,"_PanGestureHandler"],[41,24,31,0],[41,27,31,0,"require"],[41,34,31,0],[41,35,31,0,"_dependencyMap"],[41,49,31,0],[42,2,35,0],[42,6,35,0,"_TapGestureHandler"],[42,24,35,0],[42,27,35,0,"require"],[42,34,35,0],[42,35,35,0,"_dependencyMap"],[42,49,35,0],[43,2,36,0],[43,6,36,0,"_hoverGesture"],[43,19,36,0],[43,22,36,0,"require"],[43,29,36,0],[43,30,36,0,"_dependencyMap"],[43,44,36,0],[44,2,37,0],[44,6,37,0,"_State"],[44,12,37,0],[44,15,37,0,"require"],[44,22,37,0],[44,23,37,0,"_dependencyMap"],[44,37,37,0],[45,2,38,0],[45,6,38,0,"_TouchEventType"],[45,21,38,0],[45,24,38,0,"require"],[45,31,38,0],[45,32,38,0,"_dependencyMap"],[45,46,38,0],[46,2,40,0],[46,6,40,0,"_ActionType"],[46,17,40,0],[46,20,40,0,"require"],[46,27,40,0],[46,28,40,0,"_dependencyMap"],[46,42,40,0],[47,2,41,0],[47,6,41,0,"_utils"],[47,12,41,0],[47,15,41,0,"require"],[47,22,41,0],[47,23,41,0,"_dependencyMap"],[47,37,41,0],[48,2,42,0],[48,6,42,0,"_getReactNativeVersion"],[48,28,42,0],[48,31,42,0,"require"],[48,38,42,0],[48,39,42,0,"_dependencyMap"],[48,53,42,0],[49,2,43,0],[49,6,43,0,"_getShadowNodeFromRef"],[49,27,43,0],[49,30,43,0,"require"],[49,37,43,0],[49,38,43,0,"_dependencyMap"],[49,52,43,0],[50,2,44,0],[50,6,44,0,"_reactNative"],[50,18,44,0],[50,21,44,0,"require"],[50,28,44,0],[50,29,44,0,"_dependencyMap"],[50,43,44,0],[51,2,46,0],[51,6,46,0,"_eventReceiver"],[51,20,46,0],[51,23,46,0,"require"],[51,30,46,0],[51,31,46,0,"_dependencyMap"],[51,45,46,0],[52,2,47,0],[52,6,47,0,"_RNRenderer"],[52,17,47,0],[52,20,47,0,"require"],[52,27,47,0],[52,28,47,0,"_dependencyMap"],[52,42,47,0],[53,2,48,0],[53,6,48,0,"_EnableNewWebImplementation"],[53,33,48,0],[53,36,48,0,"require"],[53,43,48,0],[53,44,48,0,"_dependencyMap"],[53,58,48,0],[54,2,49,0],[54,6,49,0,"_NativeViewGestureHandler"],[54,31,49,0],[54,34,49,0,"require"],[54,41,49,0],[54,42,49,0,"_dependencyMap"],[54,56,49,0],[55,2,50,0],[55,6,50,0,"_GestureHandlerRootViewContext"],[55,36,50,0],[55,39,50,0,"require"],[55,46,50,0],[55,47,50,0,"_dependencyMap"],[55,61,50,0],[56,2,50,0],[56,6,50,0,"GestureHandlerRootViewContext"],[56,35,50,0],[56,38,50,0,"_interopDefault"],[56,53,50,0],[56,54,50,0,"_GestureHandlerRootViewContext"],[56,84,50,0],[57,2,51,0],[57,6,51,0,"_ghQueueMicrotask"],[57,23,51,0],[57,26,51,0,"require"],[57,33,51,0],[57,34,51,0,"_dependencyMap"],[57,48,51,0],[58,2,51,58],[58,6,51,58,"_reactJsxDevRuntime"],[58,25,51,58],[58,28,51,58,"require"],[58,35,51,58],[58,36,51,58,"_dependencyMap"],[58,50,51,58],[59,2,57,0],[59,6,57,6,"ALLOWED_PROPS"],[59,19,57,19],[59,22,57,22],[59,23,58,2],[59,26,58,5,"baseGestureHandlerWithMonitorProps"],[59,47,58,39],[59,48,58,39,"baseGestureHandlerWithMonitorProps"],[59,82,58,39],[59,84,59,2],[59,87,59,5,"tapGestureHandlerProps"],[59,105,59,27],[59,106,59,27,"tapGestureHandlerProps"],[59,128,59,27],[59,130,60,2],[59,133,60,5,"panGestureHandlerProps"],[59,151,60,27],[59,152,60,27,"panGestureHandlerProps"],[59,174,60,27],[59,176,61,2],[59,179,61,5,"panGestureHandlerCustomNativeProps"],[59,197,61,39],[59,198,61,39,"panGestureHandlerCustomNativeProps"],[59,232,61,39],[59,234,62,2],[59,237,62,5,"longPressGestureHandlerProps"],[59,261,62,33],[59,262,62,33,"longPressGestureHandlerProps"],[59,290,62,33],[59,292,63,2],[59,295,63,5,"forceTouchGestureHandlerProps"],[59,320,63,34],[59,321,63,34,"forceTouchGestureHandlerProps"],[59,350,63,34],[59,352,64,2],[59,355,64,5,"flingGestureHandlerProps"],[59,375,64,29],[59,376,64,29,"flingGestureHandlerProps"],[59,400,64,29],[59,402,65,2],[59,405,65,5,"hoverGestureHandlerProps"],[59,418,65,29],[59,419,65,29,"hoverGestureHandlerProps"],[59,443,65,29],[59,445,66,2],[59,448,66,5,"nativeViewGestureHandlerProps"],[59,473,66,34],[59,474,66,34,"nativeViewGestureHandlerProps"],[59,503,66,34],[59,504,67,1],[60,2,79,0],[60,11,79,9,"convertToHandlerTag"],[60,30,79,28,"convertToHandlerTag"],[60,31,79,29,"ref"],[60,34,79,44],[60,36,79,54],[61,4,80,2],[61,8,80,6],[61,15,80,13,"ref"],[61,18,80,16],[61,23,80,21],[61,31,80,29],[61,33,80,31],[62,6,81,4],[62,13,81,11,"ref"],[62,16,81,14],[63,4,82,2],[63,5,82,3],[63,11,82,9],[63,15,82,13,"ref"],[63,18,82,16],[63,30,82,28,"BaseGesture"],[63,39,82,39],[63,40,82,39,"BaseGesture"],[63,51,82,39],[63,53,82,41],[64,6,83,4],[64,13,83,11,"ref"],[64,16,83,14],[64,17,83,15,"handlerTag"],[64,27,83,25],[65,4,84,2],[65,5,84,3],[65,11,84,9],[66,6,85,4],[67,6,86,4],[68,6,87,4],[68,13,87,11,"ref"],[68,16,87,14],[68,17,87,15,"current"],[68,24,87,22],[68,26,87,24,"handlerTag"],[68,36,87,34],[68,40,87,38],[68,41,87,39],[68,42,87,40],[69,4,88,2],[70,2,89,0],[71,2,91,0],[71,11,91,9,"extractValidHandlerTags"],[71,34,91,32,"extractValidHandlerTags"],[71,35,91,33,"interactionGroup"],[71,51,91,75],[71,53,91,77],[72,4,92,2],[72,11,93,4,"interactionGroup"],[72,27,93,20],[72,29,93,22,"map"],[72,32,93,25],[72,33,93,26,"convertToHandlerTag"],[72,52,93,45],[72,53,93,46],[72,55,93,48,"filter"],[72,61,93,54],[72,62,93,56,"tag"],[72,65,93,59],[72,69,93,64,"tag"],[72,72,93,67],[72,75,93,70],[72,76,93,71],[72,77,93,72],[72,81,93,76],[72,83,93,78],[73,2,95,0],[74,2,97,0],[74,11,97,9,"dropHandlers"],[74,23,97,21,"dropHandlers"],[74,24,97,22,"preparedGesture"],[74,39,97,61],[74,41,97,63],[75,4,98,2],[75,9,98,7],[75,13,98,13,"handler"],[75,20,98,20],[75,24,98,24,"preparedGesture"],[75,39,98,39],[75,40,98,40,"config"],[75,46,98,46],[75,48,98,48],[76,6,99,4,"RNGestureHandlerModule"],[76,28,99,26],[76,29,99,26,"default"],[76,36,99,26],[76,37,99,27,"dropGestureHandler"],[76,55,99,45],[76,56,99,46,"handler"],[76,63,99,53],[76,64,99,54,"handlerTag"],[76,74,99,64],[76,75,99,65],[77,6,101,4],[77,10,101,4,"unregisterHandler"],[77,27,101,21],[77,28,101,21,"unregisterHandler"],[77,45,101,21],[77,47,101,22,"handler"],[77,54,101,29],[77,55,101,30,"handlerTag"],[77,65,101,40],[77,67,101,42,"handler"],[77,74,101,49],[77,75,101,50,"config"],[77,81,101,56],[77,82,101,57,"testId"],[77,88,101,63],[77,89,101,64],[78,4,102,2],[79,4,104,2],[79,8,104,2,"scheduleFlushOperations"],[79,29,104,25],[79,30,104,25,"scheduleFlushOperations"],[79,53,104,25],[79,55,104,26],[79,56,104,27],[80,2,105,0],[81,2,107,0],[81,11,107,9,"checkGestureCallbacksForWorklets"],[81,43,107,41,"checkGestureCallbacksForWorklets"],[81,44,107,42,"gesture"],[81,51,107,62],[81,53,107,64],[82,4,108,2],[83,4,109,2],[84,4,110,2],[84,8,110,6,"gesture"],[84,15,110,13],[84,16,110,14,"config"],[84,22,110,20],[84,23,110,21,"runOnJS"],[84,30,110,28],[84,32,110,30],[85,6,111,4],[86,4,112,2],[87,4,114,2],[87,8,114,8,"areSomeNotWorklets"],[87,26,114,26],[87,29,114,29,"gesture"],[87,36,114,36],[87,37,114,37,"handlers"],[87,45,114,45],[87,46,114,46,"isWorklet"],[87,55,114,55],[87,56,114,56,"includes"],[87,64,114,64],[87,65,114,65],[87,70,114,70],[87,71,114,71],[88,4,115,2],[88,8,115,8,"areSomeWorklets"],[88,23,115,23],[88,26,115,26,"gesture"],[88,33,115,33],[88,34,115,34,"handlers"],[88,42,115,42],[88,43,115,43,"isWorklet"],[88,52,115,52],[88,53,115,53,"includes"],[88,61,115,61],[88,62,115,62],[88,66,115,66],[88,67,115,67],[90,4,117,2],[91,4,118,2],[92,4,119,2],[92,8,119,6,"areSomeNotWorklets"],[92,26,119,24],[92,30,119,28,"areSomeWorklets"],[92,45,119,43],[92,47,119,45],[93,6,120,4,"console"],[93,13,120,11],[93,14,120,12,"error"],[93,19,120,17],[93,20,121,6],[93,24,121,6,"tagMessage"],[93,30,121,16],[93,31,121,16,"tagMessage"],[93,41,121,16],[93,43,122,8],[93,310,123,6],[93,311,124,4],[93,312,124,5],[94,4,125,2],[95,2,126,0],[96,2,144,0],[96,11,144,9,"attachHandlers"],[96,25,144,23,"attachHandlers"],[96,26,144,23,"_ref"],[96,30,144,23],[96,32,151,25],[97,4,151,25],[97,8,145,2,"preparedGesture"],[97,23,145,17],[97,26,145,17,"_ref"],[97,30,145,17],[97,31,145,2,"preparedGesture"],[97,46,145,17],[98,6,146,2,"gestureConfig"],[98,19,146,15],[98,22,146,15,"_ref"],[98,26,146,15],[98,27,146,2,"gestureConfig"],[98,40,146,15],[99,6,147,2,"gesture"],[99,13,147,9],[99,16,147,9,"_ref"],[99,20,147,9],[99,21,147,2,"gesture"],[99,28,147,9],[100,6,148,2,"viewTag"],[100,13,148,9],[100,16,148,9,"_ref"],[100,20,148,9],[100,21,148,2,"viewTag"],[100,28,148,9],[101,6,149,2,"webEventHandlersRef"],[101,25,149,21],[101,28,149,21,"_ref"],[101,32,149,21],[101,33,149,2,"webEventHandlersRef"],[101,52,149,21],[102,6,150,2,"mountedRef"],[102,16,150,12],[102,19,150,12,"_ref"],[102,23,150,12],[102,24,150,2,"mountedRef"],[102,34,150,12],[103,4,152,2],[103,8,152,6],[103,9,152,7,"preparedGesture"],[103,24,152,22],[103,25,152,23,"firstExecution"],[103,39,152,37],[103,41,152,39],[104,6,153,4,"gestureConfig"],[104,19,153,17],[104,20,153,18,"initialize"],[104,30,153,28],[104,31,153,29],[104,32,153,30],[105,4,154,2],[105,5,154,3],[105,11,154,9],[106,6,155,4,"preparedGesture"],[106,21,155,19],[106,22,155,20,"firstExecution"],[106,36,155,34],[106,39,155,37],[106,44,155,42],[107,4,156,2],[109,4,158,2],[110,4,159,2],[111,4,160,2],[111,8,160,2,"ghQueueMicrotask"],[111,25,160,18],[111,26,160,18,"ghQueueMicrotask"],[111,42,160,18],[111,44,160,19],[111,50,160,25],[112,6,161,4],[112,10,161,8],[112,11,161,9,"mountedRef"],[112,21,161,19],[112,22,161,20,"current"],[112,29,161,27],[112,31,161,29],[113,8,162,6],[114,6,163,4],[115,6,164,4,"gestureConfig"],[115,19,164,17],[115,20,164,18,"prepare"],[115,27,164,25],[115,28,164,26],[115,29,164,27],[116,4,165,2],[116,5,165,3],[116,6,165,4],[117,4,167,2],[117,9,167,7],[117,13,167,13,"handler"],[117,20,167,20],[117,24,167,24,"gesture"],[117,31,167,31],[117,33,167,33],[118,6,168,4,"checkGestureCallbacksForWorklets"],[118,38,168,36],[118,39,168,37,"handler"],[118,46,168,44],[118,47,168,45],[119,6,169,4,"RNGestureHandlerModule"],[119,28,169,26],[119,29,169,26,"default"],[119,36,169,26],[119,37,169,27,"createGestureHandler"],[119,57,169,47],[119,58,170,6,"handler"],[119,65,170,13],[119,66,170,14,"handlerName"],[119,77,170,25],[119,79,171,6,"handler"],[119,86,171,13],[119,87,171,14,"handlerTag"],[119,97,171,24],[119,99,172,6],[119,103,172,6,"filterConfig"],[119,124,172,18],[119,125,172,18,"filterConfig"],[119,137,172,18],[119,139,172,19,"handler"],[119,146,172,26],[119,147,172,27,"config"],[119,153,172,33],[119,155,172,35,"ALLOWED_PROPS"],[119,168,172,48],[119,169,173,4],[119,170,173,5],[120,6,175,4],[120,10,175,4,"registerHandler"],[120,27,175,19],[120,28,175,19,"registerHandler"],[120,43,175,19],[120,45,175,20,"handler"],[120,52,175,27],[120,53,175,28,"handlerTag"],[120,63,175,38],[120,65,175,40,"handler"],[120,72,175,47],[120,74,175,49,"handler"],[120,81,175,56],[120,82,175,57,"config"],[120,88,175,63],[120,89,175,64,"testId"],[120,95,175,70],[120,96,175,71],[121,4,176,2],[123,4,178,2],[124,4,179,2],[125,4,180,2],[125,8,180,2,"ghQueueMicrotask"],[125,25,180,18],[125,26,180,18,"ghQueueMicrotask"],[125,42,180,18],[125,44,180,19],[125,50,180,25],[126,6,181,4],[126,10,181,8],[126,11,181,9,"mountedRef"],[126,21,181,19],[126,22,181,20,"current"],[126,29,181,27],[126,31,181,29],[127,8,182,6],[128,6,183,4],[129,6,184,4],[129,11,184,9],[129,15,184,15,"handler"],[129,23,184,22],[129,27,184,26,"gesture"],[129,34,184,33],[129,36,184,35],[130,8,185,6],[130,12,185,10,"requireToFail"],[130,25,185,33],[130,28,185,36],[130,30,185,38],[131,8,186,6],[131,12,186,10,"handler"],[131,20,186,17],[131,21,186,18,"config"],[131,27,186,24],[131,28,186,25,"requireToFail"],[131,41,186,38],[131,43,186,40],[132,10,187,8,"requireToFail"],[132,23,187,21],[132,26,187,24,"extractValidHandlerTags"],[132,49,187,47],[132,50,187,48,"handler"],[132,58,187,55],[132,59,187,56,"config"],[132,65,187,62],[132,66,187,63,"requireToFail"],[132,79,187,76],[132,80,187,77],[133,8,188,6],[134,8,190,6],[134,12,190,10,"simultaneousWith"],[134,28,190,36],[134,31,190,39],[134,33,190,41],[135,8,191,6],[135,12,191,10,"handler"],[135,20,191,17],[135,21,191,18,"config"],[135,27,191,24],[135,28,191,25,"simultaneousWith"],[135,44,191,41],[135,46,191,43],[136,10,192,8,"simultaneousWith"],[136,26,192,24],[136,29,192,27,"extractValidHandlerTags"],[136,52,192,50],[136,53,193,10,"handler"],[136,61,193,17],[136,62,193,18,"config"],[136,68,193,24],[136,69,193,25,"simultaneousWith"],[136,85,194,8],[136,86,194,9],[137,8,195,6],[138,8,197,6],[138,12,197,10,"blocksHandlers"],[138,26,197,34],[138,29,197,37],[138,31,197,39],[139,8,198,6],[139,12,198,10,"handler"],[139,20,198,17],[139,21,198,18,"config"],[139,27,198,24],[139,28,198,25,"blocksHandlers"],[139,42,198,39],[139,44,198,41],[140,10,199,8,"blocksHandlers"],[140,24,199,22],[140,27,199,25,"extractValidHandlerTags"],[140,50,199,48],[140,51,199,49,"handler"],[140,59,199,56],[140,60,199,57,"config"],[140,66,199,63],[140,67,199,64,"blocksHandlers"],[140,81,199,78],[140,82,199,79],[141,8,200,6],[142,8,202,6,"RNGestureHandlerModule"],[142,30,202,28],[142,31,202,28,"default"],[142,38,202,28],[142,39,202,29,"updateGestureHandler"],[142,59,202,49],[142,60,203,8,"handler"],[142,68,203,15],[142,69,203,16,"handlerTag"],[142,79,203,26],[142,81,204,8],[142,85,204,8,"filterConfig"],[142,106,204,20],[142,107,204,20,"filterConfig"],[142,119,204,20],[142,121,204,21,"handler"],[142,129,204,28],[142,130,204,29,"config"],[142,136,204,35],[142,138,204,37,"ALLOWED_PROPS"],[142,151,204,50],[142,153,204,52],[143,10,205,10,"simultaneousHandlers"],[143,30,205,30],[143,32,205,32,"simultaneousWith"],[143,48,205,48],[144,10,206,10,"waitFor"],[144,17,206,17],[144,19,206,19,"requireToFail"],[144,32,206,32],[145,10,207,10,"blocksHandlers"],[145,24,207,24],[145,26,207,26,"blocksHandlers"],[146,8,208,8],[146,9,208,9],[146,10,209,6],[146,11,209,7],[147,6,210,4],[148,6,212,4],[148,10,212,4,"scheduleFlushOperations"],[148,31,212,27],[148,32,212,27,"scheduleFlushOperations"],[148,55,212,27],[148,57,212,28],[148,58,212,29],[149,4,213,2],[149,5,213,3],[149,6,213,4],[150,4,215,2,"preparedGesture"],[150,19,215,17],[150,20,215,18,"config"],[150,26,215,24],[150,29,215,27,"gesture"],[150,36,215,34],[151,4,217,2],[151,9,217,7],[151,13,217,13,"gesture"],[151,21,217,20],[151,25,217,24,"preparedGesture"],[151,40,217,39],[151,41,217,40,"config"],[151,47,217,46],[151,49,217,48],[152,6,218,4],[152,10,218,10,"actionType"],[152,20,218,20],[152,23,218,23,"gesture"],[152,31,218,30],[152,32,218,31,"shouldUseReanimated"],[152,51,218,50],[152,54,219,8,"ActionType"],[152,65,219,18],[152,66,219,18,"ActionType"],[152,76,219,18],[152,77,219,19,"REANIMATED_WORKLET"],[152,95,219,37],[152,98,220,8,"ActionType"],[152,109,220,18],[152,110,220,18,"ActionType"],[152,120,220,18],[152,121,220,19,"JS_FUNCTION_NEW_API"],[152,140,220,38],[153,6,222,4],[153,10,222,8,"Platform"],[153,22,222,16],[153,23,222,16,"Platform"],[153,31,222,16],[153,32,222,17,"OS"],[153,34,222,19],[153,39,222,24],[153,44,222,29],[153,46,222,31],[154,8,224,8,"RNGestureHandlerModule"],[154,30,224,30],[154,31,224,30,"default"],[154,38,224,30],[154,39,224,31,"attachGestureHandler"],[154,59,224,51],[154,60,226,8,"gesture"],[154,68,226,15],[154,69,226,16,"handlerTag"],[154,79,226,26],[154,81,227,8,"viewTag"],[154,88,227,15],[154,90,228,8,"ActionType"],[154,101,228,18],[154,102,228,18,"ActionType"],[154,112,228,18],[154,113,228,19,"JS_FUNCTION_OLD_API"],[154,132,228,38],[155,8,228,40],[156,8,229,8,"webEventHandlersRef"],[156,27,230,6],[156,28,230,7],[157,6,231,4],[157,7,231,5],[157,13,231,11],[158,8,232,6,"RNGestureHandlerModule"],[158,30,232,28],[158,31,232,28,"default"],[158,38,232,28],[158,39,232,29,"attachGestureHandler"],[158,59,232,49],[158,60,233,8,"gesture"],[158,68,233,15],[158,69,233,16,"handlerTag"],[158,79,233,26],[158,81,234,8,"viewTag"],[158,88,234,15],[158,90,235,8,"actionType"],[158,100,236,6],[158,101,236,7],[159,6,237,4],[160,4,238,2],[161,4,240,2],[161,8,240,6,"preparedGesture"],[161,23,240,21],[161,24,240,22,"animatedHandlers"],[161,40,240,38],[161,42,240,40],[162,6,241,4],[162,10,241,10,"isAnimatedGesture"],[162,27,241,27],[162,30,241,31,"g"],[162,31,241,45],[162,35,241,50,"g"],[162,36,241,51],[162,37,241,52,"shouldUseReanimated"],[162,56,241,71],[163,6,243,4,"preparedGesture"],[163,21,243,19],[163,22,243,20,"animatedHandlers"],[163,38,243,36],[163,39,243,37,"value"],[163,44,243,42],[163,47,243,45,"gesture"],[163,54,243,52],[163,55,244,7,"filter"],[163,61,244,13],[163,62,244,14,"isAnimatedGesture"],[163,79,244,31],[163,80,244,32],[163,81,245,7,"map"],[163,84,245,10],[163,85,245,12,"g"],[163,86,245,13],[163,90,245,18,"g"],[163,91,245,19],[163,92,245,20,"handlers"],[163,100,245,28],[163,101,247,7],[164,4,248,2],[165,2,249,0],[166,2,251,0],[166,11,251,9,"updateHandlers"],[166,25,251,23,"updateHandlers"],[166,26,252,2,"preparedGesture"],[166,41,252,41],[166,43,253,2,"gestureConfig"],[166,56,253,46],[166,58,254,2,"gesture"],[166,65,254,24],[166,67,255,2,"mountedRef"],[166,77,255,38],[166,79,256,2],[167,4,257,2,"gestureConfig"],[167,17,257,15],[167,18,257,16,"prepare"],[167,25,257,23],[167,26,257,24],[167,27,257,25],[168,4,259,2],[168,9,259,7],[168,13,259,11,"i"],[168,14,259,12],[168,17,259,15],[168,18,259,16],[168,20,259,18,"i"],[168,21,259,19],[168,24,259,22,"gesture"],[168,31,259,29],[168,32,259,30,"length"],[168,38,259,36],[168,40,259,38,"i"],[168,41,259,39],[168,43,259,41],[168,45,259,43],[169,6,260,4],[169,10,260,10,"handler"],[169,17,260,17],[169,20,260,20,"preparedGesture"],[169,35,260,35],[169,36,260,36,"config"],[169,42,260,42],[169,43,260,43,"i"],[169,44,260,44],[169,45,260,45],[170,6,261,4,"checkGestureCallbacksForWorklets"],[170,38,261,36],[170,39,261,37,"handler"],[170,46,261,44],[170,47,261,45],[172,6,263,4],[173,6,264,4],[174,6,265,4],[174,10,265,8,"gesture"],[174,17,265,15],[174,18,265,16,"i"],[174,19,265,17],[174,20,265,18],[174,21,265,19,"handlerTag"],[174,31,265,29],[174,36,265,34,"handler"],[174,43,265,41],[174,44,265,42,"handlerTag"],[174,54,265,52],[174,56,265,54],[175,8,266,6,"gesture"],[175,15,266,13],[175,16,266,14,"i"],[175,17,266,15],[175,18,266,16],[175,19,266,17,"handlerTag"],[175,29,266,27],[175,32,266,30,"handler"],[175,39,266,37],[175,40,266,38,"handlerTag"],[175,50,266,48],[176,8,267,6,"gesture"],[176,15,267,13],[176,16,267,14,"i"],[176,17,267,15],[176,18,267,16],[176,19,267,17,"handlers"],[176,27,267,25],[176,28,267,26,"handlerTag"],[176,38,267,36],[176,41,267,39,"handler"],[176,48,267,46],[176,49,267,47,"handlerTag"],[176,59,267,57],[177,6,268,4],[178,4,269,2],[180,4,271,2],[181,4,272,2],[182,4,273,2],[183,4,274,2],[183,8,274,2,"ghQueueMicrotask"],[183,25,274,18],[183,26,274,18,"ghQueueMicrotask"],[183,42,274,18],[183,44,274,19],[183,50,274,25],[184,6,275,4],[184,10,275,8],[184,11,275,9,"mountedRef"],[184,21,275,19],[184,22,275,20,"current"],[184,29,275,27],[184,31,275,29],[185,8,276,6],[186,6,277,4],[187,6,278,4],[187,11,278,9],[187,15,278,13,"i"],[187,17,278,14],[187,20,278,17],[187,21,278,18],[187,23,278,20,"i"],[187,25,278,21],[187,28,278,24,"gesture"],[187,35,278,31],[187,36,278,32,"length"],[187,42,278,38],[187,44,278,40,"i"],[187,46,278,41],[187,48,278,43],[187,50,278,45],[188,8,279,6],[188,12,279,12,"handler"],[188,21,279,19],[188,24,279,22,"preparedGesture"],[188,39,279,37],[188,40,279,38,"config"],[188,46,279,44],[188,47,279,45,"i"],[188,49,279,46],[188,50,279,47],[189,8,281,6,"handler"],[189,17,281,13],[189,18,281,14,"config"],[189,24,281,20],[189,27,281,23,"gesture"],[189,34,281,30],[189,35,281,31,"i"],[189,37,281,32],[189,38,281,33],[189,39,281,34,"config"],[189,45,281,40],[190,8,282,6,"handler"],[190,17,282,13],[190,18,282,14,"handlers"],[190,26,282,22],[190,29,282,25,"gesture"],[190,36,282,32],[190,37,282,33,"i"],[190,39,282,34],[190,40,282,35],[190,41,282,36,"handlers"],[190,49,282,44],[191,8,284,6],[191,12,284,12,"requireToFail"],[191,25,284,25],[191,28,284,28,"extractValidHandlerTags"],[191,51,284,51],[191,52,285,8,"handler"],[191,61,285,15],[191,62,285,16,"config"],[191,68,285,22],[191,69,285,23,"requireToFail"],[191,82,286,6],[191,83,286,7],[192,8,288,6],[192,12,288,12,"simultaneousWith"],[192,28,288,28],[192,31,288,31,"extractValidHandlerTags"],[192,54,288,54],[192,55,289,8,"handler"],[192,64,289,15],[192,65,289,16,"config"],[192,71,289,22],[192,72,289,23,"simultaneousWith"],[192,88,290,6],[192,89,290,7],[193,8,292,6,"RNGestureHandlerModule"],[193,30,292,28],[193,31,292,28,"default"],[193,38,292,28],[193,39,292,29,"updateGestureHandler"],[193,59,292,49],[193,60,293,8,"handler"],[193,69,293,15],[193,70,293,16,"handlerTag"],[193,80,293,26],[193,82,294,8],[193,86,294,8,"filterConfig"],[193,107,294,20],[193,108,294,20,"filterConfig"],[193,120,294,20],[193,122,294,21,"handler"],[193,131,294,28],[193,132,294,29,"config"],[193,138,294,35],[193,140,294,37,"ALLOWED_PROPS"],[193,153,294,50],[193,155,294,52],[194,10,295,10,"simultaneousHandlers"],[194,30,295,30],[194,32,295,32,"simultaneousWith"],[194,48,295,48],[195,10,296,10,"waitFor"],[195,17,296,17],[195,19,296,19,"requireToFail"],[196,8,297,8],[196,9,297,9],[196,10,298,6],[196,11,298,7],[197,8,300,6],[197,12,300,6,"registerHandler"],[197,29,300,21],[197,30,300,21,"registerHandler"],[197,45,300,21],[197,47,300,22,"handler"],[197,56,300,29],[197,57,300,30,"handlerTag"],[197,67,300,40],[197,69,300,42,"handler"],[197,78,300,49],[197,80,300,51,"handler"],[197,89,300,58],[197,90,300,59,"config"],[197,96,300,65],[197,97,300,66,"testId"],[197,103,300,72],[197,104,300,73],[198,6,301,4],[199,6,303,4],[199,10,303,8,"preparedGesture"],[199,25,303,23],[199,26,303,24,"animatedHandlers"],[199,42,303,40],[199,44,303,42],[200,8,304,6],[200,12,304,12,"previousHandlersValue"],[200,33,304,33],[200,36,305,8,"preparedGesture"],[200,51,305,23],[200,52,305,24,"animatedHandlers"],[200,68,305,40],[200,69,305,41,"value"],[200,74,305,46],[200,78,305,50],[200,80,305,52],[201,8,306,6],[201,12,306,12,"newHandlersValue"],[201,28,306,28],[201,31,306,31,"preparedGesture"],[201,46,306,46],[201,47,306,47,"config"],[201,53,306,53],[201,54,307,9,"filter"],[201,60,307,15],[201,61,307,17,"g"],[201,62,307,18],[201,66,307,23,"g"],[201,67,307,24],[201,68,307,25,"shouldUseReanimated"],[201,87,307,44],[201,88,307,45],[201,89,307,46],[202,8,307,46],[202,9,308,9,"map"],[202,12,308,12],[202,13,308,14,"g"],[202,14,308,15],[202,18,308,20,"g"],[202,19,308,21],[202,20,308,22,"handlers"],[202,28,308,30],[202,29,310,9],[204,8,312,6],[205,8,313,6],[205,12,313,10,"shouldUpdateSharedValue"],[205,35,313,33],[205,38,314,8,"previousHandlersValue"],[205,59,314,29],[205,60,314,30,"length"],[205,66,314,36],[205,71,314,41,"newHandlersValue"],[205,87,314,57],[205,88,314,58,"length"],[205,94,314,64],[206,8,316,6],[206,12,316,10],[206,13,316,11,"shouldUpdateSharedValue"],[206,36,316,34],[206,38,316,36],[207,10,317,8],[208,10,318,8],[208,15,318,13],[208,19,318,17,"i"],[208,22,318,18],[208,25,318,21],[208,26,318,22],[208,28,318,24,"i"],[208,31,318,25],[208,34,318,28,"newHandlersValue"],[208,50,318,44],[208,51,318,45,"length"],[208,57,318,51],[208,59,318,53,"i"],[208,62,318,54],[208,64,318,56],[208,66,318,58],[209,12,319,10],[210,12,320,12],[211,12,321,12,"newHandlersValue"],[211,28,321,28],[211,29,321,29,"i"],[211,32,321,30],[211,33,321,31],[211,34,321,32,"gestureId"],[211,43,321,41],[211,48,321,46,"previousHandlersValue"],[211,69,321,67],[211,70,321,68,"i"],[211,73,321,69],[211,74,321,70],[211,75,321,71,"gestureId"],[211,84,321,80],[211,86,322,12],[212,14,323,12,"shouldUpdateSharedValue"],[212,37,323,35],[212,40,323,38],[212,44,323,42],[213,14,324,12],[214,12,325,10],[215,10,326,8],[216,8,327,6],[217,8,329,6],[217,12,329,10,"shouldUpdateSharedValue"],[217,35,329,33],[217,37,329,35],[218,10,330,8,"preparedGesture"],[218,25,330,23],[218,26,330,24,"animatedHandlers"],[218,42,330,40],[218,43,330,41,"value"],[218,48,330,46],[218,51,330,49,"newHandlersValue"],[218,67,330,65],[219,8,331,6],[220,6,332,4],[221,6,334,4],[221,10,334,4,"scheduleFlushOperations"],[221,31,334,27],[221,32,334,27,"scheduleFlushOperations"],[221,55,334,27],[221,57,334,28],[221,58,334,29],[222,4,335,2],[222,5,335,3],[222,6,335,4],[223,2,336,0],[224,2,338,0],[224,11,338,9,"needsToReattach"],[224,26,338,24,"needsToReattach"],[224,27,339,2,"preparedGesture"],[224,42,339,41],[224,44,340,2,"gesture"],[224,51,340,24],[224,53,341,2],[225,4,342,2],[225,8,342,6,"gesture"],[225,15,342,13],[225,16,342,14,"length"],[225,22,342,20],[225,27,342,25,"preparedGesture"],[225,42,342,40],[225,43,342,41,"config"],[225,49,342,47],[225,50,342,48,"length"],[225,56,342,54],[225,58,342,56],[226,6,343,4],[226,13,343,11],[226,17,343,15],[227,4,344,2],[228,4,345,2],[228,9,345,7],[228,13,345,11,"i"],[228,14,345,12],[228,17,345,15],[228,18,345,16],[228,20,345,18,"i"],[228,21,345,19],[228,24,345,22,"gesture"],[228,31,345,29],[228,32,345,30,"length"],[228,38,345,36],[228,40,345,38,"i"],[228,41,345,39],[228,43,345,41],[228,45,345,43],[229,6,346,4],[229,10,347,6,"gesture"],[229,17,347,13],[229,18,347,14,"i"],[229,19,347,15],[229,20,347,16],[229,21,347,17,"handlerName"],[229,32,347,28],[229,37,347,33,"preparedGesture"],[229,52,347,48],[229,53,347,49,"config"],[229,59,347,55],[229,60,347,56,"i"],[229,61,347,57],[229,62,347,58],[229,63,347,59,"handlerName"],[229,74,347,70],[229,78,348,6,"gesture"],[229,85,348,13],[229,86,348,14,"i"],[229,87,348,15],[229,88,348,16],[229,89,348,17,"shouldUseReanimated"],[229,108,348,36],[229,113,349,8,"preparedGesture"],[229,128,349,23],[229,129,349,24,"config"],[229,135,349,30],[229,136,349,31,"i"],[229,137,349,32],[229,138,349,33],[229,139,349,34,"shouldUseReanimated"],[229,158,349,53],[229,160,350,6],[230,8,351,6],[230,15,351,13],[230,19,351,17],[231,6,352,4],[232,4,353,2],[233,4,355,2],[233,11,355,9],[233,16,355,14],[234,2,356,0],[235,2,356,1],[235,6,356,1,"_worklet_13883357260557_init_data"],[235,39,356,1],[236,4,356,1,"code"],[236,8,356,1],[237,4,356,1,"location"],[237,12,356,1],[238,4,356,1,"sourceMap"],[238,13,356,1],[239,4,356,1,"version"],[239,11,356,1],[240,2,356,1],[241,2,356,1],[241,6,358,9,"isStateChangeEvent"],[241,24,358,27],[241,27,358,0],[242,4,358,0],[242,8,358,0,"_e"],[242,10,358,0],[242,18,358,0,"global"],[242,24,358,0],[242,25,358,0,"Error"],[242,30,358,0],[243,4,358,0],[243,8,358,0,"isStateChangeEvent"],[243,26,358,0],[243,38,358,0,"isStateChangeEvent"],[243,39,359,2,"event"],[243,44,359,73],[243,46,360,36],[244,6,362,2],[245,6,363,2],[245,13,363,9,"event"],[245,18,363,14],[245,19,363,15,"oldState"],[245,27,363,23],[245,31,363,27],[245,35,363,31],[246,4,364,0],[246,5,364,1],[247,4,364,1,"isStateChangeEvent"],[247,22,364,1],[247,23,364,1,"__closure"],[247,32,364,1],[248,4,364,1,"isStateChangeEvent"],[248,22,364,1],[248,23,364,1,"__workletHash"],[248,36,364,1],[249,4,364,1,"isStateChangeEvent"],[249,22,364,1],[249,23,364,1,"__initData"],[249,33,364,1],[249,36,364,1,"_worklet_13883357260557_init_data"],[249,69,364,1],[250,4,364,1,"isStateChangeEvent"],[250,22,364,1],[250,23,364,1,"__stackDetails"],[250,37,364,1],[250,40,364,1,"_e"],[250,42,364,1],[251,4,364,1],[251,11,364,1,"isStateChangeEvent"],[251,29,364,1],[252,2,364,1],[252,3,358,0],[253,2,358,0],[253,6,358,0,"_worklet_15872269086045_init_data"],[253,39,358,0],[254,4,358,0,"code"],[254,8,358,0],[255,4,358,0,"location"],[255,12,358,0],[256,4,358,0,"sourceMap"],[256,13,358,0],[257,4,358,0,"version"],[257,11,358,0],[258,2,358,0],[259,2,358,0],[259,6,366,9,"isTouchEvent"],[259,18,366,21],[259,21,366,0],[260,4,366,0],[260,8,366,0,"_e"],[260,10,366,0],[260,18,366,0,"global"],[260,24,366,0],[260,25,366,0,"Error"],[260,30,366,0],[261,4,366,0],[261,8,366,0,"isTouchEvent"],[261,20,366,0],[261,32,366,0,"isTouchEvent"],[261,33,367,2,"event"],[261,38,367,73],[261,40,368,30],[262,6,370,2],[262,13,370,9,"event"],[262,18,370,14],[262,19,370,15,"eventType"],[262,28,370,24],[262,32,370,28],[262,36,370,32],[263,4,371,0],[263,5,371,1],[264,4,371,1,"isTouchEvent"],[264,16,371,1],[264,17,371,1,"__closure"],[264,26,371,1],[265,4,371,1,"isTouchEvent"],[265,16,371,1],[265,17,371,1,"__workletHash"],[265,30,371,1],[266,4,371,1,"isTouchEvent"],[266,16,371,1],[266,17,371,1,"__initData"],[266,27,371,1],[266,30,371,1,"_worklet_15872269086045_init_data"],[266,63,371,1],[267,4,371,1,"isTouchEvent"],[267,16,371,1],[267,17,371,1,"__stackDetails"],[267,31,371,1],[267,34,371,1,"_e"],[267,36,371,1],[268,4,371,1],[268,11,371,1,"isTouchEvent"],[268,23,371,1],[269,2,371,1],[269,3,366,0],[270,2,366,0],[270,6,366,0,"_worklet_12621821362088_init_data"],[270,39,366,0],[271,4,366,0,"code"],[271,8,366,0],[272,4,366,0,"location"],[272,12,366,0],[273,4,366,0,"sourceMap"],[273,13,366,0],[274,4,366,0,"version"],[274,11,366,0],[275,2,366,0],[276,2,366,0],[276,6,373,9,"getHandler"],[276,16,373,19],[276,19,373,0],[277,4,373,0],[277,8,373,0,"_e"],[277,10,373,0],[277,18,373,0,"global"],[277,24,373,0],[277,25,373,0,"Error"],[277,30,373,0],[278,4,373,0],[278,8,373,0,"getHandler"],[278,18,373,0],[278,30,373,0,"getHandler"],[278,31,374,2,"type"],[278,35,374,21],[278,37,375,2,"gesture"],[278,44,375,52],[278,46,376,2],[279,6,378,2],[279,14,378,10,"type"],[279,18,378,14],[280,8,379,4],[280,13,379,9,"CALLBACK_TYPE"],[280,22,379,22],[280,23,379,22,"CALLBACK_TYPE"],[280,36,379,22],[280,37,379,23,"BEGAN"],[280,42,379,28],[281,10,380,6],[281,17,380,13,"gesture"],[281,24,380,20],[281,25,380,21,"onBegin"],[281,32,380,28],[282,8,381,4],[282,13,381,9,"CALLBACK_TYPE"],[282,22,381,22],[282,23,381,22,"CALLBACK_TYPE"],[282,36,381,22],[282,37,381,23,"START"],[282,42,381,28],[283,10,382,6],[283,17,382,13,"gesture"],[283,24,382,20],[283,25,382,21,"onStart"],[283,32,382,28],[284,8,383,4],[284,13,383,9,"CALLBACK_TYPE"],[284,22,383,22],[284,23,383,22,"CALLBACK_TYPE"],[284,36,383,22],[284,37,383,23,"UPDATE"],[284,43,383,29],[285,10,384,6],[285,17,384,13,"gesture"],[285,24,384,20],[285,25,384,21,"onUpdate"],[285,33,384,29],[286,8,385,4],[286,13,385,9,"CALLBACK_TYPE"],[286,22,385,22],[286,23,385,22,"CALLBACK_TYPE"],[286,36,385,22],[286,37,385,23,"CHANGE"],[286,43,385,29],[287,10,386,6],[287,17,386,13,"gesture"],[287,24,386,20],[287,25,386,21,"onChange"],[287,33,386,29],[288,8,387,4],[288,13,387,9,"CALLBACK_TYPE"],[288,22,387,22],[288,23,387,22,"CALLBACK_TYPE"],[288,36,387,22],[288,37,387,23,"END"],[288,40,387,26],[289,10,388,6],[289,17,388,13,"gesture"],[289,24,388,20],[289,25,388,21,"onEnd"],[289,30,388,26],[290,8,389,4],[290,13,389,9,"CALLBACK_TYPE"],[290,22,389,22],[290,23,389,22,"CALLBACK_TYPE"],[290,36,389,22],[290,37,389,23,"FINALIZE"],[290,45,389,31],[291,10,390,6],[291,17,390,13,"gesture"],[291,24,390,20],[291,25,390,21,"onFinalize"],[291,35,390,31],[292,8,391,4],[292,13,391,9,"CALLBACK_TYPE"],[292,22,391,22],[292,23,391,22,"CALLBACK_TYPE"],[292,36,391,22],[292,37,391,23,"TOUCHES_DOWN"],[292,49,391,35],[293,10,392,6],[293,17,392,13,"gesture"],[293,24,392,20],[293,25,392,21,"onTouchesDown"],[293,38,392,34],[294,8,393,4],[294,13,393,9,"CALLBACK_TYPE"],[294,22,393,22],[294,23,393,22,"CALLBACK_TYPE"],[294,36,393,22],[294,37,393,23,"TOUCHES_MOVE"],[294,49,393,35],[295,10,394,6],[295,17,394,13,"gesture"],[295,24,394,20],[295,25,394,21,"onTouchesMove"],[295,38,394,34],[296,8,395,4],[296,13,395,9,"CALLBACK_TYPE"],[296,22,395,22],[296,23,395,22,"CALLBACK_TYPE"],[296,36,395,22],[296,37,395,23,"TOUCHES_UP"],[296,47,395,33],[297,10,396,6],[297,17,396,13,"gesture"],[297,24,396,20],[297,25,396,21,"onTouchesUp"],[297,36,396,32],[298,8,397,4],[298,13,397,9,"CALLBACK_TYPE"],[298,22,397,22],[298,23,397,22,"CALLBACK_TYPE"],[298,36,397,22],[298,37,397,23,"TOUCHES_CANCELLED"],[298,54,397,40],[299,10,398,6],[299,17,398,13,"gesture"],[299,24,398,20],[299,25,398,21,"onTouchesCancelled"],[299,43,398,39],[300,6,399,2],[301,4,400,0],[301,5,400,1],[302,4,400,1,"getHandler"],[302,14,400,1],[302,15,400,1,"__closure"],[302,24,400,1],[303,6,400,1,"CALLBACK_TYPE"],[303,19,400,1],[303,21,374,8,"CALLBACK_TYPE"],[303,30,374,21],[303,31,374,21,"CALLBACK_TYPE"],[304,4,374,21],[305,4,374,21,"getHandler"],[305,14,374,21],[305,15,374,21,"__workletHash"],[305,28,374,21],[306,4,374,21,"getHandler"],[306,14,374,21],[306,15,374,21,"__initData"],[306,25,374,21],[306,28,374,21,"_worklet_12621821362088_init_data"],[306,61,374,21],[307,4,374,21,"getHandler"],[307,14,374,21],[307,15,374,21,"__stackDetails"],[307,29,374,21],[307,32,374,21,"_e"],[307,34,374,21],[308,4,374,21],[308,11,374,21,"getHandler"],[308,21,374,21],[309,2,374,21],[309,3,373,0],[310,2,373,0],[310,6,373,0,"_worklet_3914047291176_init_data"],[310,38,373,0],[311,4,373,0,"code"],[311,8,373,0],[312,4,373,0,"location"],[312,12,373,0],[313,4,373,0,"sourceMap"],[313,13,373,0],[314,4,373,0,"version"],[314,11,373,0],[315,2,373,0],[316,2,373,0],[316,6,402,9,"touchEventTypeToCallbackType"],[316,34,402,37],[316,37,402,0],[317,4,402,0],[317,8,402,0,"_e"],[317,10,402,0],[317,18,402,0,"global"],[317,24,402,0],[317,25,402,0,"Error"],[317,30,402,0],[318,4,402,0],[318,8,402,0,"touchEventTypeToCallbackType"],[318,36,402,0],[318,48,402,0,"touchEventTypeToCallbackType"],[318,49,403,2,"eventType"],[318,58,403,27],[318,60,404,17],[319,6,406,2],[319,14,406,10,"eventType"],[319,23,406,19],[320,8,407,4],[320,13,407,9,"TouchEventType"],[320,28,407,23],[320,29,407,23,"TouchEventType"],[320,43,407,23],[320,44,407,24,"TOUCHES_DOWN"],[320,56,407,36],[321,10,408,6],[321,17,408,13,"CALLBACK_TYPE"],[321,26,408,26],[321,27,408,26,"CALLBACK_TYPE"],[321,40,408,26],[321,41,408,27,"TOUCHES_DOWN"],[321,53,408,39],[322,8,409,4],[322,13,409,9,"TouchEventType"],[322,28,409,23],[322,29,409,23,"TouchEventType"],[322,43,409,23],[322,44,409,24,"TOUCHES_MOVE"],[322,56,409,36],[323,10,410,6],[323,17,410,13,"CALLBACK_TYPE"],[323,26,410,26],[323,27,410,26,"CALLBACK_TYPE"],[323,40,410,26],[323,41,410,27,"TOUCHES_MOVE"],[323,53,410,39],[324,8,411,4],[324,13,411,9,"TouchEventType"],[324,28,411,23],[324,29,411,23,"TouchEventType"],[324,43,411,23],[324,44,411,24,"TOUCHES_UP"],[324,54,411,34],[325,10,412,6],[325,17,412,13,"CALLBACK_TYPE"],[325,26,412,26],[325,27,412,26,"CALLBACK_TYPE"],[325,40,412,26],[325,41,412,27,"TOUCHES_UP"],[325,51,412,37],[326,8,413,4],[326,13,413,9,"TouchEventType"],[326,28,413,23],[326,29,413,23,"TouchEventType"],[326,43,413,23],[326,44,413,24,"TOUCHES_CANCELLED"],[326,61,413,41],[327,10,414,6],[327,17,414,13,"CALLBACK_TYPE"],[327,26,414,26],[327,27,414,26,"CALLBACK_TYPE"],[327,40,414,26],[327,41,414,27,"TOUCHES_CANCELLED"],[327,58,414,44],[328,6,415,2],[329,6,416,2],[329,13,416,9,"CALLBACK_TYPE"],[329,22,416,22],[329,23,416,22,"CALLBACK_TYPE"],[329,36,416,22],[329,37,416,23,"UNDEFINED"],[329,46,416,32],[330,4,417,0],[330,5,417,1],[331,4,417,1,"touchEventTypeToCallbackType"],[331,32,417,1],[331,33,417,1,"__closure"],[331,42,417,1],[332,6,417,1,"TouchEventType"],[332,20,417,1],[332,22,403,13,"TouchEventType"],[332,37,403,27],[332,38,403,27,"TouchEventType"],[332,52,403,27],[333,6,403,27,"CALLBACK_TYPE"],[333,19,403,27],[333,21,404,3,"CALLBACK_TYPE"],[333,30,404,16],[333,31,404,16,"CALLBACK_TYPE"],[334,4,404,16],[335,4,404,16,"touchEventTypeToCallbackType"],[335,32,404,16],[335,33,404,16,"__workletHash"],[335,46,404,16],[336,4,404,16,"touchEventTypeToCallbackType"],[336,32,404,16],[336,33,404,16,"__initData"],[336,43,404,16],[336,46,404,16,"_worklet_3914047291176_init_data"],[336,78,404,16],[337,4,404,16,"touchEventTypeToCallbackType"],[337,32,404,16],[337,33,404,16,"__stackDetails"],[337,47,404,16],[337,50,404,16,"_e"],[337,52,404,16],[338,4,404,16],[338,11,404,16,"touchEventTypeToCallbackType"],[338,39,404,16],[339,2,404,16],[339,3,402,0],[340,2,402,0],[340,6,402,0,"_worklet_5678919901512_init_data"],[340,38,402,0],[341,4,402,0,"code"],[341,8,402,0],[342,4,402,0,"location"],[342,12,402,0],[343,4,402,0,"sourceMap"],[343,13,402,0],[344,4,402,0,"version"],[344,11,402,0],[345,2,402,0],[346,2,402,0],[346,6,419,9,"runWorklet"],[346,16,419,19],[346,19,419,0],[347,4,419,0],[347,8,419,0,"_e"],[347,10,419,0],[347,18,419,0,"global"],[347,24,419,0],[347,25,419,0,"Error"],[347,30,419,0],[348,4,419,0],[348,8,419,0,"runWorklet"],[348,18,419,0],[348,30,419,0,"runWorklet"],[348,31,420,2,"type"],[348,35,420,21],[348,37,421,2,"gesture"],[348,44,421,52],[348,46,422,2,"event"],[348,51,422,73],[348,53,424,2],[349,6,426,2],[349,10,426,8,"handler"],[349,17,426,15],[349,20,426,18,"getHandler"],[349,30,426,28],[349,31,426,29,"type"],[349,35,426,33],[349,37,426,35,"gesture"],[349,44,426,42],[349,45,426,43],[350,6,427,2],[350,10,427,6,"gesture"],[350,17,427,13],[350,18,427,14,"isWorklet"],[350,27,427,23],[350,28,427,24,"type"],[350,32,427,28],[350,33,427,29],[350,35,427,31],[351,8,427,31],[351,17,427,31,"_len"],[351,21,427,31],[351,24,427,31,"arguments"],[351,33,427,31],[351,34,427,31,"length"],[351,40,427,31],[351,42,423,5,"args"],[351,46,423,9],[351,53,423,9,"Array"],[351,58,423,9],[351,59,423,9,"_len"],[351,63,423,9],[351,70,423,9,"_len"],[351,74,423,9],[351,85,423,9,"_key"],[351,89,423,9],[351,95,423,9,"_key"],[351,99,423,9],[351,102,423,9,"_len"],[351,106,423,9],[351,108,423,9,"_key"],[351,112,423,9],[352,10,423,5,"args"],[352,14,423,9],[352,15,423,9,"_key"],[352,19,423,9],[352,27,423,9,"arguments"],[352,36,423,9],[352,37,423,9,"_key"],[352,41,423,9],[353,8,423,9],[354,8,428,4],[355,8,429,4],[356,8,430,4,"handler"],[356,15,430,11],[356,18,430,14,"event"],[356,23,430,19],[356,25,430,21],[356,28,430,24,"args"],[356,32,430,28],[356,33,430,29],[357,6,431,2],[357,7,431,3],[357,13,431,9],[357,17,431,13,"handler"],[357,24,431,20],[357,26,431,22],[358,8,432,4,"console"],[358,15,432,11],[358,16,432,12,"warn"],[358,20,432,16],[358,21,432,17],[358,25,432,17,"tagMessage"],[358,31,432,27],[358,32,432,27,"tagMessage"],[358,42,432,27],[358,44,432,28],[358,89,432,73],[358,90,432,74],[358,91,432,75],[359,6,433,2],[360,4,434,0],[360,5,434,1],[361,4,434,1,"runWorklet"],[361,14,434,1],[361,15,434,1,"__closure"],[361,24,434,1],[362,6,434,1,"getHandler"],[362,16,434,1],[363,6,434,1,"tagMessage"],[363,16,434,1],[363,18,432,17,"tagMessage"],[363,24,432,27],[363,25,432,27,"tagMessage"],[364,4,432,27],[365,4,432,27,"runWorklet"],[365,14,432,27],[365,15,432,27,"__workletHash"],[365,28,432,27],[366,4,432,27,"runWorklet"],[366,14,432,27],[366,15,432,27,"__initData"],[366,25,432,27],[366,28,432,27,"_worklet_5678919901512_init_data"],[366,60,432,27],[367,4,432,27,"runWorklet"],[367,14,432,27],[367,15,432,27,"__stackDetails"],[367,29,432,27],[367,32,432,27,"_e"],[367,34,432,27],[368,4,432,27],[368,11,432,27,"runWorklet"],[368,21,432,27],[369,2,432,27],[369,3,419,0],[370,2,419,0],[370,6,419,0,"_worklet_14213353093337_init_data"],[370,39,419,0],[371,4,419,0,"code"],[371,8,419,0],[372,4,419,0,"location"],[372,12,419,0],[373,4,419,0,"sourceMap"],[373,13,419,0],[374,4,419,0,"version"],[374,11,419,0],[375,2,419,0],[376,2,436,0],[376,11,436,9,"useAnimatedGesture"],[376,29,436,27,"useAnimatedGesture"],[376,30,437,2,"preparedGesture"],[376,45,437,41],[376,47,438,2,"needsRebuild"],[376,59,438,23],[376,61,439,2],[377,4,440,2],[377,8,440,6],[377,9,440,7,"Reanimated"],[377,27,440,17],[377,28,440,17,"Reanimated"],[377,38,440,17],[377,40,440,19],[378,6,441,4],[379,4,442,2],[381,4,444,2],[382,4,445,2],[383,4,446,2],[384,4,447,2],[384,8,447,8,"sharedHandlersCallbacks"],[384,31,447,31],[384,34,447,34,"Reanimated"],[384,52,447,44],[384,53,447,44,"Reanimated"],[384,63,447,44],[384,64,447,45,"useSharedValue"],[384,78,447,59],[384,79,449,4],[384,83,449,8],[384,84,449,9],[386,4,451,2],[387,4,452,2],[387,8,452,8,"lastUpdateEvent"],[387,23,452,23],[387,26,452,26,"Reanimated"],[387,44,452,36],[387,45,452,36,"Reanimated"],[387,55,452,36],[387,56,452,37,"useSharedValue"],[387,70,452,51],[387,71,454,4],[387,73,454,6],[387,74,454,7],[389,4,456,2],[390,4,457,2],[390,8,457,8,"stateControllers"],[390,24,457,51],[390,27,457,54],[390,29,457,56],[391,4,459,2],[391,8,459,8,"callback"],[391,16,459,16],[391,19,459,19],[392,6,459,19],[392,10,459,19,"_e"],[392,12,459,19],[392,20,459,19,"global"],[392,26,459,19],[392,27,459,19,"Error"],[392,32,459,19],[393,6,459,19],[393,10,459,19,"anonymous"],[393,19,459,19],[393,31,459,19,"anonymous"],[393,32,460,4,"event"],[393,37,460,75],[393,39,461,7],[394,8,464,4],[394,12,464,10,"currentCallback"],[394,27,464,25],[394,30,464,28,"sharedHandlersCallbacks"],[394,53,464,51],[394,54,464,52,"value"],[394,59,464,57],[395,8,465,4],[395,12,465,8],[395,13,465,9,"currentCallback"],[395,28,465,24],[395,30,465,26],[396,10,466,6],[397,8,467,4],[398,8,469,4],[398,13,469,9],[398,17,469,13,"i"],[398,18,469,14],[398,21,469,17],[398,22,469,18],[398,24,469,20,"i"],[398,25,469,21],[398,28,469,24,"currentCallback"],[398,43,469,39],[398,44,469,40,"length"],[398,50,469,46],[398,52,469,48,"i"],[398,53,469,49],[398,55,469,51],[398,57,469,53],[399,10,470,6],[399,14,470,12,"gesture"],[399,21,470,19],[399,24,470,22,"currentCallback"],[399,39,470,37],[399,40,470,38,"i"],[399,41,470,39],[399,42,470,40],[400,10,472,6],[400,14,472,10,"event"],[400,19,472,15],[400,20,472,16,"handlerTag"],[400,30,472,26],[400,35,472,31,"gesture"],[400,42,472,38],[400,43,472,39,"handlerTag"],[400,53,472,49],[400,55,472,51],[401,12,473,8],[401,16,473,12,"isStateChangeEvent"],[401,34,473,30],[401,35,473,31,"event"],[401,40,473,36],[401,41,473,37],[401,43,473,39],[402,14,474,10],[402,18,475,12,"event"],[402,23,475,17],[402,24,475,18,"oldState"],[402,32,475,26],[402,37,475,31,"State"],[402,43,475,36],[402,44,475,36,"State"],[402,49,475,36],[402,50,475,37,"UNDETERMINED"],[402,62,475,49],[402,66,476,12,"event"],[402,71,476,17],[402,72,476,18,"state"],[402,77,476,23],[402,82,476,28,"State"],[402,88,476,33],[402,89,476,33,"State"],[402,94,476,33],[402,95,476,34,"BEGAN"],[402,100,476,39],[402,102,477,12],[403,16,478,12,"runWorklet"],[403,26,478,22],[403,27,478,23,"CALLBACK_TYPE"],[403,36,478,36],[403,37,478,36,"CALLBACK_TYPE"],[403,50,478,36],[403,51,478,37,"BEGAN"],[403,56,478,42],[403,58,478,44,"gesture"],[403,65,478,51],[403,67,478,53,"event"],[403,72,478,58],[403,73,478,59],[404,14,479,10],[404,15,479,11],[404,21,479,17],[404,25,480,12],[404,26,480,13,"event"],[404,31,480,18],[404,32,480,19,"oldState"],[404,40,480,27],[404,45,480,32,"State"],[404,51,480,37],[404,52,480,37,"State"],[404,57,480,37],[404,58,480,38,"BEGAN"],[404,63,480,43],[404,67,481,14,"event"],[404,72,481,19],[404,73,481,20,"oldState"],[404,81,481,28],[404,86,481,33,"State"],[404,92,481,38],[404,93,481,38,"State"],[404,98,481,38],[404,99,481,39,"UNDETERMINED"],[404,111,481,51],[404,116,482,12,"event"],[404,121,482,17],[404,122,482,18,"state"],[404,127,482,23],[404,132,482,28,"State"],[404,138,482,33],[404,139,482,33,"State"],[404,144,482,33],[404,145,482,34,"ACTIVE"],[404,151,482,40],[404,153,483,12],[405,16,484,12,"runWorklet"],[405,26,484,22],[405,27,484,23,"CALLBACK_TYPE"],[405,36,484,36],[405,37,484,36,"CALLBACK_TYPE"],[405,50,484,36],[405,51,484,37,"START"],[405,56,484,42],[405,58,484,44,"gesture"],[405,65,484,51],[405,67,484,53,"event"],[405,72,484,58],[405,73,484,59],[406,16,485,12,"lastUpdateEvent"],[406,31,485,27],[406,32,485,28,"value"],[406,37,485,33],[406,38,485,34,"gesture"],[406,45,485,41],[406,46,485,42,"handlerTag"],[406,56,485,52],[406,57,485,53],[406,60,485,56,"undefined"],[406,69,485,65],[407,14,486,10],[407,15,486,11],[407,21,486,17],[407,25,487,12,"event"],[407,30,487,17],[407,31,487,18,"oldState"],[407,39,487,26],[407,44,487,31,"event"],[407,49,487,36],[407,50,487,37,"state"],[407,55,487,42],[407,59,488,12,"event"],[407,64,488,17],[407,65,488,18,"state"],[407,70,488,23],[407,75,488,28,"State"],[407,81,488,33],[407,82,488,33,"State"],[407,87,488,33],[407,88,488,34,"END"],[407,91,488,37],[407,93,489,12],[408,16,490,12],[408,20,490,16,"event"],[408,25,490,21],[408,26,490,22,"oldState"],[408,34,490,30],[408,39,490,35,"State"],[408,45,490,40],[408,46,490,40,"State"],[408,51,490,40],[408,52,490,41,"ACTIVE"],[408,58,490,47],[408,60,490,49],[409,18,491,14,"runWorklet"],[409,28,491,24],[409,29,491,25,"CALLBACK_TYPE"],[409,38,491,38],[409,39,491,38,"CALLBACK_TYPE"],[409,52,491,38],[409,53,491,39,"END"],[409,56,491,42],[409,58,491,44,"gesture"],[409,65,491,51],[409,67,491,53,"event"],[409,72,491,58],[409,74,491,60],[409,78,491,64],[409,79,491,65],[410,16,492,12],[411,16,493,12,"runWorklet"],[411,26,493,22],[411,27,493,23,"CALLBACK_TYPE"],[411,36,493,36],[411,37,493,36,"CALLBACK_TYPE"],[411,50,493,36],[411,51,493,37,"FINALIZE"],[411,59,493,45],[411,61,493,47,"gesture"],[411,68,493,54],[411,70,493,56,"event"],[411,75,493,61],[411,77,493,63],[411,81,493,67],[411,82,493,68],[412,14,494,10],[412,15,494,11],[412,21,494,17],[412,25,495,12],[412,26,495,13,"event"],[412,31,495,18],[412,32,495,19,"state"],[412,37,495,24],[412,42,495,29,"State"],[412,48,495,34],[412,49,495,34,"State"],[412,54,495,34],[412,55,495,35,"FAILED"],[412,61,495,41],[412,65,495,45,"event"],[412,70,495,50],[412,71,495,51,"state"],[412,76,495,56],[412,81,495,61,"State"],[412,87,495,66],[412,88,495,66,"State"],[412,93,495,66],[412,94,495,67,"CANCELLED"],[412,103,495,76],[412,108,496,12,"event"],[412,113,496,17],[412,114,496,18,"state"],[412,119,496,23],[412,124,496,28,"event"],[412,129,496,33],[412,130,496,34,"oldState"],[412,138,496,42],[412,140,497,12],[413,16,498,12],[413,20,498,16,"event"],[413,25,498,21],[413,26,498,22,"oldState"],[413,34,498,30],[413,39,498,35,"State"],[413,45,498,40],[413,46,498,40,"State"],[413,51,498,40],[413,52,498,41,"ACTIVE"],[413,58,498,47],[413,60,498,49],[414,18,499,14,"runWorklet"],[414,28,499,24],[414,29,499,25,"CALLBACK_TYPE"],[414,38,499,38],[414,39,499,38,"CALLBACK_TYPE"],[414,52,499,38],[414,53,499,39,"END"],[414,56,499,42],[414,58,499,44,"gesture"],[414,65,499,51],[414,67,499,53,"event"],[414,72,499,58],[414,74,499,60],[414,79,499,65],[414,80,499,66],[415,16,500,12],[416,16,501,12,"runWorklet"],[416,26,501,22],[416,27,501,23,"CALLBACK_TYPE"],[416,36,501,36],[416,37,501,36,"CALLBACK_TYPE"],[416,50,501,36],[416,51,501,37,"FINALIZE"],[416,59,501,45],[416,61,501,47,"gesture"],[416,68,501,54],[416,70,501,56,"event"],[416,75,501,61],[416,77,501,63],[416,82,501,68],[416,83,501,69],[417,14,502,10],[418,12,503,8],[418,13,503,9],[418,19,503,15],[418,23,503,19,"isTouchEvent"],[418,35,503,31],[418,36,503,32,"event"],[418,41,503,37],[418,42,503,38],[418,44,503,40],[419,14,504,10],[419,18,504,14],[419,19,504,15,"stateControllers"],[419,35,504,31],[419,36,504,32,"i"],[419,37,504,33],[419,38,504,34],[419,40,504,36],[420,16,505,12,"stateControllers"],[420,32,505,28],[420,33,505,29,"i"],[420,34,505,30],[420,35,505,31],[420,38,505,34,"GestureStateManager"],[420,58,505,53],[420,59,505,53,"GestureStateManager"],[420,78,505,53],[420,79,505,54,"create"],[420,85,505,60],[420,86,505,61,"event"],[420,91,505,66],[420,92,505,67,"handlerTag"],[420,102,505,77],[420,103,505,78],[421,14,506,10],[422,14,508,10],[422,18,508,14,"event"],[422,23,508,19],[422,24,508,20,"eventType"],[422,33,508,29],[422,38,508,34,"TouchEventType"],[422,53,508,48],[422,54,508,48,"TouchEventType"],[422,68,508,48],[422,69,508,49,"UNDETERMINED"],[422,81,508,61],[422,83,508,63],[423,16,509,12,"runWorklet"],[423,26,509,22],[423,27,510,14,"touchEventTypeToCallbackType"],[423,55,510,42],[423,56,510,43,"event"],[423,61,510,48],[423,62,510,49,"eventType"],[423,71,510,58],[423,72,510,59],[423,74,511,14,"gesture"],[423,81,511,21],[423,83,512,14,"event"],[423,88,512,19],[423,90,513,14,"stateControllers"],[423,106,513,30],[423,107,513,31,"i"],[423,108,513,32],[423,109,514,12],[423,110,514,13],[424,14,515,10],[425,12,516,8],[425,13,516,9],[425,19,516,15],[426,14,517,10,"runWorklet"],[426,24,517,20],[426,25,517,21,"CALLBACK_TYPE"],[426,34,517,34],[426,35,517,34,"CALLBACK_TYPE"],[426,48,517,34],[426,49,517,35,"UPDATE"],[426,55,517,41],[426,57,517,43,"gesture"],[426,64,517,50],[426,66,517,52,"event"],[426,71,517,57],[426,72,517,58],[427,14,519,10],[427,18,519,14,"gesture"],[427,25,519,21],[427,26,519,22,"onChange"],[427,34,519,30],[427,38,519,34,"gesture"],[427,45,519,41],[427,46,519,42,"changeEventCalculator"],[427,67,519,63],[427,69,519,65],[428,16,520,12,"runWorklet"],[428,26,520,22],[428,27,521,14,"CALLBACK_TYPE"],[428,36,521,27],[428,37,521,27,"CALLBACK_TYPE"],[428,50,521,27],[428,51,521,28,"CHANGE"],[428,57,521,34],[428,59,522,14,"gesture"],[428,66,522,21],[428,68,523,14,"gesture"],[428,75,523,21],[428,76,523,22,"changeEventCalculator"],[428,97,523,43],[428,100,524,16,"event"],[428,105,524,21],[428,107,525,16,"lastUpdateEvent"],[428,122,525,31],[428,123,525,32,"value"],[428,128,525,37],[428,129,525,38,"gesture"],[428,136,525,45],[428,137,525,46,"handlerTag"],[428,147,525,56],[428,148,526,14],[428,149,527,12],[428,150,527,13],[429,16,529,12,"lastUpdateEvent"],[429,31,529,27],[429,32,529,28,"value"],[429,37,529,33],[429,38,529,34,"gesture"],[429,45,529,41],[429,46,529,42,"handlerTag"],[429,56,529,52],[429,57,529,53],[429,60,529,56,"event"],[429,65,529,61],[430,14,530,10],[431,12,531,8],[432,10,532,6],[433,8,533,4],[434,6,534,2],[434,7,534,3],[435,6,534,3,"anonymous"],[435,15,534,3],[435,16,534,3,"__closure"],[435,25,534,3],[436,8,534,3,"sharedHandlersCallbacks"],[436,31,534,3],[437,8,534,3,"isStateChangeEvent"],[437,26,534,3],[438,8,534,3,"State"],[438,13,534,3],[438,15,475,31,"State"],[438,21,475,36],[438,22,475,36,"State"],[438,27,475,36],[439,8,475,36,"runWorklet"],[439,18,475,36],[440,8,475,36,"CALLBACK_TYPE"],[440,21,475,36],[440,23,478,23,"CALLBACK_TYPE"],[440,32,478,36],[440,33,478,36,"CALLBACK_TYPE"],[440,46,478,36],[441,8,478,36,"lastUpdateEvent"],[441,23,478,36],[442,8,478,36,"isTouchEvent"],[442,20,478,36],[443,8,478,36,"stateControllers"],[443,24,478,36],[444,8,478,36,"GestureStateManager"],[444,27,478,36],[444,29,505,34,"GestureStateManager"],[444,49,505,53],[444,50,505,53,"GestureStateManager"],[444,69,505,53],[445,8,505,53,"TouchEventType"],[445,22,505,53],[445,24,508,34,"TouchEventType"],[445,39,508,48],[445,40,508,48,"TouchEventType"],[445,54,508,48],[446,8,508,48,"touchEventTypeToCallbackType"],[447,6,508,48],[448,6,508,48,"anonymous"],[448,15,508,48],[448,16,508,48,"__workletHash"],[448,29,508,48],[449,6,508,48,"anonymous"],[449,15,508,48],[449,16,508,48,"__initData"],[449,26,508,48],[449,29,508,48,"_worklet_14213353093337_init_data"],[449,62,508,48],[450,6,508,48,"anonymous"],[450,15,508,48],[450,16,508,48,"__stackDetails"],[450,30,508,48],[450,33,508,48,"_e"],[450,35,508,48],[451,6,508,48],[451,13,508,48,"anonymous"],[451,22,508,48],[452,4,508,48],[452,5,459,19],[452,7,534,3],[454,4,536,2],[455,4,537,2],[455,8,537,8,"event"],[455,13,537,13],[455,16,537,16,"Reanimated"],[455,34,537,26],[455,35,537,26,"Reanimated"],[455,45,537,26],[455,46,537,27,"useEvent"],[455,54,537,35],[455,55,538,4,"callback"],[455,63,538,12],[455,65,539,4],[455,66,539,5],[455,95,539,34],[455,97,539,36],[455,120,539,59],[455,121,539,60],[455,123,540,4,"needsRebuild"],[455,135,541,2],[455,136,541,3],[456,4,543,2,"preparedGesture"],[456,19,543,17],[456,20,543,18,"animatedEventHandler"],[456,40,543,38],[456,43,543,41,"event"],[456,48,543,46],[457,4,544,2,"preparedGesture"],[457,19,544,17],[457,20,544,18,"animatedHandlers"],[457,36,544,34],[457,39,544,37,"sharedHandlersCallbacks"],[457,62,544,60],[458,2,545,0],[460,2,547,0],[461,2,548,0],[461,11,548,9,"validateDetectorChildren"],[461,35,548,33,"validateDetectorChildren"],[461,36,548,34,"ref"],[461,39,548,42],[461,41,548,44],[462,4,549,2],[463,4,550,2],[464,4,551,2],[465,4,552,2],[466,4,553,2],[467,4,554,2],[468,4,555,2],[469,4,556,2],[470,4,557,2],[471,4,558,2],[472,4,559,2],[473,4,560,2],[474,4,561,2],[475,4,562,2],[476,4,563,2],[477,4,564,2],[478,4,565,2],[479,4,566,2],[480,4,567,2],[481,4,568,2],[482,4,569,2],[483,4,570,2],[483,8,570,6,"__DEV__"],[483,15,570,13],[483,19,570,17,"Platform"],[483,31,570,25],[483,32,570,25,"Platform"],[483,40,570,25],[483,41,570,26,"OS"],[483,43,570,28],[483,48,570,33],[483,53,570,38],[483,55,570,40],[484,6,571,4],[484,10,571,10,"REACT_NATIVE_VERSION"],[484,30,571,30],[484,33,571,33],[484,37,571,33,"getReactNativeVersion"],[484,59,571,54],[484,60,571,54,"getReactNativeVersion"],[484,81,571,54],[484,83,571,55],[484,84,571,56],[485,6,572,4],[486,6,573,4],[486,10,573,10,"wrapType"],[486,18,573,18],[486,21,574,6,"REACT_NATIVE_VERSION"],[486,41,574,26],[486,42,574,27,"minor"],[486,47,574,32],[486,50,574,35],[486,52,574,37],[486,56,574,41,"REACT_NATIVE_VERSION"],[486,76,574,61],[486,77,574,62,"major"],[486,82,574,67],[486,85,574,70],[486,86,574,71],[487,6,575,10],[488,6,576,10,"ref"],[488,9,576,13],[488,10,576,14,"_reactInternals"],[488,25,576,29],[488,26,576,30,"elementType"],[488,37,576,41],[489,6,577,10],[490,6,578,10,"ref"],[490,9,578,13],[490,10,578,14,"_reactInternalFiber"],[490,29,578,33],[490,30,578,34,"elementType"],[490,41,578,45],[491,6,579,4],[492,6,580,4],[492,10,580,8,"instance"],[492,18,580,16],[492,21,581,6,"RNRenderer"],[492,32,581,16],[492,33,581,16,"RNRenderer"],[492,43,581,16],[492,44,581,17,"findHostInstance_DEPRECATED"],[492,71,581,44],[492,72,582,8,"ref"],[492,75,583,6],[492,76,583,7],[492,77,583,8,"_internalFiberInstanceHandleDEV"],[492,108,583,39],[494,6,585,4],[495,6,586,4],[495,13,586,11,"instance"],[495,21,586,19],[495,25,586,23,"instance"],[495,33,586,31],[495,34,586,32,"elementType"],[495,45,586,43],[495,50,586,48,"wrapType"],[495,58,586,56],[495,60,586,58],[496,8,587,6],[497,8,588,6],[497,12,588,10,"instance"],[497,20,588,18],[497,21,588,19,"sibling"],[497,28,588,26],[497,30,588,28],[498,10,589,8],[498,16,589,14],[498,20,589,18,"Error"],[498,25,589,23],[498,26,590,10],[498,269,591,8],[498,270,591,9],[499,8,592,6],[501,8,594,6],[502,8,595,6,"instance"],[502,16,595,14],[502,19,595,17,"instance"],[502,27,595,25],[502,28,595,26,"return"],[502,34,595,32],[503,6,596,4],[504,4,597,2],[505,2,598,0],[506,2,600,0],[506,6,600,6,"applyUserSelectProp"],[506,25,600,25],[506,28,600,28,"applyUserSelectProp"],[506,29,601,2,"userSelect"],[506,39,601,24],[506,41,602,2,"gesture"],[506,48,602,40],[506,53,603,11],[507,4,604,2],[507,9,604,7],[507,13,604,13,"g"],[507,14,604,14],[507,18,604,18,"gesture"],[507,25,604,25],[507,26,604,26,"toGestureArray"],[507,40,604,40],[507,41,604,41],[507,42,604,42],[507,44,604,44],[508,6,605,4,"g"],[508,7,605,5],[508,8,605,6,"config"],[508,14,605,12],[508,15,605,13,"userSelect"],[508,25,605,23],[508,28,605,26,"userSelect"],[508,38,605,36],[509,4,606,2],[510,2,607,0],[510,3,607,1],[511,2,609,0],[511,6,609,6,"applyEnableContextMenuProp"],[511,32,609,32],[511,35,609,35,"applyEnableContextMenuProp"],[511,36,610,2,"enableContextMenu"],[511,53,610,28],[511,55,611,2,"gesture"],[511,62,611,40],[511,67,612,11],[512,4,613,2],[512,9,613,7],[512,13,613,13,"g"],[512,14,613,14],[512,18,613,18,"gesture"],[512,25,613,25],[512,26,613,26,"toGestureArray"],[512,40,613,40],[512,41,613,41],[512,42,613,42],[512,44,613,44],[513,6,614,4,"g"],[513,7,614,5],[513,8,614,6,"config"],[513,14,614,12],[513,15,614,13,"enableContextMenu"],[513,32,614,30],[513,35,614,33,"enableContextMenu"],[513,52,614,50],[514,4,615,2],[515,2,616,0],[515,3,616,1],[516,2,618,0],[516,6,618,6,"applyTouchActionProp"],[516,26,618,26],[516,29,618,29,"applyTouchActionProp"],[516,30,619,2,"touchAction"],[516,41,619,26],[516,43,620,2,"gesture"],[516,50,620,40],[516,55,621,11],[517,4,622,2],[517,9,622,7],[517,13,622,13,"g"],[517,14,622,14],[517,18,622,18,"gesture"],[517,25,622,25],[517,26,622,26,"toGestureArray"],[517,40,622,40],[517,41,622,41],[517,42,622,42],[517,44,622,44],[518,6,623,4,"g"],[518,7,623,5],[518,8,623,6,"config"],[518,14,623,12],[518,15,623,13,"touchAction"],[518,26,623,24],[518,29,623,27,"touchAction"],[518,40,623,38],[519,4,624,2],[520,2,625,0],[520,3,625,1],[521,2,663,0],[522,0,664,0],[523,0,665,0],[524,0,666,0],[525,0,667,0],[526,0,668,0],[527,0,669,0],[528,0,670,0],[529,0,671,0],[530,0,672,0],[531,0,673,0],[532,0,674,0],[533,0,675,0],[534,0,676,0],[535,0,677,0],[536,2,678,7],[536,6,678,13,"GestureDetector"],[536,21,678,28],[536,24,678,32,"props"],[536,29,678,59],[536,33,678,64],[537,4,679,2],[537,8,679,8,"rootViewContext"],[537,23,679,23],[537,26,679,26],[537,30,679,26,"useContext"],[537,36,679,36],[537,37,679,36,"useContext"],[537,47,679,36],[537,49,679,37,"GestureHandlerRootViewContext"],[537,78,679,66],[537,79,679,66,"default"],[537,86,679,66],[537,87,679,67],[538,4,680,2],[538,8,680,6,"__DEV__"],[538,15,680,13],[538,19,680,17],[538,20,680,18,"rootViewContext"],[538,35,680,33],[538,39,680,37],[538,40,680,38],[538,44,680,38,"isJestEnv"],[538,50,680,47],[538,51,680,47,"isJestEnv"],[538,60,680,47],[538,62,680,48],[538,63,680,49],[538,67,680,53,"Platform"],[538,79,680,61],[538,80,680,61,"Platform"],[538,88,680,61],[538,89,680,62,"OS"],[538,91,680,64],[538,96,680,69],[538,101,680,74],[538,103,680,76],[539,6,681,4],[539,12,681,10],[539,16,681,14,"Error"],[539,21,681,19],[539,22,682,6],[539,238,683,4],[539,239,683,5],[540,4,684,2],[541,4,686,2],[541,8,686,8,"gestureConfig"],[541,21,686,21],[541,24,686,24,"props"],[541,29,686,29],[541,30,686,30,"gesture"],[541,37,686,37],[542,4,688,2],[542,8,688,6,"props"],[542,13,688,11],[542,14,688,12,"userSelect"],[542,24,688,22],[542,26,688,24],[543,6,689,4,"applyUserSelectProp"],[543,25,689,23],[543,26,689,24,"props"],[543,31,689,29],[543,32,689,30,"userSelect"],[543,42,689,40],[543,44,689,42,"gestureConfig"],[543,57,689,55],[543,58,689,56],[544,4,690,2],[545,4,692,2],[545,8,692,6,"props"],[545,13,692,11],[545,14,692,12,"enableContextMenu"],[545,31,692,29],[545,36,692,34,"undefined"],[545,45,692,43],[545,47,692,45],[546,6,693,4,"applyEnableContextMenuProp"],[546,32,693,30],[546,33,693,31,"props"],[546,38,693,36],[546,39,693,37,"enableContextMenu"],[546,56,693,54],[546,58,693,56,"gestureConfig"],[546,71,693,69],[546,72,693,70],[547,4,694,2],[548,4,696,2],[548,8,696,6,"props"],[548,13,696,11],[548,14,696,12,"touchAction"],[548,25,696,23],[548,30,696,28,"undefined"],[548,39,696,37],[548,41,696,39],[549,6,697,4,"applyTouchActionProp"],[549,26,697,24],[549,27,697,25,"props"],[549,32,697,30],[549,33,697,31,"touchAction"],[549,44,697,42],[549,46,697,44,"gestureConfig"],[549,59,697,57],[549,60,697,58],[550,4,698,2],[551,4,700,2],[551,8,700,8,"gesture"],[551,15,700,15],[551,18,700,18,"gestureConfig"],[551,31,700,31],[551,32,700,32,"toGestureArray"],[551,46,700,46],[551,47,700,47],[551,48,700,48],[552,4,701,2],[552,8,701,8,"useReanimatedHook"],[552,25,701,25],[552,28,701,28,"gesture"],[552,35,701,35],[552,36,701,36,"some"],[552,40,701,40],[552,41,701,42,"g"],[552,42,701,43],[552,46,701,48,"g"],[552,47,701,49],[552,48,701,50,"shouldUseReanimated"],[552,67,701,69],[552,68,701,70],[554,4,703,2],[555,4,704,2],[555,8,704,8,"state"],[555,13,704,13],[555,16,704,16],[555,20,704,16,"useRef"],[555,26,704,22],[555,27,704,22,"useRef"],[555,33,704,22],[555,35,704,45],[556,6,705,4,"firstRender"],[556,17,705,15],[556,19,705,17],[556,23,705,21],[557,6,706,4,"viewRef"],[557,13,706,11],[557,15,706,13],[557,19,706,17],[558,6,707,4,"previousViewTag"],[558,21,707,19],[558,23,707,21],[558,24,707,22],[558,25,707,23],[559,6,708,4,"forceReattach"],[559,19,708,17],[559,21,708,19],[560,4,709,2],[560,5,709,3],[560,6,709,4],[560,7,709,5,"current"],[560,14,709,12],[561,4,710,2],[561,8,710,8,"mountedRef"],[561,18,710,18],[561,21,710,21],[561,25,710,21,"useRef"],[561,31,710,27],[561,32,710,27,"useRef"],[561,38,710,27],[561,40,710,28],[561,45,710,33],[561,46,710,34],[562,4,711,2],[562,8,711,8,"webEventHandlersRef"],[562,27,711,27],[562,30,711,30],[562,34,711,30,"useRef"],[562,40,711,36],[562,41,711,36,"useRef"],[562,47,711,36],[562,49,711,54],[563,6,712,4,"onGestureHandlerEvent"],[563,27,712,25],[563,29,712,28,"e"],[563,30,712,63],[563,34,712,68],[564,8,713,6],[564,12,713,6,"onGestureHandlerEvent"],[564,26,713,27],[564,27,713,27,"onGestureHandlerEvent"],[564,48,713,27],[564,50,713,28,"e"],[564,51,713,29],[564,52,713,30,"nativeEvent"],[564,63,713,41],[564,64,713,42],[565,6,714,4],[565,7,714,5],[566,6,715,4,"onGestureHandlerStateChange"],[566,33,715,31],[566,35,715,33],[566,39,715,33,"isNewWebImplementationEnabled"],[566,66,715,62],[566,67,715,62,"isNewWebImplementationEnabled"],[566,96,715,62],[566,98,715,63],[566,99,715,64],[566,102,716,9,"e"],[566,103,716,44],[566,107,716,49],[567,8,717,10],[567,12,717,10,"onGestureHandlerEvent"],[567,26,717,31],[567,27,717,31,"onGestureHandlerEvent"],[567,48,717,31],[567,50,717,32,"e"],[567,51,717,33],[567,52,717,34,"nativeEvent"],[567,63,717,45],[567,64,717,46],[568,6,718,8],[568,7,718,9],[568,10,719,8,"undefined"],[569,4,720,2],[569,5,720,3],[569,6,720,4],[570,4,722,2],[570,8,722,2,"_useState"],[570,17,722,2],[570,20,722,40],[570,24,722,40,"useState"],[570,30,722,48],[570,31,722,48,"useState"],[570,39,722,48],[570,41,722,49],[570,46,722,54],[570,47,722,55],[571,6,722,55,"_useState2"],[571,16,722,55],[571,23,722,55,"_slicedToArray"],[571,37,722,55],[571,38,722,55,"default"],[571,45,722,55],[571,47,722,55,"_useState"],[571,56,722,55],[572,6,722,9,"renderState"],[572,17,722,20],[572,20,722,20,"_useState2"],[572,30,722,20],[573,6,722,22,"setRenderState"],[573,20,722,36],[573,23,722,36,"_useState2"],[573,33,722,36],[574,4,723,2],[574,13,723,11,"forceRender"],[574,24,723,22,"forceRender"],[574,25,723,22],[574,27,723,25],[575,6,724,4,"setRenderState"],[575,20,724,18],[575,21,724,19],[575,22,724,20,"renderState"],[575,33,724,31],[575,34,724,32],[576,4,725,2],[577,4,727,2],[577,8,727,8,"preparedGesture"],[577,23,727,23],[577,26,727,26,"React"],[577,31,727,31],[577,32,727,31,"default"],[577,39,727,31],[577,40,727,32,"useRef"],[577,46,727,38],[577,47,727,63],[578,6,728,4,"config"],[578,12,728,10],[578,14,728,12,"gesture"],[578,21,728,19],[579,6,729,4,"animatedEventHandler"],[579,26,729,24],[579,28,729,26],[579,32,729,30],[580,6,730,4,"animatedHandlers"],[580,22,730,20],[580,24,730,22],[580,28,730,26],[581,6,731,4,"firstExecution"],[581,20,731,18],[581,22,731,20],[581,26,731,24],[582,6,732,4,"useReanimatedHook"],[582,23,732,21],[582,25,732,23,"useReanimatedHook"],[583,4,733,2],[583,5,733,3],[583,6,733,4],[583,7,733,5,"current"],[583,14,733,12],[584,4,735,2],[584,8,735,6,"useReanimatedHook"],[584,25,735,23],[584,30,735,28,"preparedGesture"],[584,45,735,43],[584,46,735,44,"useReanimatedHook"],[584,63,735,61],[584,65,735,63],[585,6,736,4],[585,12,736,10],[585,16,736,14,"Error"],[585,21,736,19],[585,22,737,6],[585,26,737,6,"tagMessage"],[585,32,737,16],[585,33,737,16,"tagMessage"],[585,43,737,16],[585,45,738,8],[585,125,739,6],[585,126,740,4],[585,127,740,5],[586,4,741,2],[587,4,743,2],[587,13,743,11,"onHandlersUpdate"],[587,29,743,27,"onHandlersUpdate"],[587,30,743,28,"skipConfigUpdate"],[587,46,743,54],[587,48,743,56],[588,6,744,4],[589,6,745,4],[589,10,745,10,"viewTag"],[589,17,745,17],[589,20,745,20],[589,24,745,20,"findNodeHandle"],[589,45,745,34],[589,46,745,34,"findNodeHandle"],[589,60,745,34],[589,62,745,35,"state"],[589,67,745,40],[589,68,745,41,"viewRef"],[589,75,745,48],[589,76,745,59],[590,6,746,4],[590,10,746,10,"forceReattach"],[590,23,746,23],[590,26,746,26,"viewTag"],[590,33,746,33],[590,38,746,38,"state"],[590,43,746,43],[590,44,746,44,"previousViewTag"],[590,59,746,59],[591,6,748,4],[591,10,748,8,"forceReattach"],[591,23,748,21],[591,27,748,25,"needsToReattach"],[591,42,748,40],[591,43,748,41,"preparedGesture"],[591,58,748,56],[591,60,748,58,"gesture"],[591,67,748,65],[591,68,748,66],[591,70,748,68],[592,8,749,6,"validateDetectorChildren"],[592,32,749,30],[592,33,749,31,"state"],[592,38,749,36],[592,39,749,37,"viewRef"],[592,46,749,44],[592,47,749,45],[593,8,750,6,"dropHandlers"],[593,20,750,18],[593,21,750,19,"preparedGesture"],[593,36,750,34],[593,37,750,35],[594,8,751,6,"attachHandlers"],[594,22,751,20],[594,23,751,21],[595,10,752,8,"preparedGesture"],[595,25,752,23],[596,10,753,8,"gestureConfig"],[596,23,753,21],[597,10,754,8,"gesture"],[597,17,754,15],[598,10,755,8,"webEventHandlersRef"],[598,29,755,27],[599,10,756,8,"viewTag"],[599,17,756,15],[600,10,757,8,"mountedRef"],[601,8,758,6],[601,9,758,7],[601,10,758,8],[602,8,760,6,"state"],[602,13,760,11],[602,14,760,12,"previousViewTag"],[602,29,760,27],[602,32,760,30,"viewTag"],[602,39,760,37],[603,8,761,6,"state"],[603,13,761,11],[603,14,761,12,"forceReattach"],[603,27,761,25],[603,30,761,28,"forceReattach"],[603,43,761,41],[604,8,762,6],[604,12,762,10,"forceReattach"],[604,25,762,23],[604,27,762,25],[605,10,763,8,"forceRender"],[605,21,763,19],[605,22,763,20],[605,23,763,21],[606,8,764,6],[607,6,765,4],[607,7,765,5],[607,13,765,11],[607,17,765,15],[607,18,765,16,"skipConfigUpdate"],[607,34,765,32],[607,36,765,34],[608,8,766,6,"updateHandlers"],[608,22,766,20],[608,23,766,21,"preparedGesture"],[608,38,766,36],[608,40,766,38,"gestureConfig"],[608,53,766,51],[608,55,766,53,"gesture"],[608,62,766,60],[608,64,766,62,"mountedRef"],[608,74,766,72],[608,75,766,73],[609,6,767,4],[610,4,768,2],[612,4,770,2],[613,4,771,2],[614,4,772,2],[614,8,772,8,"needsToRebuildReanimatedEvent"],[614,37,772,37],[614,40,773,4,"preparedGesture"],[614,55,773,19],[614,56,773,20,"firstExecution"],[614,70,773,34],[614,74,774,4,"needsToReattach"],[614,89,774,19],[614,90,774,20,"preparedGesture"],[614,105,774,35],[614,107,774,37,"gesture"],[614,114,774,44],[614,115,774,45],[614,119,775,4,"state"],[614,124,775,9],[614,125,775,10,"forceReattach"],[614,138,775,23],[615,4,777,2,"state"],[615,9,777,7],[615,10,777,8,"forceReattach"],[615,23,777,21],[615,26,777,24],[615,31,777,29],[616,4,779,2],[616,8,779,6,"preparedGesture"],[616,23,779,21],[616,24,779,22,"firstExecution"],[616,38,779,36],[616,40,779,38],[617,6,780,4,"gestureConfig"],[617,19,780,17],[617,20,780,18,"initialize"],[617,30,780,28],[617,31,780,29],[617,32,780,30],[618,4,781,2],[619,4,783,2],[619,8,783,6,"useReanimatedHook"],[619,25,783,23],[619,27,783,25],[620,6,784,4],[621,6,785,4],[622,6,786,4,"useAnimatedGesture"],[622,24,786,22],[622,25,786,23,"preparedGesture"],[622,40,786,38],[622,42,786,40,"needsToRebuildReanimatedEvent"],[622,71,786,69],[622,72,786,70],[623,4,787,2],[624,4,789,2],[624,8,789,2,"useEffect"],[624,14,789,11],[624,15,789,11,"useEffect"],[624,24,789,11],[624,26,789,12],[624,32,789,18],[625,6,790,4],[625,10,790,10,"viewTag"],[625,17,790,17],[625,20,790,20],[625,24,790,20,"findNodeHandle"],[625,45,790,34],[625,46,790,34,"findNodeHandle"],[625,60,790,34],[625,62,790,35,"state"],[625,67,790,40],[625,68,790,41,"viewRef"],[625,75,790,48],[625,76,790,59],[626,6,791,4,"state"],[626,11,791,9],[626,12,791,10,"firstRender"],[626,23,791,21],[626,26,791,24],[626,30,791,28],[627,6,792,4,"mountedRef"],[627,16,792,14],[627,17,792,15,"current"],[627,24,792,22],[627,27,792,25],[627,31,792,29],[628,6,794,4,"validateDetectorChildren"],[628,30,794,28],[628,31,794,29,"state"],[628,36,794,34],[628,37,794,35,"viewRef"],[628,44,794,42],[628,45,794,43],[629,6,796,4,"attachHandlers"],[629,20,796,18],[629,21,796,19],[630,8,797,6,"preparedGesture"],[630,23,797,21],[631,8,798,6,"gestureConfig"],[631,21,798,19],[632,8,799,6,"gesture"],[632,15,799,13],[633,8,800,6,"webEventHandlersRef"],[633,27,800,25],[634,8,801,6,"viewTag"],[634,15,801,13],[635,8,802,6,"mountedRef"],[636,6,803,4],[636,7,803,5],[636,8,803,6],[637,6,805,4],[637,13,805,11],[637,19,805,17],[638,8,806,6,"mountedRef"],[638,18,806,16],[638,19,806,17,"current"],[638,26,806,24],[638,29,806,27],[638,34,806,32],[639,8,807,6,"dropHandlers"],[639,20,807,18],[639,21,807,19,"preparedGesture"],[639,36,807,34],[639,37,807,35],[640,6,808,4],[640,7,808,5],[641,4,809,2],[641,5,809,3],[641,7,809,5],[641,9,809,7],[641,10,809,8],[642,4,811,2],[642,8,811,2,"useEffect"],[642,14,811,11],[642,15,811,11,"useEffect"],[642,24,811,11],[642,26,811,12],[642,32,811,18],[643,6,812,4],[643,10,812,8],[643,11,812,9,"state"],[643,16,812,14],[643,17,812,15,"firstRender"],[643,28,812,26],[643,30,812,28],[644,8,813,6,"onHandlersUpdate"],[644,24,813,22],[644,25,813,23],[644,26,813,24],[645,6,814,4],[645,7,814,5],[645,13,814,11],[646,8,815,6,"state"],[646,13,815,11],[646,14,815,12,"firstRender"],[646,25,815,23],[646,28,815,26],[646,33,815,31],[647,6,816,4],[648,4,817,2],[648,5,817,3],[648,7,817,5],[648,8,817,6,"props"],[648,13,817,11],[648,14,817,12],[648,15,817,13],[649,4,819,2],[649,8,819,8,"refFunction"],[649,19,819,19],[649,22,819,23,"ref"],[649,25,819,35],[649,29,819,40],[650,6,820,4],[650,10,820,8,"ref"],[650,13,820,11],[650,18,820,16],[650,22,820,20],[650,24,820,22],[651,8,821,6],[652,8,822,6,"state"],[652,13,822,11],[652,14,822,12,"viewRef"],[652,21,822,19],[652,24,822,22,"ref"],[652,27,822,25],[654,8,824,6],[655,8,825,6],[655,12,825,10,"state"],[655,17,825,15],[655,18,825,16,"previousViewTag"],[655,33,825,31],[655,38,825,36],[655,39,825,37],[655,40,825,38],[655,42,825,40],[656,10,826,8,"state"],[656,15,826,13],[656,16,826,14,"previousViewTag"],[656,31,826,29],[656,34,826,32],[656,38,826,32,"findNodeHandle"],[656,59,826,46],[656,60,826,46,"findNodeHandle"],[656,74,826,46],[656,76,826,47,"state"],[656,81,826,52],[656,82,826,53,"viewRef"],[656,89,826,60],[656,90,826,71],[657,8,827,6],[659,8,829,6],[660,8,830,6],[661,8,831,6,"onHandlersUpdate"],[661,24,831,22],[661,25,831,23],[661,29,831,27],[661,30,831,28],[662,8,833,6],[662,12,833,10],[662,16,833,10,"isFabric"],[662,22,833,18],[662,23,833,18,"isFabric"],[662,31,833,18],[662,33,833,19],[662,34,833,20],[662,38,833,24,"global"],[662,44,833,30],[662,45,833,31,"isFormsStackingContext"],[662,67,833,53],[662,69,833,55],[663,10,834,8],[663,14,834,14,"node"],[663,18,834,18],[663,21,834,21],[663,25,834,21,"getShadowNodeFromRef"],[663,46,834,41],[663,47,834,41,"getShadowNodeFromRef"],[663,67,834,41],[663,69,834,42,"ref"],[663,72,834,45],[663,73,834,46],[664,10,835,8],[664,14,835,12,"global"],[664,20,835,18],[664,21,835,19,"isFormsStackingContext"],[664,43,835,41],[664,44,835,42,"node"],[664,48,835,46],[664,49,835,47],[664,54,835,52],[664,59,835,57],[664,61,835,59],[665,12,836,10,"console"],[665,19,836,17],[665,20,836,18,"error"],[665,25,836,23],[665,26,837,12],[665,30,837,12,"tagMessage"],[665,36,837,22],[665,37,837,22,"tagMessage"],[665,47,837,22],[665,49,838,14],[665,117,838,82],[665,120,839,16],[665,218,840,12],[665,219,841,10],[665,220,841,11],[666,10,842,8],[667,8,843,6],[668,6,844,4],[669,4,845,2],[669,5,845,3],[670,4,847,2],[670,8,847,6,"useReanimatedHook"],[670,25,847,23],[670,27,847,25],[671,6,848,4],[671,26,849,6],[671,30,849,6,"_reactJsxDevRuntime"],[671,49,849,6],[671,50,849,6,"jsxDEV"],[671,56,849,6],[671,58,849,7,"AnimatedWrap"],[671,70,849,19],[672,8,850,8,"ref"],[672,11,850,11],[672,13,850,13,"refFunction"],[672,24,850,25],[673,8,851,8,"onGestureHandlerEvent"],[673,29,851,29],[673,31,851,31,"preparedGesture"],[673,46,851,46],[673,47,851,47,"animatedEventHandler"],[673,67,851,68],[674,8,851,68,"children"],[674,16,851,68],[674,18,852,9,"props"],[674,23,852,14],[674,24,852,15,"children"],[675,6,852,23],[676,8,852,23,"fileName"],[676,16,852,23],[676,18,852,23,"_jsxFileName"],[676,30,852,23],[677,8,852,23,"lineNumber"],[677,18,852,23],[678,8,852,23,"columnNumber"],[678,20,852,23],[679,6,852,23],[679,13,853,20],[679,14,853,21],[680,4,855,2],[680,5,855,3],[680,11,855,9],[681,6,856,4],[681,26,856,11],[681,30,856,11,"_reactJsxDevRuntime"],[681,49,856,11],[681,50,856,11,"jsxDEV"],[681,56,856,11],[681,58,856,12,"Wrap"],[681,62,856,16],[682,8,856,17,"ref"],[682,11,856,20],[682,13,856,22,"refFunction"],[682,24,856,34],[683,8,856,34,"children"],[683,16,856,34],[683,18,856,36,"props"],[683,23,856,41],[683,24,856,42,"children"],[684,6,856,50],[685,8,856,50,"fileName"],[685,16,856,50],[685,18,856,50,"_jsxFileName"],[685,30,856,50],[686,8,856,50,"lineNumber"],[686,18,856,50],[687,8,856,50,"columnNumber"],[687,20,856,50],[688,6,856,50],[688,13,856,57],[688,14,856,58],[689,4,857,2],[690,2,858,0],[690,3,858,1],[691,2,858,2],[691,6,860,6,"Wrap"],[691,10,860,10],[691,36,860,10,"_React$Component"],[691,52,860,10],[692,4,860,10],[692,13,860,10,"Wrap"],[692,18,860,10],[693,6,860,10],[693,10,860,10,"_classCallCheck"],[693,25,860,10],[693,26,860,10,"default"],[693,33,860,10],[693,41,860,10,"Wrap"],[693,45,860,10],[694,6,860,10],[694,17,860,10,"_callSuper"],[694,27,860,10],[694,28,860,10,"default"],[694,35,860,10],[694,43,860,10,"Wrap"],[694,47,860,10],[694,49,860,10,"arguments"],[694,58,860,10],[695,4,860,10],[696,4,860,10],[696,8,860,10,"_inherits"],[696,17,860,10],[696,18,860,10,"default"],[696,25,860,10],[696,27,860,10,"Wrap"],[696,31,860,10],[696,33,860,10,"_React$Component"],[696,49,860,10],[697,4,860,10],[697,15,860,10,"_createClass"],[697,27,860,10],[697,28,860,10,"default"],[697,35,860,10],[697,37,860,10,"Wrap"],[697,41,860,10],[698,6,860,10,"key"],[698,9,860,10],[699,6,860,10,"value"],[699,11,860,10],[699,13,865,2],[699,22,865,2,"render"],[699,28,865,8,"render"],[699,29,865,8],[699,31,865,11],[700,8,866,4],[700,12,866,8],[701,10,867,6],[702,10,868,6],[703,10,869,6],[704,10,870,6],[705,10,871,6],[706,10,872,6],[706,14,872,12,"child"],[706,19,872,22],[706,22,872,25,"React"],[706,27,872,30],[706,28,872,30,"default"],[706,35,872,30],[706,36,872,31,"Children"],[706,44,872,39],[706,45,872,40,"only"],[706,49,872,44],[706,50,872,45],[706,54,872,49],[706,55,872,50,"props"],[706,60,872,55],[706,61,872,56,"children"],[706,69,872,64],[706,70,872,65],[707,10,873,6],[707,30,873,13,"React"],[707,35,873,18],[707,36,873,18,"default"],[707,43,873,18],[707,44,873,19,"cloneElement"],[707,56,873,31],[707,57,874,8,"child"],[707,62,874,13],[707,64,875,8],[708,12,875,10,"collapsable"],[708,23,875,21],[708,25,875,23],[709,10,875,29],[709,11,875,30],[710,10,876,8],[711,10,877,8,"child"],[711,15,877,13],[711,16,877,14,"props"],[711,21,877,19],[711,22,877,20,"children"],[711,30,878,6],[711,31,878,7],[712,8,879,4],[712,9,879,5],[712,10,879,6],[712,17,879,13,"e"],[712,18,879,14],[712,20,879,16],[713,10,880,6],[713,16,880,12],[713,20,880,16,"Error"],[713,25,880,21],[713,26,881,8],[713,30,881,8,"tagMessage"],[713,36,881,18],[713,37,881,18,"tagMessage"],[713,47,881,18],[713,49,882,10],[713,220,883,8],[713,221,884,6],[713,222,884,7],[714,8,885,4],[715,6,886,2],[716,4,886,3],[717,2,886,3],[717,4,860,19,"React"],[717,9,860,24],[717,10,860,24,"default"],[717,17,860,24],[717,18,860,25,"Component"],[717,27,860,34],[718,2,889,0],[718,6,889,6,"AnimatedWrap"],[718,18,889,18],[718,21,889,21,"Reanimated"],[718,39,889,31],[718,40,889,31,"Reanimated"],[718,50,889,31],[718,52,889,33,"default"],[718,59,889,40],[718,61,889,42,"createAnimatedComponent"],[718,84,889,65],[718,85,889,66,"Wrap"],[718,89,889,70],[718,90,889,71],[718,94,889,75,"Wrap"],[718,98,889,79],[719,0,889,80],[719,3]],"functionMap":{"names":["<global>","convertToHandlerTag","extractValidHandlerTags","interactionGroup.map.filter$argument_0","dropHandlers","checkGestureCallbacksForWorklets","attachHandlers","ghQueueMicrotask$argument_0","isAnimatedGesture","gesture.filter.map$argument_0","updateHandlers","preparedGesture.config.filter$argument_0","preparedGesture.config.filter.map$argument_0","needsToReattach","isStateChangeEvent","isTouchEvent","getHandler","touchEventTypeToCallbackType","runWorklet","useAnimatedGesture","callback","validateDetectorChildren","applyUserSelectProp","applyEnableContextMenuProp","applyTouchActionProp","GestureDetector","gesture.some$argument_0","useRef$argument_0.onGestureHandlerEvent","<anonymous>","forceRender","onHandlersUpdate","useEffect$argument_0","refFunction","Wrap","Wrap#render"],"mappings":"AAA;AC8E;CDU;AEE;uDCE,gBD;CFE;AIE;CJQ;AKE;CLmB;AMkB;mBCgB;GDK;mBCe;GDiC;8BE4B,yCF;WGI,iBH;CNI;AUE;mBHuB;gBIiC,4BJ;aKC,iBL;GG2B;CVC;AaE;CbkB;AcE;CdM;AeE;CfK;AgBE;ChB2B;AiBE;CjBe;AkBE;ClBe;AmBE;mBCuB;GD2E;CnBW;AqBG;CrBkD;4BsBE;CtBO;mCuBE;CvBO;6BwBE;CxBO;+ByBqD;yCCuB,4BD;2BEW;KFE;QGE;SHE;EIK;GJE;EKkB;GLyB;YMqB;WHgB;KGG;GNC;YME;GNM;sBOE;GP0B;CzBa;AiCE;ECK;GDqB;CjCC"},"hasCjsExports":false},"type":"js/module"}]}