{"dependencies":[{"name":"./PlatformChecker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":14},"end":{"line":2,"column":51,"index":65}}],"key":"O136KS8LvzB4pufOIvMCitL6KOc=","exportNames":["*"],"imports":1}},{"name":"./core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":66},"end":{"line":6,"column":16,"index":155}}],"key":"0ONCEUiDM4TuRiJMnypk4k7v4nE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"updateLayoutAnimations\", {\n    enumerable: true,\n    get: function () {\n      return updateLayoutAnimations;\n    }\n  });\n  var _PlatformChecker = require(_dependencyMap[0], \"./PlatformChecker\");\n  var _core = require(_dependencyMap[1], \"./core\");\n  function createUpdateManager() {\n    var animations = [];\n    // When a stack is rerendered we reconfigure all the shared elements.\n    // To do that we want them to appear in our batch in the correct order,\n    // so we defer some of the updates to appear at the end of the batch.\n    var deferredAnimations = [];\n    return {\n      update(batchItem, isUnmounting) {\n        if (isUnmounting) {\n          deferredAnimations.push(batchItem);\n        } else {\n          animations.push(batchItem);\n        }\n        if (animations.length + deferredAnimations.length === 1) {\n          setImmediate(this.flush);\n        }\n      },\n      flush() {\n        (0, _core.configureLayoutAnimationBatch)(animations.concat(deferredAnimations));\n        animations.length = 0;\n        deferredAnimations.length = 0;\n      }\n    };\n  }\n\n  /**\n   * Lets you update the current configuration of the layout animation or shared element transition for a given component.\n   * Configurations are batched and applied at the end of the current execution block, right before sending the response back to native.\n   *\n   * @param viewTag - The tag of the component you'd like to configure.\n   * @param type - The type of the animation you'd like to configure - {@link LayoutAnimationType}.\n   * @param config - The animation configuration - {@link LayoutAnimationFunction}, {@link SharedTransitionAnimationsFunction}, {@link ProgressAnimationCallback} or {@link Keyframe}. Passing `undefined` will remove the animation.\n   * @param sharedTransitionTag - The tag of the shared element transition you'd like to configure. Passing `undefined` will remove the transition.\n   * @param isUnmounting - Determines whether the configuration should be included at the end of the batch, after all the non-deferred configurations (even those that were updated later). This is used to retain the correct ordering of shared elements. Defaults to `false`.\n   */\n  var updateLayoutAnimations;\n  if ((0, _PlatformChecker.shouldBeUseWeb)()) {\n    updateLayoutAnimations = () => {\n      // no-op\n    };\n  } else {\n    var updateLayoutAnimationsManager = createUpdateManager();\n    updateLayoutAnimations = (viewTag, type, config, sharedTransitionTag, isUnmounting) => updateLayoutAnimationsManager.update({\n      viewTag,\n      type,\n      config: config ? (0, _core.makeShareableCloneRecursive)(config) : undefined,\n      sharedTransitionTag\n    }, isUnmounting);\n  }\n});","lineCount":64,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,53,0,"Object"],[7,8,53,0],[7,9,53,0,"defineProperty"],[7,23,53,0],[7,24,53,0,"exports"],[7,31,53,0],[8,4,53,0,"enumerable"],[8,14,53,0],[9,4,53,0,"get"],[9,7,53,0],[9,18,53,0,"get"],[9,19,53,0],[10,6,53,0],[10,13,53,0,"updateLayoutAnimations"],[10,35,53,0],[11,4,53,0],[12,2,53,0],[13,2,2,0],[13,6,2,0,"_PlatformChecker"],[13,22,2,0],[13,25,2,0,"require"],[13,32,2,0],[13,33,2,0,"_dependencyMap"],[13,47,2,0],[14,2,3,0],[14,6,3,0,"_core"],[14,11,3,0],[14,14,3,0,"require"],[14,21,3,0],[14,22,3,0,"_dependencyMap"],[14,36,3,0],[15,2,17,0],[15,11,17,9,"createUpdateManager"],[15,30,17,28,"createUpdateManager"],[15,31,17,28],[15,33,17,31],[16,4,18,2],[16,8,18,8,"animations"],[16,18,18,46],[16,21,18,49],[16,23,18,51],[17,4,19,2],[18,4,20,2],[19,4,21,2],[20,4,22,2],[20,8,22,8,"deferredAnimations"],[20,26,22,54],[20,29,22,57],[20,31,22,59],[21,4,24,2],[21,11,24,9],[22,6,25,4,"update"],[22,12,25,10,"update"],[22,13,25,11,"batchItem"],[22,22,25,46],[22,24,25,48,"isUnmounting"],[22,36,25,70],[22,38,25,72],[23,8,26,6],[23,12,26,10,"isUnmounting"],[23,24,26,22],[23,26,26,24],[24,10,27,8,"deferredAnimations"],[24,28,27,26],[24,29,27,27,"push"],[24,33,27,31],[24,34,27,32,"batchItem"],[24,43,27,41],[24,44,27,42],[25,8,28,6],[25,9,28,7],[25,15,28,13],[26,10,29,8,"animations"],[26,20,29,18],[26,21,29,19,"push"],[26,25,29,23],[26,26,29,24,"batchItem"],[26,35,29,33],[26,36,29,34],[27,8,30,6],[28,8,31,6],[28,12,31,10,"animations"],[28,22,31,20],[28,23,31,21,"length"],[28,29,31,27],[28,32,31,30,"deferredAnimations"],[28,50,31,48],[28,51,31,49,"length"],[28,57,31,55],[28,62,31,60],[28,63,31,61],[28,65,31,63],[29,10,32,8,"setImmediate"],[29,22,32,20],[29,23,32,21],[29,27,32,25],[29,28,32,26,"flush"],[29,33,32,31],[29,34,32,32],[30,8,33,6],[31,6,34,4],[31,7,34,5],[32,6,35,4,"flush"],[32,11,35,9,"flush"],[32,12,35,9],[32,14,35,22],[33,8,36,6],[33,12,36,6,"configureLayoutAnimationBatch"],[33,17,36,35],[33,18,36,35,"configureLayoutAnimationBatch"],[33,47,36,35],[33,49,36,36,"animations"],[33,59,36,46],[33,60,36,47,"concat"],[33,66,36,53],[33,67,36,54,"deferredAnimations"],[33,85,36,72],[33,86,36,73],[33,87,36,74],[34,8,37,6,"animations"],[34,18,37,16],[34,19,37,17,"length"],[34,25,37,23],[34,28,37,26],[34,29,37,27],[35,8,38,6,"deferredAnimations"],[35,26,38,24],[35,27,38,25,"length"],[35,33,38,31],[35,36,38,34],[35,37,38,35],[36,6,39,4],[37,4,40,2],[37,5,40,3],[38,2,41,0],[40,2,43,0],[41,0,44,0],[42,0,45,0],[43,0,46,0],[44,0,47,0],[45,0,48,0],[46,0,49,0],[47,0,50,0],[48,0,51,0],[49,0,52,0],[50,2,53,7],[50,6,53,11,"updateLayoutAnimations"],[50,28,63,9],[51,2,65,0],[51,6,65,4],[51,10,65,4,"shouldBeUseWeb"],[51,26,65,18],[51,27,65,18,"shouldBeUseWeb"],[51,41,65,18],[51,43,65,19],[51,44,65,20],[51,46,65,22],[52,4,66,2,"updateLayoutAnimations"],[52,26,66,24],[52,29,66,27,"updateLayoutAnimations"],[52,30,66,27],[52,35,66,33],[53,6,67,4],[54,4,67,4],[54,5,68,3],[55,2,69,0],[55,3,69,1],[55,9,69,7],[56,4,70,2],[56,8,70,8,"updateLayoutAnimationsManager"],[56,37,70,37],[56,40,70,40,"createUpdateManager"],[56,59,70,59],[56,60,70,60],[56,61,70,61],[57,4,71,2,"updateLayoutAnimations"],[57,26,71,24],[57,29,71,27,"updateLayoutAnimations"],[57,30,72,4,"viewTag"],[57,37,72,11],[57,39,73,4,"type"],[57,43,73,8],[57,45,74,4,"config"],[57,51,74,10],[57,53,75,4,"sharedTransitionTag"],[57,72,75,23],[57,74,76,4,"isUnmounting"],[57,86,76,16],[57,91,78,4,"updateLayoutAnimationsManager"],[57,120,78,33],[57,121,78,34,"update"],[57,127,78,40],[57,128,79,6],[58,6,80,8,"viewTag"],[58,13,80,15],[59,6,81,8,"type"],[59,10,81,12],[60,6,82,8,"config"],[60,12,82,14],[60,14,82,16,"config"],[60,20,82,22],[60,23,82,25],[60,27,82,25,"makeShareableCloneRecursive"],[60,32,82,52],[60,33,82,52,"makeShareableCloneRecursive"],[60,60,82,52],[60,62,82,53,"config"],[60,68,82,59],[60,69,82,60],[60,72,82,63,"undefined"],[60,81,82,72],[61,6,83,8,"sharedTransitionTag"],[62,4,84,6],[62,5,84,7],[62,7,85,6,"isUnmounting"],[62,19,86,4],[62,20,86,5],[63,2,87,0],[64,0,87,1],[64,3]],"functionMap":{"names":["<global>","createUpdateManager","update","flush","updateLayoutAnimations"],"mappings":"AAA;ACgB;ICQ;KDS;IEC;KFI;CDE;2BIyB;GJE;2BIG;KJe"},"hasCjsExports":false},"type":"js/module"}]}