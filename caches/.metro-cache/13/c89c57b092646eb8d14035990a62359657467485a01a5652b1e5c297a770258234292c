{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isTypedRoute = exports.stripInvisibleSegmentsFromPath = exports.stripGroupSegmentsFromPath = exports.removeFileSystemDots = exports.removeSupportedExtensions = exports.getContextKey = exports.getNameFromFilePath = exports.matchArrayGroupName = exports.matchGroupName = exports.testNotFound = exports.matchDeepDynamicRouteName = exports.matchDynamicName = void 0;\n  /** Match `[page]` -> `page` */\n  function matchDynamicName(name) {\n    // Don't match `...` or `[` or `]` inside the brackets\n    // eslint-disable-next-line no-useless-escape\n    return name.match(/^\\[([^[\\](?:\\.\\.\\.)]+?)\\]$/)?.[1];\n  }\n  exports.matchDynamicName = matchDynamicName;\n  /** Match `[...page]` -> `page` */\n  function matchDeepDynamicRouteName(name) {\n    return name.match(/^\\[\\.\\.\\.([^/]+?)\\]$/)?.[1];\n  }\n  exports.matchDeepDynamicRouteName = matchDeepDynamicRouteName;\n  /** Test `/` -> `page` */\n  function testNotFound(name) {\n    return /\\+not-found$/.test(name);\n  }\n  exports.testNotFound = testNotFound;\n  /** Match `(page)` -> `page` */\n  function matchGroupName(name) {\n    return name.match(/^(?:[^\\\\(\\\\)])*?\\(([^\\\\/]+)\\).*?$/)?.[1];\n  }\n  exports.matchGroupName = matchGroupName;\n  /** Match the first array group name `(a,b,c)/(d,c)` -> `'a,b,c'` */\n  function matchArrayGroupName(name) {\n    return name.match(/(?:[^\\\\(\\\\)])*?\\(([^\\\\/]+,[^\\\\/]+)\\).*?$/)?.[1];\n  }\n  exports.matchArrayGroupName = matchArrayGroupName;\n  function getNameFromFilePath(name) {\n    return removeSupportedExtensions(removeFileSystemDots(name));\n  }\n  exports.getNameFromFilePath = getNameFromFilePath;\n  function getContextKey(name) {\n    // The root path is `` (empty string) so always prepend `/` to ensure\n    // there is some value.\n    var normal = '/' + getNameFromFilePath(name);\n    if (!normal.endsWith('_layout')) {\n      return normal;\n    }\n    return normal.replace(/\\/?_layout$/, '');\n  }\n  exports.getContextKey = getContextKey;\n  /** Remove `.js`, `.ts`, `.jsx`, `.tsx` */\n  function removeSupportedExtensions(name) {\n    return name.replace(/(\\+api)?\\.[jt]sx?$/g, '');\n  }\n  exports.removeSupportedExtensions = removeSupportedExtensions;\n  // Remove any amount of `./` and `../` from the start of the string\n  function removeFileSystemDots(filePath) {\n    return filePath.replace(/^(?:\\.\\.?\\/)+/g, '');\n  }\n  exports.removeFileSystemDots = removeFileSystemDots;\n  function stripGroupSegmentsFromPath(path) {\n    return path.split('/').reduce((acc, v) => {\n      if (matchGroupName(v) == null) {\n        acc.push(v);\n      }\n      return acc;\n    }, []).join('/');\n  }\n  exports.stripGroupSegmentsFromPath = stripGroupSegmentsFromPath;\n  function stripInvisibleSegmentsFromPath(path) {\n    return stripGroupSegmentsFromPath(path).replace(/\\/?index$/, '');\n  }\n  exports.stripInvisibleSegmentsFromPath = stripInvisibleSegmentsFromPath;\n  /**\n   * Match:\n   *  - _layout files, +html, +not-found, string+api, etc\n   *  - Routes can still use `+`, but it cannot be in the last segment.\n   */\n  function isTypedRoute(name) {\n    return !name.startsWith('+') && name.match(/(_layout|[^/]*?\\+[^/]*?)\\.[tj]sx?$/) === null;\n  }\n  exports.isTypedRoute = isTypedRoute;\n});","lineCount":81,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"isTypedRoute"],[7,22,3,20],[7,25,3,23,"exports"],[7,32,3,30],[7,33,3,31,"stripInvisibleSegmentsFromPath"],[7,63,3,61],[7,66,3,64,"exports"],[7,73,3,71],[7,74,3,72,"stripGroupSegmentsFromPath"],[7,100,3,98],[7,103,3,101,"exports"],[7,110,3,108],[7,111,3,109,"removeFileSystemDots"],[7,131,3,129],[7,134,3,132,"exports"],[7,141,3,139],[7,142,3,140,"removeSupportedExtensions"],[7,167,3,165],[7,170,3,168,"exports"],[7,177,3,175],[7,178,3,176,"getContextKey"],[7,191,3,189],[7,194,3,192,"exports"],[7,201,3,199],[7,202,3,200,"getNameFromFilePath"],[7,221,3,219],[7,224,3,222,"exports"],[7,231,3,229],[7,232,3,230,"matchArrayGroupName"],[7,251,3,249],[7,254,3,252,"exports"],[7,261,3,259],[7,262,3,260,"matchGroupName"],[7,276,3,274],[7,279,3,277,"exports"],[7,286,3,284],[7,287,3,285,"testNotFound"],[7,299,3,297],[7,302,3,300,"exports"],[7,309,3,307],[7,310,3,308,"matchDeepDynamicRouteName"],[7,335,3,333],[7,338,3,336,"exports"],[7,345,3,343],[7,346,3,344,"matchDynamicName"],[7,362,3,360],[7,365,3,363],[7,370,3,368],[7,371,3,369],[8,2,4,0],[9,2,5,0],[9,11,5,9,"matchDynamicName"],[9,27,5,25,"matchDynamicName"],[9,28,5,26,"name"],[9,32,5,30],[9,34,5,32],[10,4,6,4],[11,4,7,4],[12,4,8,4],[12,11,8,11,"name"],[12,15,8,15],[12,16,8,16,"match"],[12,21,8,21],[12,22,8,22],[12,50,8,50],[12,51,8,51],[12,54,8,54],[12,55,8,55],[12,56,8,56],[13,2,9,0],[14,2,10,0,"exports"],[14,9,10,7],[14,10,10,8,"matchDynamicName"],[14,26,10,24],[14,29,10,27,"matchDynamicName"],[14,45,10,43],[15,2,11,0],[16,2,12,0],[16,11,12,9,"matchDeepDynamicRouteName"],[16,36,12,34,"matchDeepDynamicRouteName"],[16,37,12,35,"name"],[16,41,12,39],[16,43,12,41],[17,4,13,4],[17,11,13,11,"name"],[17,15,13,15],[17,16,13,16,"match"],[17,21,13,21],[17,22,13,22],[17,44,13,44],[17,45,13,45],[17,48,13,48],[17,49,13,49],[17,50,13,50],[18,2,14,0],[19,2,15,0,"exports"],[19,9,15,7],[19,10,15,8,"matchDeepDynamicRouteName"],[19,35,15,33],[19,38,15,36,"matchDeepDynamicRouteName"],[19,63,15,61],[20,2,16,0],[21,2,17,0],[21,11,17,9,"testNotFound"],[21,23,17,21,"testNotFound"],[21,24,17,22,"name"],[21,28,17,26],[21,30,17,28],[22,4,18,4],[22,11,18,11],[22,25,18,25],[22,26,18,26,"test"],[22,30,18,30],[22,31,18,31,"name"],[22,35,18,35],[22,36,18,36],[23,2,19,0],[24,2,20,0,"exports"],[24,9,20,7],[24,10,20,8,"testNotFound"],[24,22,20,20],[24,25,20,23,"testNotFound"],[24,37,20,35],[25,2,21,0],[26,2,22,0],[26,11,22,9,"matchGroupName"],[26,25,22,23,"matchGroupName"],[26,26,22,24,"name"],[26,30,22,28],[26,32,22,30],[27,4,23,4],[27,11,23,11,"name"],[27,15,23,15],[27,16,23,16,"match"],[27,21,23,21],[27,22,23,22],[27,57,23,57],[27,58,23,58],[27,61,23,61],[27,62,23,62],[27,63,23,63],[28,2,24,0],[29,2,25,0,"exports"],[29,9,25,7],[29,10,25,8,"matchGroupName"],[29,24,25,22],[29,27,25,25,"matchGroupName"],[29,41,25,39],[30,2,26,0],[31,2,27,0],[31,11,27,9,"matchArrayGroupName"],[31,30,27,28,"matchArrayGroupName"],[31,31,27,29,"name"],[31,35,27,33],[31,37,27,35],[32,4,28,4],[32,11,28,11,"name"],[32,15,28,15],[32,16,28,16,"match"],[32,21,28,21],[32,22,28,22],[32,64,28,64],[32,65,28,65],[32,68,28,68],[32,69,28,69],[32,70,28,70],[33,2,29,0],[34,2,30,0,"exports"],[34,9,30,7],[34,10,30,8,"matchArrayGroupName"],[34,29,30,27],[34,32,30,30,"matchArrayGroupName"],[34,51,30,49],[35,2,31,0],[35,11,31,9,"getNameFromFilePath"],[35,30,31,28,"getNameFromFilePath"],[35,31,31,29,"name"],[35,35,31,33],[35,37,31,35],[36,4,32,4],[36,11,32,11,"removeSupportedExtensions"],[36,36,32,36],[36,37,32,37,"removeFileSystemDots"],[36,57,32,57],[36,58,32,58,"name"],[36,62,32,62],[36,63,32,63],[36,64,32,64],[37,2,33,0],[38,2,34,0,"exports"],[38,9,34,7],[38,10,34,8,"getNameFromFilePath"],[38,29,34,27],[38,32,34,30,"getNameFromFilePath"],[38,51,34,49],[39,2,35,0],[39,11,35,9,"getContextKey"],[39,24,35,22,"getContextKey"],[39,25,35,23,"name"],[39,29,35,27],[39,31,35,29],[40,4,36,4],[41,4,37,4],[42,4,38,4],[42,8,38,10,"normal"],[42,14,38,16],[42,17,38,19],[42,20,38,22],[42,23,38,25,"getNameFromFilePath"],[42,42,38,44],[42,43,38,45,"name"],[42,47,38,49],[42,48,38,50],[43,4,39,4],[43,8,39,8],[43,9,39,9,"normal"],[43,15,39,15],[43,16,39,16,"endsWith"],[43,24,39,24],[43,25,39,25],[43,34,39,34],[43,35,39,35],[43,37,39,37],[44,6,40,8],[44,13,40,15,"normal"],[44,19,40,21],[45,4,41,4],[46,4,42,4],[46,11,42,11,"normal"],[46,17,42,17],[46,18,42,18,"replace"],[46,25,42,25],[46,26,42,26],[46,39,42,39],[46,41,42,41],[46,43,42,43],[46,44,42,44],[47,2,43,0],[48,2,44,0,"exports"],[48,9,44,7],[48,10,44,8,"getContextKey"],[48,23,44,21],[48,26,44,24,"getContextKey"],[48,39,44,37],[49,2,45,0],[50,2,46,0],[50,11,46,9,"removeSupportedExtensions"],[50,36,46,34,"removeSupportedExtensions"],[50,37,46,35,"name"],[50,41,46,39],[50,43,46,41],[51,4,47,4],[51,11,47,11,"name"],[51,15,47,15],[51,16,47,16,"replace"],[51,23,47,23],[51,24,47,24],[51,45,47,45],[51,47,47,47],[51,49,47,49],[51,50,47,50],[52,2,48,0],[53,2,49,0,"exports"],[53,9,49,7],[53,10,49,8,"removeSupportedExtensions"],[53,35,49,33],[53,38,49,36,"removeSupportedExtensions"],[53,63,49,61],[54,2,50,0],[55,2,51,0],[55,11,51,9,"removeFileSystemDots"],[55,31,51,29,"removeFileSystemDots"],[55,32,51,30,"filePath"],[55,40,51,38],[55,42,51,40],[56,4,52,4],[56,11,52,11,"filePath"],[56,19,52,19],[56,20,52,20,"replace"],[56,27,52,27],[56,28,52,28],[56,44,52,44],[56,46,52,46],[56,48,52,48],[56,49,52,49],[57,2,53,0],[58,2,54,0,"exports"],[58,9,54,7],[58,10,54,8,"removeFileSystemDots"],[58,30,54,28],[58,33,54,31,"removeFileSystemDots"],[58,53,54,51],[59,2,55,0],[59,11,55,9,"stripGroupSegmentsFromPath"],[59,37,55,35,"stripGroupSegmentsFromPath"],[59,38,55,36,"path"],[59,42,55,40],[59,44,55,42],[60,4,56,4],[60,11,56,11,"path"],[60,15,56,15],[60,16,57,9,"split"],[60,21,57,14],[60,22,57,15],[60,25,57,18],[60,26,57,19],[60,27,58,9,"reduce"],[60,33,58,15],[60,34,58,16],[60,35,58,17,"acc"],[60,38,58,20],[60,40,58,22,"v"],[60,41,58,23],[60,46,58,28],[61,6,59,8],[61,10,59,12,"matchGroupName"],[61,24,59,26],[61,25,59,27,"v"],[61,26,59,28],[61,27,59,29],[61,31,59,33],[61,35,59,37],[61,37,59,39],[62,8,60,12,"acc"],[62,11,60,15],[62,12,60,16,"push"],[62,16,60,20],[62,17,60,21,"v"],[62,18,60,22],[62,19,60,23],[63,6,61,8],[64,6,62,8],[64,13,62,15,"acc"],[64,16,62,18],[65,4,63,4],[65,5,63,5],[65,7,63,7],[65,9,63,9],[65,10,63,10],[65,11,64,9,"join"],[65,15,64,13],[65,16,64,14],[65,19,64,17],[65,20,64,18],[66,2,65,0],[67,2,66,0,"exports"],[67,9,66,7],[67,10,66,8,"stripGroupSegmentsFromPath"],[67,36,66,34],[67,39,66,37,"stripGroupSegmentsFromPath"],[67,65,66,63],[68,2,67,0],[68,11,67,9,"stripInvisibleSegmentsFromPath"],[68,41,67,39,"stripInvisibleSegmentsFromPath"],[68,42,67,40,"path"],[68,46,67,44],[68,48,67,46],[69,4,68,4],[69,11,68,11,"stripGroupSegmentsFromPath"],[69,37,68,37],[69,38,68,38,"path"],[69,42,68,42],[69,43,68,43],[69,44,68,44,"replace"],[69,51,68,51],[69,52,68,52],[69,63,68,63],[69,65,68,65],[69,67,68,67],[69,68,68,68],[70,2,69,0],[71,2,70,0,"exports"],[71,9,70,7],[71,10,70,8,"stripInvisibleSegmentsFromPath"],[71,40,70,38],[71,43,70,41,"stripInvisibleSegmentsFromPath"],[71,73,70,71],[72,2,71,0],[73,0,72,0],[74,0,73,0],[75,0,74,0],[76,0,75,0],[77,2,76,0],[77,11,76,9,"isTypedRoute"],[77,23,76,21,"isTypedRoute"],[77,24,76,22,"name"],[77,28,76,26],[77,30,76,28],[78,4,77,4],[78,11,77,11],[78,12,77,12,"name"],[78,16,77,16],[78,17,77,17,"startsWith"],[78,27,77,27],[78,28,77,28],[78,31,77,31],[78,32,77,32],[78,36,77,36,"name"],[78,40,77,40],[78,41,77,41,"match"],[78,46,77,46],[78,47,77,47],[78,83,77,83],[78,84,77,84],[78,89,77,89],[78,93,77,93],[79,2,78,0],[80,2,79,0,"exports"],[80,9,79,7],[80,10,79,8,"isTypedRoute"],[80,22,79,20],[80,25,79,23,"isTypedRoute"],[80,37,79,35],[81,0,79,36],[81,3]],"functionMap":{"names":["<global>","matchDynamicName","matchDeepDynamicRouteName","testNotFound","matchGroupName","matchArrayGroupName","getNameFromFilePath","getContextKey","removeSupportedExtensions","removeFileSystemDots","stripGroupSegmentsFromPath","path.split.reduce$argument_0","stripInvisibleSegmentsFromPath","isTypedRoute"],"mappings":"AAA;ACI;CDI;AEG;CFE;AGG;CHE;AIG;CJE;AKG;CLE;AME;CNE;AOE;CPQ;AQG;CRE;ASG;CTE;AUE;gBCG;KDK;CVE;AYE;CZE;AaO;CbE"},"hasCjsExports":true},"type":"js/module"}]}