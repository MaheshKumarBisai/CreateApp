{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":138},"end":{"line":8,"column":31,"index":169}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./NavigationBuilderContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":171},"end":{"line":13,"column":36,"index":294}}],"key":"KFIEweWhugyJmWZL0YQ42pa68TE=","exportNames":["*"],"imports":1}},{"name":"./useOnPreventRemove","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":405},"end":{"line":16,"column":79,"index":484}}],"key":"zHx1fnpyahkAQTykmUTy5XV/k3A=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return useOnAction;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _NavigationBuilderContext = require(_dependencyMap[1], \"./NavigationBuilderContext\");\n  var NavigationBuilderContext = _interopDefault(_NavigationBuilderContext);\n  var _useOnPreventRemove = require(_dependencyMap[2], \"./useOnPreventRemove\");\n  var useOnPreventRemove = _interopDefault(_useOnPreventRemove);\n  /**\n   * Hook to handle actions for a navigator, including state updates and bubbling.\n   *\n   * Bubbling an action is achieved in 2 ways:\n   * 1. To bubble action to parent, we expose the action handler in context and then access the parent context\n   * 2. To bubble action to child, child adds event listeners subscribing to actions from parent\n   *\n   * When the action handler handles as action, it returns `true`, otherwise `false`.\n   */\n  function useOnAction(_ref) {\n    var router = _ref.router,\n      getState = _ref.getState,\n      setState = _ref.setState,\n      key = _ref.key,\n      actionListeners = _ref.actionListeners,\n      beforeRemoveListeners = _ref.beforeRemoveListeners,\n      routerConfigOptions = _ref.routerConfigOptions,\n      emitter = _ref.emitter;\n    var _React$useContext = React.useContext(NavigationBuilderContext.default),\n      onActionParent = _React$useContext.onAction,\n      onRouteFocusParent = _React$useContext.onRouteFocus,\n      addListenerParent = _React$useContext.addListener,\n      onDispatchAction = _React$useContext.onDispatchAction;\n    var routerConfigOptionsRef = React.useRef(routerConfigOptions);\n    React.useEffect(() => {\n      routerConfigOptionsRef.current = routerConfigOptions;\n    });\n    var onAction = React.useCallback(function (action) {\n      var visitedNavigators = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();\n      var state = getState();\n\n      // Since actions can bubble both up and down, they could come to the same navigator again\n      // We keep track of navigators which have already tried to handle the action and return if it's already visited\n      if (visitedNavigators.has(state.key)) {\n        return false;\n      }\n      visitedNavigators.add(state.key);\n      if (typeof action.target !== 'string' || action.target === state.key) {\n        var result = router.getStateForAction(state, action, routerConfigOptionsRef.current);\n\n        // If a target is specified and set to current navigator, the action shouldn't bubble\n        // So instead of `null`, we use the state object for such cases to signal that action was handled\n        result = result === null && action.target === state.key ? state : result;\n        if (result !== null) {\n          onDispatchAction(action, state === result);\n          if (state !== result) {\n            var isPrevented = (0, _useOnPreventRemove.shouldPreventRemove)(emitter, beforeRemoveListeners, state.routes, result.routes, action);\n            if (isPrevented) {\n              return true;\n            }\n            setState(result);\n          }\n          if (onRouteFocusParent !== undefined) {\n            // Some actions such as `NAVIGATE` also want to bring the navigated route to focus in the whole tree\n            // This means we need to focus all of the parent navigators of this navigator as well\n            var shouldFocus = router.shouldActionChangeFocus(action);\n            if (shouldFocus && key !== undefined) {\n              onRouteFocusParent(key);\n            }\n          }\n          return true;\n        }\n      }\n      if (onActionParent !== undefined) {\n        // Bubble action to the parent if the current navigator didn't handle it\n        if (onActionParent(action, visitedNavigators)) {\n          return true;\n        }\n      }\n\n      // If the action wasn't handled by current navigator or a parent navigator, let children handle it\n      for (var i = actionListeners.length - 1; i >= 0; i--) {\n        var listener = actionListeners[i];\n        if (listener(action, visitedNavigators)) {\n          return true;\n        }\n      }\n      return false;\n    }, [actionListeners, beforeRemoveListeners, emitter, getState, key, onActionParent, onDispatchAction, onRouteFocusParent, router, setState]);\n    (0, useOnPreventRemove.default)({\n      getState,\n      emitter,\n      beforeRemoveListeners\n    });\n    React.useEffect(() => addListenerParent?.('action', onAction), [addListenerParent, onAction]);\n    return onAction;\n  }\n});","lineCount":126,"map":[[27,2,38,15,"Object"],[27,8,38,15],[27,9,38,15,"defineProperty"],[27,23,38,15],[27,24,38,15,"exports"],[27,31,38,15],[28,4,38,15,"enumerable"],[28,14,38,15],[29,4,38,15,"get"],[29,7,38,15],[29,18,38,15,"get"],[29,19,38,15],[30,6,38,15],[30,13,38,15,"useOnAction"],[30,24,38,15],[31,4,38,15],[32,2,38,15],[33,2,8,0],[33,6,8,0,"_react"],[33,12,8,0],[33,15,8,0,"require"],[33,22,8,0],[33,23,8,0,"_dependencyMap"],[33,37,8,0],[34,2,8,0],[34,6,8,0,"React"],[34,11,8,0],[34,14,8,0,"_interopNamespace"],[34,31,8,0],[34,32,8,0,"_react"],[34,38,8,0],[35,2,10,0],[35,6,10,0,"_NavigationBuilderContext"],[35,31,10,0],[35,34,10,0,"require"],[35,41,10,0],[35,42,10,0,"_dependencyMap"],[35,56,10,0],[36,2,10,0],[36,6,10,0,"NavigationBuilderContext"],[36,30,10,0],[36,33,10,0,"_interopDefault"],[36,48,10,0],[36,49,10,0,"_NavigationBuilderContext"],[36,74,10,0],[37,2,16,0],[37,6,16,0,"_useOnPreventRemove"],[37,25,16,0],[37,28,16,0,"require"],[37,35,16,0],[37,36,16,0,"_dependencyMap"],[37,50,16,0],[38,2,16,0],[38,6,16,0,"useOnPreventRemove"],[38,24,16,0],[38,27,16,0,"_interopDefault"],[38,42,16,0],[38,43,16,0,"_useOnPreventRemove"],[38,62,16,0],[39,2,29,0],[40,0,30,0],[41,0,31,0],[42,0,32,0],[43,0,33,0],[44,0,34,0],[45,0,35,0],[46,0,36,0],[47,0,37,0],[48,2,38,15],[48,11,38,24,"useOnAction"],[48,22,38,35,"useOnAction"],[48,23,38,35,"_ref"],[48,27,38,35],[48,29,47,12],[49,4,47,12],[49,8,39,2,"router"],[49,14,39,8],[49,17,39,8,"_ref"],[49,21,39,8],[49,22,39,2,"router"],[49,28,39,8],[50,6,40,2,"getState"],[50,14,40,10],[50,17,40,10,"_ref"],[50,21,40,10],[50,22,40,2,"getState"],[50,30,40,10],[51,6,41,2,"setState"],[51,14,41,10],[51,17,41,10,"_ref"],[51,21,41,10],[51,22,41,2,"setState"],[51,30,41,10],[52,6,42,2,"key"],[52,9,42,5],[52,12,42,5,"_ref"],[52,16,42,5],[52,17,42,2,"key"],[52,20,42,5],[53,6,43,2,"actionListeners"],[53,21,43,17],[53,24,43,17,"_ref"],[53,28,43,17],[53,29,43,2,"actionListeners"],[53,44,43,17],[54,6,44,2,"beforeRemoveListeners"],[54,27,44,23],[54,30,44,23,"_ref"],[54,34,44,23],[54,35,44,2,"beforeRemoveListeners"],[54,56,44,23],[55,6,45,2,"routerConfigOptions"],[55,25,45,21],[55,28,45,21,"_ref"],[55,32,45,21],[55,33,45,2,"routerConfigOptions"],[55,52,45,21],[56,6,46,2,"emitter"],[56,13,46,9],[56,16,46,9,"_ref"],[56,20,46,9],[56,21,46,2,"emitter"],[56,28,46,9],[57,4,48,2],[57,8,48,2,"_React$useContext"],[57,25,48,2],[57,28,53,6,"React"],[57,33,53,11],[57,34,53,12,"useContext"],[57,44,53,22],[57,45,53,23,"NavigationBuilderContext"],[57,69,53,47],[57,70,53,47,"default"],[57,77,53,47],[57,78,53,48],[58,6,49,14,"onActionParent"],[58,20,49,28],[58,23,49,28,"_React$useContext"],[58,40,49,28],[58,41,49,4,"onAction"],[58,49,49,12],[59,6,50,18,"onRouteFocusParent"],[59,24,50,36],[59,27,50,36,"_React$useContext"],[59,44,50,36],[59,45,50,4,"onRouteFocus"],[59,57,50,16],[60,6,51,17,"addListenerParent"],[60,23,51,34],[60,26,51,34,"_React$useContext"],[60,43,51,34],[60,44,51,4,"addListener"],[60,55,51,15],[61,6,52,4,"onDispatchAction"],[61,22,52,20],[61,25,52,20,"_React$useContext"],[61,42,52,20],[61,43,52,4,"onDispatchAction"],[61,59,52,20],[62,4,55,2],[62,8,55,8,"routerConfigOptionsRef"],[62,30,55,30],[62,33,56,4,"React"],[62,38,56,9],[62,39,56,10,"useRef"],[62,45,56,16],[62,46,56,38,"routerConfigOptions"],[62,65,56,57],[62,66,56,58],[63,4,58,2,"React"],[63,9,58,7],[63,10,58,8,"useEffect"],[63,19,58,17],[63,20,58,18],[63,26,58,24],[64,6,59,4,"routerConfigOptionsRef"],[64,28,59,26],[64,29,59,27,"current"],[64,36,59,34],[64,39,59,37,"routerConfigOptions"],[64,58,59,56],[65,4,60,2],[65,5,60,3],[65,6,60,4],[66,4,62,2],[66,8,62,8,"onAction"],[66,16,62,16],[66,19,62,19,"React"],[66,24,62,24],[66,25,62,25,"useCallback"],[66,36,62,36],[66,37,63,4],[66,47,64,6,"action"],[66,53,64,30],[66,55,66,9],[67,6,66,9],[67,10,65,6,"visitedNavigators"],[67,27,65,36],[67,30,65,36,"arguments"],[67,39,65,36],[67,40,65,36,"length"],[67,46,65,36],[67,54,65,36,"arguments"],[67,63,65,36],[67,71,65,36,"undefined"],[67,80,65,36],[67,83,65,36,"arguments"],[67,92,65,36],[67,98,65,39],[67,102,65,43,"Set"],[67,105,65,46],[67,106,65,55],[67,107,65,56],[68,6,67,6],[68,10,67,12,"state"],[68,15,67,17],[68,18,67,20,"getState"],[68,26,67,28],[68,27,67,29],[68,28,67,30],[70,6,69,6],[71,6,70,6],[72,6,71,6],[72,10,71,10,"visitedNavigators"],[72,27,71,27],[72,28,71,28,"has"],[72,31,71,31],[72,32,71,32,"state"],[72,37,71,37],[72,38,71,38,"key"],[72,41,71,41],[72,42,71,42],[72,44,71,44],[73,8,72,8],[73,15,72,15],[73,20,72,20],[74,6,73,6],[75,6,75,6,"visitedNavigators"],[75,23,75,23],[75,24,75,24,"add"],[75,27,75,27],[75,28,75,28,"state"],[75,33,75,33],[75,34,75,34,"key"],[75,37,75,37],[75,38,75,38],[76,6,77,6],[76,10,77,10],[76,17,77,17,"action"],[76,23,77,23],[76,24,77,24,"target"],[76,30,77,30],[76,35,77,35],[76,43,77,43],[76,47,77,47,"action"],[76,53,77,53],[76,54,77,54,"target"],[76,60,77,60],[76,65,77,65,"state"],[76,70,77,70],[76,71,77,71,"key"],[76,74,77,74],[76,76,77,76],[77,8,78,8],[77,12,78,12,"result"],[77,18,78,18],[77,21,78,21,"router"],[77,27,78,27],[77,28,78,28,"getStateForAction"],[77,45,78,45],[77,46,79,10,"state"],[77,51,79,15],[77,53,80,10,"action"],[77,59,80,16],[77,61,81,10,"routerConfigOptionsRef"],[77,83,81,32],[77,84,81,33,"current"],[77,91,82,8],[77,92,82,9],[79,8,84,8],[80,8,85,8],[81,8,86,8,"result"],[81,14,86,14],[81,17,87,10,"result"],[81,23,87,16],[81,28,87,21],[81,32,87,25],[81,36,87,29,"action"],[81,42,87,35],[81,43,87,36,"target"],[81,49,87,42],[81,54,87,47,"state"],[81,59,87,52],[81,60,87,53,"key"],[81,63,87,56],[81,66,87,59,"state"],[81,71,87,64],[81,74,87,67,"result"],[81,80,87,73],[82,8,89,8],[82,12,89,12,"result"],[82,18,89,18],[82,23,89,23],[82,27,89,27],[82,29,89,29],[83,10,90,10,"onDispatchAction"],[83,26,90,26],[83,27,90,27,"action"],[83,33,90,33],[83,35,90,35,"state"],[83,40,90,40],[83,45,90,45,"result"],[83,51,90,51],[83,52,90,52],[84,10,92,10],[84,14,92,14,"state"],[84,19,92,19],[84,24,92,24,"result"],[84,30,92,30],[84,32,92,32],[85,12,93,12],[85,16,93,18,"isPrevented"],[85,27,93,29],[85,30,93,32],[85,34,93,32,"shouldPreventRemove"],[85,53,93,51],[85,54,93,51,"shouldPreventRemove"],[85,73,93,51],[85,75,94,14,"emitter"],[85,82,94,21],[85,84,95,14,"beforeRemoveListeners"],[85,105,95,35],[85,107,96,14,"state"],[85,112,96,19],[85,113,96,20,"routes"],[85,119,96,26],[85,121,97,14,"result"],[85,127,97,20],[85,128,97,21,"routes"],[85,134,97,27],[85,136,98,14,"action"],[85,142,99,12],[85,143,99,13],[86,12,101,12],[86,16,101,16,"isPrevented"],[86,27,101,27],[86,29,101,29],[87,14,102,14],[87,21,102,21],[87,25,102,25],[88,12,103,12],[89,12,105,12,"setState"],[89,20,105,20],[89,21,105,21,"result"],[89,27,105,27],[89,28,105,28],[90,10,106,10],[91,10,108,10],[91,14,108,14,"onRouteFocusParent"],[91,32,108,32],[91,37,108,37,"undefined"],[91,46,108,46],[91,48,108,48],[92,12,109,12],[93,12,110,12],[94,12,111,12],[94,16,111,18,"shouldFocus"],[94,27,111,29],[94,30,111,32,"router"],[94,36,111,38],[94,37,111,39,"shouldActionChangeFocus"],[94,60,111,62],[94,61,111,63,"action"],[94,67,111,69],[94,68,111,70],[95,12,113,12],[95,16,113,16,"shouldFocus"],[95,27,113,27],[95,31,113,31,"key"],[95,34,113,34],[95,39,113,39,"undefined"],[95,48,113,48],[95,50,113,50],[96,14,114,14,"onRouteFocusParent"],[96,32,114,32],[96,33,114,33,"key"],[96,36,114,36],[96,37,114,37],[97,12,115,12],[98,10,116,10],[99,10,118,10],[99,17,118,17],[99,21,118,21],[100,8,119,8],[101,6,120,6],[102,6,122,6],[102,10,122,10,"onActionParent"],[102,24,122,24],[102,29,122,29,"undefined"],[102,38,122,38],[102,40,122,40],[103,8,123,8],[104,8,124,8],[104,12,124,12,"onActionParent"],[104,26,124,26],[104,27,124,27,"action"],[104,33,124,33],[104,35,124,35,"visitedNavigators"],[104,52,124,52],[104,53,124,53],[104,55,124,55],[105,10,125,10],[105,17,125,17],[105,21,125,21],[106,8,126,8],[107,6,127,6],[109,6,129,6],[110,6,130,6],[110,11,130,11],[110,15,130,15,"i"],[110,16,130,16],[110,19,130,19,"actionListeners"],[110,34,130,34],[110,35,130,35,"length"],[110,41,130,41],[110,44,130,44],[110,45,130,45],[110,47,130,47,"i"],[110,48,130,48],[110,52,130,52],[110,53,130,53],[110,55,130,55,"i"],[110,56,130,56],[110,58,130,58],[110,60,130,60],[111,8,131,8],[111,12,131,14,"listener"],[111,20,131,22],[111,23,131,25,"actionListeners"],[111,38,131,40],[111,39,131,41,"i"],[111,40,131,42],[111,41,131,43],[112,8,133,8],[112,12,133,12,"listener"],[112,20,133,20],[112,21,133,21,"action"],[112,27,133,27],[112,29,133,29,"visitedNavigators"],[112,46,133,46],[112,47,133,47],[112,49,133,49],[113,10,134,10],[113,17,134,17],[113,21,134,21],[114,8,135,8],[115,6,136,6],[116,6,138,6],[116,13,138,13],[116,18,138,18],[117,4,139,4],[117,5,139,5],[117,7,140,4],[117,8,141,6,"actionListeners"],[117,23,141,21],[117,25,142,6,"beforeRemoveListeners"],[117,46,142,27],[117,48,143,6,"emitter"],[117,55,143,13],[117,57,144,6,"getState"],[117,65,144,14],[117,67,145,6,"key"],[117,70,145,9],[117,72,146,6,"onActionParent"],[117,86,146,20],[117,88,147,6,"onDispatchAction"],[117,104,147,22],[117,106,148,6,"onRouteFocusParent"],[117,124,148,24],[117,126,149,6,"router"],[117,132,149,12],[117,134,150,6,"setState"],[117,142,150,14],[117,143,152,2],[117,144,152,3],[118,4,154,2],[118,8,154,2,"useOnPreventRemove"],[118,26,154,20],[118,27,154,20,"default"],[118,34,154,20],[118,36,154,21],[119,6,155,4,"getState"],[119,14,155,12],[120,6,156,4,"emitter"],[120,13,156,11],[121,6,157,4,"beforeRemoveListeners"],[122,4,158,2],[122,5,158,3],[122,6,158,4],[123,4,160,2,"React"],[123,9,160,7],[123,10,160,8,"useEffect"],[123,19,160,17],[123,20,161,4],[123,26,161,10,"addListenerParent"],[123,43,161,27],[123,46,161,30],[123,54,161,38],[123,56,161,40,"onAction"],[123,64,161,48],[123,65,161,49],[123,67,162,4],[123,68,162,5,"addListenerParent"],[123,85,162,22],[123,87,162,24,"onAction"],[123,95,162,32],[123,96,163,2],[123,97,163,3],[124,4,165,2],[124,11,165,9,"onAction"],[124,19,165,17],[125,2,166,0],[126,0,166,1],[126,3]],"functionMap":{"names":["<global>","useOnAction","React.useEffect$argument_0","onAction"],"mappings":"AAA;eCqC;kBCoB;GDE;IEG;KF4E;ICsB,6CD;CDK"},"hasCjsExports":false},"type":"js/module"}]}