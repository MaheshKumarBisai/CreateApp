{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"./VirtualizeUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0},"end":{"line":13,"column":70}}],"key":"WkNMKgqK4aOdBxtaLg+KYSUiZ0s=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":34}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return ListMetricsAggregator;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _VirtualizeUtils = require(_dependencyMap[2], \"./VirtualizeUtils\");\n  var _invariant = require(_dependencyMap[3], \"invariant\");\n  var invariant = _interopDefault(_invariant);\n  var ListMetricsAggregator = /*#__PURE__*/function () {\n    function ListMetricsAggregator() {\n      (0, _classCallCheck.default)(this, ListMetricsAggregator);\n      this._averageCellLength = 0;\n      this._cellMetrics = new Map();\n      this._highestMeasuredCellIndex = 0;\n      this._measuredCellsLength = 0;\n      this._measuredCellsCount = 0;\n      this._orientation = {\n        horizontal: false,\n        rtl: false\n      };\n    }\n    return (0, _createClass.default)(ListMetricsAggregator, [{\n      key: \"notifyCellLayout\",\n      value: function notifyCellLayout(_ref) {\n        var cellIndex = _ref.cellIndex,\n          cellKey = _ref.cellKey,\n          orientation = _ref.orientation,\n          layout = _ref.layout;\n        this._invalidateIfOrientationChanged(orientation);\n        var next = {\n          index: cellIndex,\n          length: this._selectLength(layout),\n          isMounted: true,\n          offset: this.flowRelativeOffset(layout)\n        };\n        var curr = this._cellMetrics.get(cellKey);\n        if (!curr || next.offset !== curr.offset || next.length !== curr.length) {\n          if (curr) {\n            var dLength = next.length - curr.length;\n            this._measuredCellsLength += dLength;\n          } else {\n            this._measuredCellsLength += next.length;\n            this._measuredCellsCount += 1;\n          }\n          this._averageCellLength = this._measuredCellsLength / this._measuredCellsCount;\n          this._cellMetrics.set(cellKey, next);\n          this._highestMeasuredCellIndex = Math.max(this._highestMeasuredCellIndex, cellIndex);\n          return true;\n        } else {\n          curr.isMounted = true;\n          return false;\n        }\n      }\n    }, {\n      key: \"notifyCellUnmounted\",\n      value: function notifyCellUnmounted(cellKey) {\n        var curr = this._cellMetrics.get(cellKey);\n        if (curr) {\n          curr.isMounted = false;\n        }\n      }\n    }, {\n      key: \"notifyListContentLayout\",\n      value: function notifyListContentLayout(_ref2) {\n        var orientation = _ref2.orientation,\n          layout = _ref2.layout;\n        this._invalidateIfOrientationChanged(orientation);\n        this._contentLength = this._selectLength(layout);\n      }\n    }, {\n      key: \"getAverageCellLength\",\n      value: function getAverageCellLength() {\n        return this._averageCellLength;\n      }\n    }, {\n      key: \"getHighestMeasuredCellIndex\",\n      value: function getHighestMeasuredCellIndex() {\n        return this._highestMeasuredCellIndex;\n      }\n    }, {\n      key: \"getCellMetricsApprox\",\n      value: function getCellMetricsApprox(index, props) {\n        var frame = this.getCellMetrics(index, props);\n        if (frame && frame.index === index) {\n          return frame;\n        } else {\n          var data = props.data,\n            getItemCount = props.getItemCount;\n          (0, invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n          return {\n            length: this._averageCellLength,\n            offset: this._averageCellLength * index,\n            index,\n            isMounted: false\n          };\n        }\n      }\n    }, {\n      key: \"getCellMetrics\",\n      value: function getCellMetrics(index, props) {\n        var data = props.data,\n          getItem = props.getItem,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        (0, invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get metrics for out of range cell index ' + index);\n        var keyExtractor = props.keyExtractor ?? _VirtualizeUtils.keyExtractor;\n        var frame = this._cellMetrics.get(keyExtractor(getItem(data, index), index));\n        if (frame && frame.index === index) {\n          return frame;\n        }\n        if (getItemLayout) {\n          var _getItemLayout = getItemLayout(data, index),\n            length = _getItemLayout.length,\n            offset = _getItemLayout.offset;\n          return {\n            index,\n            length,\n            offset,\n            isMounted: true\n          };\n        }\n        return null;\n      }\n    }, {\n      key: \"getCellOffsetApprox\",\n      value: function getCellOffsetApprox(index, props) {\n        if (Number.isInteger(index)) {\n          return this.getCellMetricsApprox(index, props).offset;\n        } else {\n          var frameMetrics = this.getCellMetricsApprox(Math.floor(index), props);\n          var remainder = index - Math.floor(index);\n          return frameMetrics.offset + remainder * frameMetrics.length;\n        }\n      }\n    }, {\n      key: \"getContentLength\",\n      value: function getContentLength() {\n        return this._contentLength ?? 0;\n      }\n    }, {\n      key: \"hasContentLength\",\n      value: function hasContentLength() {\n        return this._contentLength != null;\n      }\n    }, {\n      key: \"flowRelativeOffset\",\n      value: function flowRelativeOffset(layout, referenceContentLength) {\n        var _this$_orientation = this._orientation,\n          horizontal = _this$_orientation.horizontal,\n          rtl = _this$_orientation.rtl;\n        if (horizontal && rtl) {\n          var contentLength = referenceContentLength ?? this._contentLength;\n          (0, invariant.default)(contentLength != null, 'ListMetricsAggregator must be notified of list content layout before resolving offsets');\n          return contentLength - (this._selectOffset(layout) + this._selectLength(layout));\n        } else {\n          return this._selectOffset(layout);\n        }\n      }\n    }, {\n      key: \"cartesianOffset\",\n      value: function cartesianOffset(flowRelativeOffset) {\n        var _this$_orientation2 = this._orientation,\n          horizontal = _this$_orientation2.horizontal,\n          rtl = _this$_orientation2.rtl;\n        if (horizontal && rtl) {\n          (0, invariant.default)(this._contentLength != null, 'ListMetricsAggregator must be notified of list content layout before resolving offsets');\n          return this._contentLength - flowRelativeOffset;\n        } else {\n          return flowRelativeOffset;\n        }\n      }\n    }, {\n      key: \"_invalidateIfOrientationChanged\",\n      value: function _invalidateIfOrientationChanged(orientation) {\n        if (orientation.rtl !== this._orientation.rtl) {\n          this._cellMetrics.clear();\n        }\n        if (orientation.horizontal !== this._orientation.horizontal) {\n          this._averageCellLength = 0;\n          this._highestMeasuredCellIndex = 0;\n          this._measuredCellsLength = 0;\n          this._measuredCellsCount = 0;\n        }\n        this._orientation = orientation;\n      }\n    }, {\n      key: \"_selectLength\",\n      value: function _selectLength(_ref3) {\n        var width = _ref3.width,\n          height = _ref3.height;\n        return this._orientation.horizontal ? width : height;\n      }\n    }, {\n      key: \"_selectOffset\",\n      value: function _selectOffset(_ref4) {\n        var x = _ref4.x,\n          y = _ref4.y;\n        return this._orientation.horizontal ? x : y;\n      }\n    }]);\n  }();\n});","lineCount":218,"map":[[15,13,59,21,"ListMetricsAggregator"],[15,34,59,42],[16,4,59,42],[17,2,59,42],[18,2,59,42],[18,6,59,42,"_babelRuntimeHelpersClassCallCheck"],[18,40,59,42],[18,43,59,42,"require"],[18,50,59,42],[18,51,59,42,"_dependencyMap"],[18,65,59,42],[19,2,59,42],[19,6,59,42,"_classCallCheck"],[19,21,59,42],[19,24,59,42,"_interopDefault"],[19,39,59,42],[19,40,59,42,"_babelRuntimeHelpersClassCallCheck"],[19,74,59,42],[20,2,59,42],[20,6,59,42,"_babelRuntimeHelpersCreateClass"],[20,37,59,42],[20,40,59,42,"require"],[20,47,59,42],[20,48,59,42,"_dependencyMap"],[20,62,59,42],[21,2,59,42],[21,6,59,42,"_createClass"],[21,18,59,42],[21,21,59,42,"_interopDefault"],[21,36,59,42],[21,37,59,42,"_babelRuntimeHelpersCreateClass"],[21,68,59,42],[22,2,13,0],[22,6,13,0,"_VirtualizeUtils"],[22,22,13,0],[22,25,13,0,"require"],[22,32,13,0],[22,33,13,0,"_dependencyMap"],[22,47,13,0],[23,2,15,0],[23,6,15,0,"_invariant"],[23,16,15,0],[23,19,15,0,"require"],[23,26,15,0],[23,27,15,0,"_dependencyMap"],[23,41,15,0],[24,2,15,0],[24,6,15,0,"invariant"],[24,15,15,0],[24,18,15,0,"_interopDefault"],[24,33,15,0],[24,34,15,0,"_invariant"],[24,44,15,0],[25,2,15,34],[25,6,59,21,"ListMetricsAggregator"],[25,27,59,42],[26,4,59,42],[26,13,59,42,"ListMetricsAggregator"],[26,35,59,42],[27,6,59,42],[27,10,59,42,"_classCallCheck"],[27,25,59,42],[27,26,59,42,"default"],[27,33,59,42],[27,41,59,42,"ListMetricsAggregator"],[27,62,59,42],[28,6,59,42],[28,11,60,2,"_averageCellLength"],[28,29,60,20],[28,32,60,23],[28,33,60,24],[29,6,60,24],[29,11,61,2,"_cellMetrics"],[29,23,61,14],[29,26,61,43],[29,30,61,47,"Map"],[29,33,61,50],[29,34,61,51],[29,35,61,52],[30,6,61,52],[30,11,63,2,"_highestMeasuredCellIndex"],[30,36,63,27],[30,39,63,30],[30,40,63,31],[31,6,63,31],[31,11,64,2,"_measuredCellsLength"],[31,31,64,22],[31,34,64,25],[31,35,64,26],[32,6,64,26],[32,11,65,2,"_measuredCellsCount"],[32,30,65,21],[32,33,65,24],[32,34,65,25],[33,6,65,25],[33,11,66,2,"_orientation"],[33,23,66,14],[33,26,66,34],[34,8,67,4,"horizontal"],[34,18,67,14],[34,20,67,16],[34,25,67,21],[35,8,68,4,"rtl"],[35,11,68,7],[35,13,68,9],[36,6,69,2],[36,7,69,3],[37,4,69,3],[38,4,69,3],[38,15,69,3,"_createClass"],[38,27,69,3],[38,28,69,3,"default"],[38,35,69,3],[38,37,69,3,"ListMetricsAggregator"],[38,58,69,3],[39,6,69,3,"key"],[39,9,69,3],[40,6,69,3,"value"],[40,11,69,3],[40,13,76,2],[40,22,76,2,"notifyCellLayout"],[40,38,76,18,"notifyCellLayout"],[40,39,76,18,"_ref"],[40,43,76,18],[40,45,86,14],[41,8,86,14],[41,12,77,4,"cellIndex"],[41,21,77,13],[41,24,77,13,"_ref"],[41,28,77,13],[41,29,77,4,"cellIndex"],[41,38,77,13],[42,10,78,4,"cellKey"],[42,17,78,11],[42,20,78,11,"_ref"],[42,24,78,11],[42,25,78,4,"cellKey"],[42,32,78,11],[43,10,79,4,"orientation"],[43,21,79,15],[43,24,79,15,"_ref"],[43,28,79,15],[43,29,79,4,"orientation"],[43,40,79,15],[44,10,80,4,"layout"],[44,16,80,10],[44,19,80,10,"_ref"],[44,23,80,10],[44,24,80,4,"layout"],[44,30,80,10],[45,8,87,4],[45,12,87,8],[45,13,87,9,"_invalidateIfOrientationChanged"],[45,44,87,40],[45,45,87,41,"orientation"],[45,56,87,52],[45,57,87,53],[46,8,89,4],[46,12,89,10,"next"],[46,16,89,27],[46,19,89,30],[47,10,90,6,"index"],[47,15,90,11],[47,17,90,13,"cellIndex"],[47,26,90,22],[48,10,91,6,"length"],[48,16,91,12],[48,18,91,14],[48,22,91,18],[48,23,91,19,"_selectLength"],[48,36,91,32],[48,37,91,33,"layout"],[48,43,91,39],[48,44,91,40],[49,10,92,6,"isMounted"],[49,19,92,15],[49,21,92,17],[49,25,92,21],[50,10,93,6,"offset"],[50,16,93,12],[50,18,93,14],[50,22,93,18],[50,23,93,19,"flowRelativeOffset"],[50,41,93,37],[50,42,93,38,"layout"],[50,48,93,44],[51,8,94,4],[51,9,94,5],[52,8,95,4],[52,12,95,10,"curr"],[52,16,95,14],[52,19,95,17],[52,23,95,21],[52,24,95,22,"_cellMetrics"],[52,36,95,34],[52,37,95,35,"get"],[52,40,95,38],[52,41,95,39,"cellKey"],[52,48,95,46],[52,49,95,47],[53,8,97,4],[53,12,97,8],[53,13,97,9,"curr"],[53,17,97,13],[53,21,97,17,"next"],[53,25,97,21],[53,26,97,22,"offset"],[53,32,97,28],[53,37,97,33,"curr"],[53,41,97,37],[53,42,97,38,"offset"],[53,48,97,44],[53,52,97,48,"next"],[53,56,97,52],[53,57,97,53,"length"],[53,63,97,59],[53,68,97,64,"curr"],[53,72,97,68],[53,73,97,69,"length"],[53,79,97,75],[53,81,97,77],[54,10,98,6],[54,14,98,10,"curr"],[54,18,98,14],[54,20,98,16],[55,12,99,8],[55,16,99,14,"dLength"],[55,23,99,21],[55,26,99,24,"next"],[55,30,99,28],[55,31,99,29,"length"],[55,37,99,35],[55,40,99,38,"curr"],[55,44,99,42],[55,45,99,43,"length"],[55,51,99,49],[56,12,100,8],[56,16,100,12],[56,17,100,13,"_measuredCellsLength"],[56,37,100,33],[56,41,100,37,"dLength"],[56,48,100,44],[57,10,101,6],[57,11,101,7],[57,17,101,13],[58,12,102,8],[58,16,102,12],[58,17,102,13,"_measuredCellsLength"],[58,37,102,33],[58,41,102,37,"next"],[58,45,102,41],[58,46,102,42,"length"],[58,52,102,48],[59,12,103,8],[59,16,103,12],[59,17,103,13,"_measuredCellsCount"],[59,36,103,32],[59,40,103,36],[59,41,103,37],[60,10,104,6],[61,10,106,6],[61,14,106,10],[61,15,106,11,"_averageCellLength"],[61,33,106,29],[61,36,107,8],[61,40,107,12],[61,41,107,13,"_measuredCellsLength"],[61,61,107,33],[61,64,107,36],[61,68,107,40],[61,69,107,41,"_measuredCellsCount"],[61,88,107,60],[62,10,108,6],[62,14,108,10],[62,15,108,11,"_cellMetrics"],[62,27,108,23],[62,28,108,24,"set"],[62,31,108,27],[62,32,108,28,"cellKey"],[62,39,108,35],[62,41,108,37,"next"],[62,45,108,41],[62,46,108,42],[63,10,109,6],[63,14,109,10],[63,15,109,11,"_highestMeasuredCellIndex"],[63,40,109,36],[63,43,109,39,"Math"],[63,47,109,43],[63,48,109,44,"max"],[63,51,109,47],[63,52,110,8],[63,56,110,12],[63,57,110,13,"_highestMeasuredCellIndex"],[63,82,110,38],[63,84,111,8,"cellIndex"],[63,93,112,6],[63,94,112,7],[64,10,113,6],[64,17,113,13],[64,21,113,17],[65,8,114,4],[65,9,114,5],[65,15,114,11],[66,10,115,6,"curr"],[66,14,115,10],[66,15,115,11,"isMounted"],[66,24,115,20],[66,27,115,23],[66,31,115,27],[67,10,116,6],[67,17,116,13],[67,22,116,18],[68,8,117,4],[69,6,118,2],[70,4,118,3],[71,6,118,3,"key"],[71,9,118,3],[72,6,118,3,"value"],[72,11,118,3],[72,13,123,2],[72,22,123,2,"notifyCellUnmounted"],[72,41,123,21,"notifyCellUnmounted"],[72,42,123,22,"cellKey"],[72,49,123,37],[72,51,123,45],[73,8,124,4],[73,12,124,10,"curr"],[73,16,124,14],[73,19,124,17],[73,23,124,21],[73,24,124,22,"_cellMetrics"],[73,36,124,34],[73,37,124,35,"get"],[73,40,124,38],[73,41,124,39,"cellKey"],[73,48,124,46],[73,49,124,47],[74,8,125,4],[74,12,125,8,"curr"],[74,16,125,12],[74,18,125,14],[75,10,126,6,"curr"],[75,14,126,10],[75,15,126,11,"isMounted"],[75,24,126,20],[75,27,126,23],[75,32,126,28],[76,8,127,4],[77,6,128,2],[78,4,128,3],[79,6,128,3,"key"],[79,9,128,3],[80,6,128,3,"value"],[80,11,128,3],[80,13,133,2],[80,22,133,2,"notifyListContentLayout"],[80,45,133,25,"notifyListContentLayout"],[80,46,133,25,"_ref2"],[80,51,133,25],[80,53,139,11],[81,8,139,11],[81,12,134,4,"orientation"],[81,23,134,15],[81,26,134,15,"_ref2"],[81,31,134,15],[81,32,134,4,"orientation"],[81,43,134,15],[82,10,135,4,"layout"],[82,16,135,10],[82,19,135,10,"_ref2"],[82,24,135,10],[82,25,135,4,"layout"],[82,31,135,10],[83,8,140,4],[83,12,140,8],[83,13,140,9,"_invalidateIfOrientationChanged"],[83,44,140,40],[83,45,140,41,"orientation"],[83,56,140,52],[83,57,140,53],[84,8,141,4],[84,12,141,8],[84,13,141,9,"_contentLength"],[84,27,141,23],[84,30,141,26],[84,34,141,30],[84,35,141,31,"_selectLength"],[84,48,141,44],[84,49,141,45,"layout"],[84,55,141,51],[84,56,141,52],[85,6,142,2],[86,4,142,3],[87,6,142,3,"key"],[87,9,142,3],[88,6,142,3,"value"],[88,11,142,3],[88,13,147,2],[88,22,147,2,"getAverageCellLength"],[88,42,147,22,"getAverageCellLength"],[88,43,147,22],[88,45,147,33],[89,8,148,4],[89,15,148,11],[89,19,148,15],[89,20,148,16,"_averageCellLength"],[89,38,148,34],[90,6,149,2],[91,4,149,3],[92,6,149,3,"key"],[92,9,149,3],[93,6,149,3,"value"],[93,11,149,3],[93,13,155,2],[93,22,155,2,"getHighestMeasuredCellIndex"],[93,49,155,29,"getHighestMeasuredCellIndex"],[93,50,155,29],[93,52,155,40],[94,8,156,4],[94,15,156,11],[94,19,156,15],[94,20,156,16,"_highestMeasuredCellIndex"],[94,45,156,41],[95,6,157,2],[96,4,157,3],[97,6,157,3,"key"],[97,9,157,3],[98,6,157,3,"value"],[98,11,157,3],[98,13,164,2],[98,22,164,2,"getCellMetricsApprox"],[98,42,164,22,"getCellMetricsApprox"],[98,43,164,23,"index"],[98,48,164,36],[98,50,164,38,"props"],[98,55,164,60],[98,57,164,75],[99,8,165,4],[99,12,165,10,"frame"],[99,17,165,15],[99,20,165,18],[99,24,165,22],[99,25,165,23,"getCellMetrics"],[99,39,165,37],[99,40,165,38,"index"],[99,45,165,43],[99,47,165,45,"props"],[99,52,165,50],[99,53,165,51],[100,8,166,4],[100,12,166,8,"frame"],[100,17,166,13],[100,21,166,17,"frame"],[100,26,166,22],[100,27,166,23,"index"],[100,32,166,28],[100,37,166,33,"index"],[100,42,166,38],[100,44,166,40],[101,10,168,6],[101,17,168,13,"frame"],[101,22,168,18],[102,8,169,4],[102,9,169,5],[102,15,169,11],[103,10,170,6],[103,14,170,13,"data"],[103,18,170,17],[103,21,170,35,"props"],[103,26,170,40],[103,27,170,13,"data"],[103,31,170,17],[104,12,170,19,"getItemCount"],[104,24,170,31],[104,27,170,35,"props"],[104,32,170,40],[104,33,170,19,"getItemCount"],[104,45,170,31],[105,10,171,6],[105,14,171,6,"invariant"],[105,23,171,15],[105,24,171,15,"default"],[105,31,171,15],[105,33,172,8,"index"],[105,38,172,13],[105,42,172,17],[105,43,172,18],[105,47,172,22,"index"],[105,52,172,27],[105,55,172,30,"getItemCount"],[105,67,172,42],[105,68,172,43,"data"],[105,72,172,47],[105,73,172,48],[105,75,173,8],[105,119,173,52],[105,122,173,55,"index"],[105,127,174,6],[105,128,174,7],[106,10,175,6],[106,17,175,13],[107,12,176,8,"length"],[107,18,176,14],[107,20,176,16],[107,24,176,20],[107,25,176,21,"_averageCellLength"],[107,43,176,39],[108,12,177,8,"offset"],[108,18,177,14],[108,20,177,16],[108,24,177,20],[108,25,177,21,"_averageCellLength"],[108,43,177,39],[108,46,177,42,"index"],[108,51,177,47],[109,12,178,8,"index"],[109,17,178,13],[110,12,179,8,"isMounted"],[110,21,179,17],[110,23,179,19],[111,10,180,6],[111,11,180,7],[112,8,181,4],[113,6,182,2],[114,4,182,3],[115,6,182,3,"key"],[115,9,182,3],[116,6,182,3,"value"],[116,11,182,3],[116,13,187,2],[116,22,187,2,"getCellMetrics"],[116,36,187,16,"getCellMetrics"],[116,37,187,17,"index"],[116,42,187,30],[116,44,187,32,"props"],[116,49,187,54],[116,51,187,70],[117,8,188,4],[117,12,188,11,"data"],[117,16,188,15],[117,19,188,57,"props"],[117,24,188,62],[117,25,188,11,"data"],[117,29,188,15],[118,10,188,17,"getItem"],[118,17,188,24],[118,20,188,57,"props"],[118,25,188,62],[118,26,188,17,"getItem"],[118,33,188,24],[119,10,188,26,"getItemCount"],[119,22,188,38],[119,25,188,57,"props"],[119,30,188,62],[119,31,188,26,"getItemCount"],[119,43,188,38],[120,10,188,40,"getItemLayout"],[120,23,188,53],[120,26,188,57,"props"],[120,31,188,62],[120,32,188,40,"getItemLayout"],[120,45,188,53],[121,8,189,4],[121,12,189,4,"invariant"],[121,21,189,13],[121,22,189,13,"default"],[121,29,189,13],[121,31,190,6,"index"],[121,36,190,11],[121,40,190,15],[121,41,190,16],[121,45,190,20,"index"],[121,50,190,25],[121,53,190,28,"getItemCount"],[121,65,190,40],[121,66,190,41,"data"],[121,70,190,45],[121,71,190,46],[121,73,191,6],[121,124,191,57],[121,127,191,60,"index"],[121,132,192,4],[121,133,192,5],[122,8,193,4],[122,12,193,10,"keyExtractor"],[122,24,193,22],[122,27,193,25,"props"],[122,32,193,30],[122,33,193,31,"keyExtractor"],[122,45,193,43],[122,49,193,47,"defaultKeyExtractor"],[122,65,193,66],[122,66,193,66,"keyExtractor"],[122,78,193,66],[123,8,194,4],[123,12,194,10,"frame"],[123,17,194,15],[123,20,194,18],[123,24,194,22],[123,25,194,23,"_cellMetrics"],[123,37,194,35],[123,38,194,36,"get"],[123,41,194,39],[123,42,195,6,"keyExtractor"],[123,54,195,18],[123,55,195,19,"getItem"],[123,62,195,26],[123,63,195,27,"data"],[123,67,195,31],[123,69,195,33,"index"],[123,74,195,38],[123,75,195,39],[123,77,195,41,"index"],[123,82,195,46],[123,83,196,4],[123,84,196,5],[124,8,197,4],[124,12,197,8,"frame"],[124,17,197,13],[124,21,197,17,"frame"],[124,26,197,22],[124,27,197,23,"index"],[124,32,197,28],[124,37,197,33,"index"],[124,42,197,38],[124,44,197,40],[125,10,198,6],[125,17,198,13,"frame"],[125,22,198,18],[126,8,199,4],[127,8,201,4],[127,12,201,8,"getItemLayout"],[127,25,201,21],[127,27,201,23],[128,10,202,6],[128,14,202,6,"_getItemLayout"],[128,28,202,6],[128,31,202,31,"getItemLayout"],[128,44,202,44],[128,45,202,45,"data"],[128,49,202,49],[128,51,202,51,"index"],[128,56,202,56],[128,57,202,57],[129,12,202,13,"length"],[129,18,202,19],[129,21,202,19,"_getItemLayout"],[129,35,202,19],[129,36,202,13,"length"],[129,42,202,19],[130,12,202,21,"offset"],[130,18,202,27],[130,21,202,27,"_getItemLayout"],[130,35,202,27],[130,36,202,21,"offset"],[130,42,202,27],[131,10,205,6],[131,17,205,13],[132,12,205,14,"index"],[132,17,205,19],[133,12,205,21,"length"],[133,18,205,27],[134,12,205,29,"offset"],[134,18,205,35],[135,12,205,37,"isMounted"],[135,21,205,46],[135,23,205,48],[136,10,205,52],[136,11,205,53],[137,8,206,4],[138,8,208,4],[138,15,208,11],[138,19,208,15],[139,6,209,2],[140,4,209,3],[141,6,209,3,"key"],[141,9,209,3],[142,6,209,3,"value"],[142,11,209,3],[142,13,215,2],[142,22,215,2,"getCellOffsetApprox"],[142,41,215,21,"getCellOffsetApprox"],[142,42,215,22,"index"],[142,47,215,35],[142,49,215,37,"props"],[142,54,215,59],[142,56,215,69],[143,8,216,4],[143,12,216,8,"Number"],[143,18,216,14],[143,19,216,15,"isInteger"],[143,28,216,24],[143,29,216,25,"index"],[143,34,216,30],[143,35,216,31],[143,37,216,33],[144,10,217,6],[144,17,217,13],[144,21,217,17],[144,22,217,18,"getCellMetricsApprox"],[144,42,217,38],[144,43,217,39,"index"],[144,48,217,44],[144,50,217,46,"props"],[144,55,217,51],[144,56,217,52],[144,57,217,53,"offset"],[144,63,217,59],[145,8,218,4],[145,9,218,5],[145,15,218,11],[146,10,219,6],[146,14,219,12,"frameMetrics"],[146,26,219,24],[146,29,219,27],[146,33,219,31],[146,34,219,32,"getCellMetricsApprox"],[146,54,219,52],[146,55,219,53,"Math"],[146,59,219,57],[146,60,219,58,"floor"],[146,65,219,63],[146,66,219,64,"index"],[146,71,219,69],[146,72,219,70],[146,74,219,72,"props"],[146,79,219,77],[146,80,219,78],[147,10,220,6],[147,14,220,12,"remainder"],[147,23,220,21],[147,26,220,24,"index"],[147,31,220,29],[147,34,220,32,"Math"],[147,38,220,36],[147,39,220,37,"floor"],[147,44,220,42],[147,45,220,43,"index"],[147,50,220,48],[147,51,220,49],[148,10,221,6],[148,17,221,13,"frameMetrics"],[148,29,221,25],[148,30,221,26,"offset"],[148,36,221,32],[148,39,221,35,"remainder"],[148,48,221,44],[148,51,221,47,"frameMetrics"],[148,63,221,59],[148,64,221,60,"length"],[148,70,221,66],[149,8,222,4],[150,6,223,2],[151,4,223,3],[152,6,223,3,"key"],[152,9,223,3],[153,6,223,3,"value"],[153,11,223,3],[153,13,228,2],[153,22,228,2,"getContentLength"],[153,38,228,18,"getContentLength"],[153,39,228,18],[153,41,228,29],[154,8,229,4],[154,15,229,11],[154,19,229,15],[154,20,229,16,"_contentLength"],[154,34,229,30],[154,38,229,34],[154,39,229,35],[155,6,230,2],[156,4,230,3],[157,6,230,3,"key"],[157,9,230,3],[158,6,230,3,"value"],[158,11,230,3],[158,13,235,2],[158,22,235,2,"hasContentLength"],[158,38,235,18,"hasContentLength"],[158,39,235,18],[158,41,235,30],[159,8,236,4],[159,15,236,11],[159,19,236,15],[159,20,236,16,"_contentLength"],[159,34,236,30],[159,38,236,34],[159,42,236,38],[160,6,237,2],[161,4,237,3],[162,6,237,3,"key"],[162,9,237,3],[163,6,237,3,"value"],[163,11,237,3],[163,13,243,2],[163,22,243,2,"flowRelativeOffset"],[163,40,243,20,"flowRelativeOffset"],[163,41,243,21,"layout"],[163,47,243,35],[163,49,243,37,"referenceContentLength"],[163,71,243,69],[163,73,243,79],[164,8,244,4],[164,12,244,4,"_this$_orientation"],[164,30,244,4],[164,33,244,30],[164,37,244,34],[164,38,244,35,"_orientation"],[164,50,244,47],[165,10,244,11,"horizontal"],[165,20,244,21],[165,23,244,21,"_this$_orientation"],[165,41,244,21],[165,42,244,11,"horizontal"],[165,52,244,21],[166,10,244,23,"rtl"],[166,13,244,26],[166,16,244,26,"_this$_orientation"],[166,34,244,26],[166,35,244,23,"rtl"],[166,38,244,26],[167,8,246,4],[167,12,246,8,"horizontal"],[167,22,246,18],[167,26,246,22,"rtl"],[167,29,246,25],[167,31,246,27],[168,10,247,6],[168,14,247,12,"contentLength"],[168,27,247,25],[168,30,247,28,"referenceContentLength"],[168,52,247,50],[168,56,247,54],[168,60,247,58],[168,61,247,59,"_contentLength"],[168,75,247,73],[169,10,248,6],[169,14,248,6,"invariant"],[169,23,248,15],[169,24,248,15,"default"],[169,31,248,15],[169,33,249,8,"contentLength"],[169,46,249,21],[169,50,249,25],[169,54,249,29],[169,56,250,8],[169,144,251,6],[169,145,251,7],[170,10,252,6],[170,17,253,8,"contentLength"],[170,30,253,21],[170,34,254,9],[170,38,254,13],[170,39,254,14,"_selectOffset"],[170,52,254,27],[170,53,254,28,"layout"],[170,59,254,34],[170,60,254,35],[170,63,254,38],[170,67,254,42],[170,68,254,43,"_selectLength"],[170,81,254,56],[170,82,254,57,"layout"],[170,88,254,63],[170,89,254,64],[170,90,254,65],[171,8,256,4],[171,9,256,5],[171,15,256,11],[172,10,257,6],[172,17,257,13],[172,21,257,17],[172,22,257,18,"_selectOffset"],[172,35,257,31],[172,36,257,32,"layout"],[172,42,257,38],[172,43,257,39],[173,8,258,4],[174,6,259,2],[175,4,259,3],[176,6,259,3,"key"],[176,9,259,3],[177,6,259,3,"value"],[177,11,259,3],[177,13,264,2],[177,22,264,2,"cartesianOffset"],[177,37,264,17,"cartesianOffset"],[177,38,264,18,"flowRelativeOffset"],[177,56,264,44],[177,58,264,54],[178,8,265,4],[178,12,265,4,"_this$_orientation2"],[178,31,265,4],[178,34,265,30],[178,38,265,34],[178,39,265,35,"_orientation"],[178,51,265,47],[179,10,265,11,"horizontal"],[179,20,265,21],[179,23,265,21,"_this$_orientation2"],[179,42,265,21],[179,43,265,11,"horizontal"],[179,53,265,21],[180,10,265,23,"rtl"],[180,13,265,26],[180,16,265,26,"_this$_orientation2"],[180,35,265,26],[180,36,265,23,"rtl"],[180,39,265,26],[181,8,267,4],[181,12,267,8,"horizontal"],[181,22,267,18],[181,26,267,22,"rtl"],[181,29,267,25],[181,31,267,27],[182,10,268,6],[182,14,268,6,"invariant"],[182,23,268,15],[182,24,268,15,"default"],[182,31,268,15],[182,33,269,8],[182,37,269,12],[182,38,269,13,"_contentLength"],[182,52,269,27],[182,56,269,31],[182,60,269,35],[182,62,270,8],[182,150,271,6],[182,151,271,7],[183,10,272,6],[183,17,272,13],[183,21,272,17],[183,22,272,18,"_contentLength"],[183,36,272,32],[183,39,272,35,"flowRelativeOffset"],[183,57,272,53],[184,8,273,4],[184,9,273,5],[184,15,273,11],[185,10,274,6],[185,17,274,13,"flowRelativeOffset"],[185,35,274,31],[186,8,275,4],[187,6,276,2],[188,4,276,3],[189,6,276,3,"key"],[189,9,276,3],[190,6,276,3,"value"],[190,11,276,3],[190,13,278,2],[190,22,278,2,"_invalidateIfOrientationChanged"],[190,53,278,33,"_invalidateIfOrientationChanged"],[190,54,278,34,"orientation"],[190,65,278,62],[190,67,278,70],[191,8,279,4],[191,12,279,8,"orientation"],[191,23,279,19],[191,24,279,20,"rtl"],[191,27,279,23],[191,32,279,28],[191,36,279,32],[191,37,279,33,"_orientation"],[191,49,279,45],[191,50,279,46,"rtl"],[191,53,279,49],[191,55,279,51],[192,10,280,6],[192,14,280,10],[192,15,280,11,"_cellMetrics"],[192,27,280,23],[192,28,280,24,"clear"],[192,33,280,29],[192,34,280,30],[192,35,280,31],[193,8,281,4],[194,8,283,4],[194,12,283,8,"orientation"],[194,23,283,19],[194,24,283,20,"horizontal"],[194,34,283,30],[194,39,283,35],[194,43,283,39],[194,44,283,40,"_orientation"],[194,56,283,52],[194,57,283,53,"horizontal"],[194,67,283,63],[194,69,283,65],[195,10,284,6],[195,14,284,10],[195,15,284,11,"_averageCellLength"],[195,33,284,29],[195,36,284,32],[195,37,284,33],[196,10,285,6],[196,14,285,10],[196,15,285,11,"_highestMeasuredCellIndex"],[196,40,285,36],[196,43,285,39],[196,44,285,40],[197,10,286,6],[197,14,286,10],[197,15,286,11,"_measuredCellsLength"],[197,35,286,31],[197,38,286,34],[197,39,286,35],[198,10,287,6],[198,14,287,10],[198,15,287,11,"_measuredCellsCount"],[198,34,287,30],[198,37,287,33],[198,38,287,34],[199,8,288,4],[200,8,290,4],[200,12,290,8],[200,13,290,9,"_orientation"],[200,25,290,21],[200,28,290,24,"orientation"],[200,39,290,35],[201,6,291,2],[202,4,291,3],[203,6,291,3,"key"],[203,9,291,3],[204,6,291,3,"value"],[204,11,291,3],[204,13,293,2],[204,22,293,2,"_selectLength"],[204,35,293,15,"_selectLength"],[204,36,293,15,"_ref3"],[204,41,293,15],[204,43,296,62],[205,8,296,62],[205,12,294,4,"width"],[205,17,294,9],[205,20,294,9,"_ref3"],[205,25,294,9],[205,26,294,4,"width"],[205,31,294,9],[206,10,295,4,"height"],[206,16,295,10],[206,19,295,10,"_ref3"],[206,24,295,10],[206,25,295,4,"height"],[206,31,295,10],[207,8,297,4],[207,15,297,11],[207,19,297,15],[207,20,297,16,"_orientation"],[207,32,297,28],[207,33,297,29,"horizontal"],[207,43,297,39],[207,46,297,42,"width"],[207,51,297,47],[207,54,297,50,"height"],[207,60,297,56],[208,6,298,2],[209,4,298,3],[210,6,298,3,"key"],[210,9,298,3],[211,6,298,3,"value"],[211,11,298,3],[211,13,300,2],[211,22,300,2,"_selectOffset"],[211,35,300,15,"_selectOffset"],[211,36,300,15,"_ref4"],[211,41,300,15],[211,43,300,72],[212,8,300,72],[212,12,300,17,"x"],[212,13,300,18],[212,16,300,18,"_ref4"],[212,21,300,18],[212,22,300,17,"x"],[212,23,300,18],[213,10,300,20,"y"],[213,11,300,21],[213,14,300,21,"_ref4"],[213,19,300,21],[213,20,300,20,"y"],[213,21,300,21],[214,8,301,4],[214,15,301,11],[214,19,301,15],[214,20,301,16,"_orientation"],[214,32,301,28],[214,33,301,29,"horizontal"],[214,43,301,39],[214,46,301,42,"x"],[214,47,301,43],[214,50,301,46,"y"],[214,51,301,47],[215,6,302,2],[216,4,302,3],[217,2,302,3],[218,0,302,3],[218,3]],"functionMap":{"names":["<global>","ListMetricsAggregator","notifyCellLayout","notifyCellUnmounted","notifyListContentLayout","getAverageCellLength","getHighestMeasuredCellIndex","getCellMetricsApprox","getCellMetrics","getCellOffsetApprox","getContentLength","hasContentLength","flowRelativeOffset","cartesianOffset","_invalidateIfOrientationChanged","_selectLength","_selectOffset"],"mappings":"AAA;eC0D;ECiB;GD0C;EEK;GFK;EGK;GHS;EIK;GJE;EKM;GLE;EMO;GNkB;EOK;GPsB;EQM;GRQ;ESK;GTE;EUK;GVE;EWM;GXgB;EYK;GZY;EaE;Gba;EcE;GdK;EeE;GfE"},"hasCjsExports":false},"type":"js/module"}]}