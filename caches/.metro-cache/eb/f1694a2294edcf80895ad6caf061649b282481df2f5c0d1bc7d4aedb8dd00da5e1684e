{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return validatePathConfig;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var formatToList = items => items.map(key => `- ${key}`).join('\\n');\n  function validatePathConfig(config) {\n    var root = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var validKeys = ['initialRouteName', 'screens'];\n    if (!root) {\n      validKeys.push('path', 'exact', 'stringify', 'parse');\n    }\n    var invalidKeys = Object.keys(config).filter(key => !validKeys.includes(key));\n    if (invalidKeys.length) {\n      throw new Error(`Found invalid properties in the configuration:\\n${formatToList(invalidKeys)}\\n\\nDid you forget to specify them under a 'screens' property?\\n\\nYou can only specify the following properties:\\n${formatToList(validKeys)}\\n\\nSee https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.`);\n    }\n    if (config.screens) {\n      Object.entries(config.screens).forEach(_ref => {\n        var _ref2 = (0, _slicedToArray.default)(_ref, 2),\n          _ = _ref2[0],\n          value = _ref2[1];\n        if (typeof value !== 'string') {\n          validatePathConfig(value, false);\n        }\n      });\n    }\n  }\n});","lineCount":42,"map":[[12,2,4,15,"Object"],[12,8,4,15],[12,9,4,15,"defineProperty"],[12,23,4,15],[12,24,4,15,"exports"],[12,31,4,15],[13,4,4,15,"enumerable"],[13,14,4,15],[14,4,4,15,"get"],[14,7,4,15],[14,18,4,15,"get"],[14,19,4,15],[15,6,4,15],[15,13,4,15,"validatePathConfig"],[15,31,4,15],[16,4,4,15],[17,2,4,15],[18,2,32,1],[18,6,32,1,"_babelRuntimeHelpersSlicedToArray"],[18,39,32,1],[18,42,32,1,"require"],[18,49,32,1],[18,50,32,1,"_dependencyMap"],[18,64,32,1],[19,2,32,1],[19,6,32,1,"_slicedToArray"],[19,20,32,1],[19,23,32,1,"_interopDefault"],[19,38,32,1],[19,39,32,1,"_babelRuntimeHelpersSlicedToArray"],[19,72,32,1],[20,2,1,0],[20,6,1,6,"formatToList"],[20,18,1,18],[20,21,1,22,"items"],[20,26,1,37],[20,30,2,2,"items"],[20,35,2,7],[20,36,2,8,"map"],[20,39,2,11],[20,40,2,13,"key"],[20,43,2,16],[20,47,2,21],[20,52,2,26,"key"],[20,55,2,29],[20,57,2,31],[20,58,2,32],[20,59,2,33,"join"],[20,63,2,37],[20,64,2,38],[20,68,2,42],[20,69,2,43],[21,2,4,15],[21,11,4,24,"validatePathConfig"],[21,29,4,42,"validatePathConfig"],[21,30,4,43,"config"],[21,36,4,54],[21,38,4,69],[22,4,4,69],[22,8,4,56,"root"],[22,12,4,60],[22,15,4,60,"arguments"],[22,24,4,60],[22,25,4,60,"length"],[22,31,4,60],[22,39,4,60,"arguments"],[22,48,4,60],[22,56,4,60,"undefined"],[22,65,4,60],[22,68,4,60,"arguments"],[22,77,4,60],[22,83,4,63],[22,87,4,67],[23,4,5,2],[23,8,5,8,"validKeys"],[23,17,5,17],[23,20,5,20],[23,21,5,21],[23,39,5,39],[23,41,5,41],[23,50,5,50],[23,51,5,51],[24,4,7,2],[24,8,7,6],[24,9,7,7,"root"],[24,13,7,11],[24,15,7,13],[25,6,8,4,"validKeys"],[25,15,8,13],[25,16,8,14,"push"],[25,20,8,18],[25,21,8,19],[25,27,8,25],[25,29,8,27],[25,36,8,34],[25,38,8,36],[25,49,8,47],[25,51,8,49],[25,58,8,56],[25,59,8,57],[26,4,9,2],[27,4,11,2],[27,8,11,8,"invalidKeys"],[27,19,11,19],[27,22,11,22,"Object"],[27,28,11,28],[27,29,11,29,"keys"],[27,33,11,33],[27,34,11,34,"config"],[27,40,11,40],[27,41,11,41],[27,42,11,42,"filter"],[27,48,11,48],[27,49,12,5,"key"],[27,52,12,8],[27,56,12,13],[27,57,12,14,"validKeys"],[27,66,12,23],[27,67,12,24,"includes"],[27,75,12,32],[27,76,12,33,"key"],[27,79,12,36],[27,80,13,2],[27,81,13,3],[28,4,15,2],[28,8,15,6,"invalidKeys"],[28,19,15,17],[28,20,15,18,"length"],[28,26,15,24],[28,28,15,26],[29,6,16,4],[29,12,16,10],[29,16,16,14,"Error"],[29,21,16,19],[29,22,17,6],[29,73,17,57,"formatToList"],[29,85,17,69],[29,86,18,8,"invalidKeys"],[29,97,19,6],[29,98,19,7],[29,215,19,124,"formatToList"],[29,227,19,136],[29,228,20,8,"validKeys"],[29,237,21,6],[29,238,21,7],[29,358,22,4],[29,359,22,5],[30,4,23,2],[31,4,25,2],[31,8,25,6,"config"],[31,14,25,12],[31,15,25,13,"screens"],[31,22,25,20],[31,24,25,22],[32,6,26,4,"Object"],[32,12,26,10],[32,13,26,11,"entries"],[32,20,26,18],[32,21,26,19,"config"],[32,27,26,25],[32,28,26,26,"screens"],[32,35,26,33],[32,36,26,34],[32,37,26,35,"forEach"],[32,44,26,42],[32,45,26,43,"_ref"],[32,49,26,43],[32,53,26,59],[33,8,26,59],[33,12,26,59,"_ref2"],[33,17,26,59],[33,24,26,59,"_slicedToArray"],[33,38,26,59],[33,39,26,59,"default"],[33,46,26,59],[33,48,26,59,"_ref"],[33,52,26,59],[34,10,26,45,"_"],[34,11,26,46],[34,14,26,46,"_ref2"],[34,19,26,46],[35,10,26,48,"value"],[35,15,26,53],[35,18,26,53,"_ref2"],[35,23,26,53],[36,8,27,6],[36,12,27,10],[36,19,27,17,"value"],[36,24,27,22],[36,29,27,27],[36,37,27,35],[36,39,27,37],[37,10,28,8,"validatePathConfig"],[37,28,28,26],[37,29,28,27,"value"],[37,34,28,32],[37,36,28,34],[37,41,28,39],[37,42,28,40],[38,8,29,6],[39,6,30,4],[39,7,30,5],[39,8,30,6],[40,4,31,2],[41,2,32,0],[42,0,32,1],[42,3]],"functionMap":{"names":["<global>","formatToList","items.map$argument_0","validatePathConfig","Object.keys.filter$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA,qBC;YCC,mBD,YD;eGE;ICQ,iCD;2CEc;KFI;CHE"},"hasCjsExports":false},"type":"js/module"}]}