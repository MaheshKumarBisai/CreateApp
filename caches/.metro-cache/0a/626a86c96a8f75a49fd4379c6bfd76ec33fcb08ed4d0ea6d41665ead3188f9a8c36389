{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\").default;\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.extractExpoPathFromURL = exports.parsePathFromExpoGoLink = exports.parsePathAndParamsFromExpoGoLink = void 0;\n  function parsePathAndParamsFromExpoGoLink(url) {\n    // If the URL is defined (default in Expo Go dev apps) and the URL has no path:\n    // `exp://192.168.87.39:19000/` then use the default `exp://192.168.87.39:19000/--/`\n    var href = parsePathFromExpoGoLink(url);\n    var results = href.match(/([^?]*)(\\?.*)?/);\n    return {\n      pathname: results?.[1] ?? '',\n      queryString: results?.[2] ?? ''\n    };\n  }\n  exports.parsePathAndParamsFromExpoGoLink = parsePathAndParamsFromExpoGoLink;\n  function parsePathFromExpoGoLink(url) {\n    // If the URL is defined (default in Expo Go dev apps) and the URL has no path:\n    // `exp://192.168.87.39:19000/` then use the default `exp://192.168.87.39:19000/--/`\n    return url.match(/exps?:\\/\\/.*?\\/--\\/(.*)/)?.[1] ?? '';\n  }\n  exports.parsePathFromExpoGoLink = parsePathFromExpoGoLink;\n  // This is only run on native.\n  function extractExactPathFromURL(url) {\n    if (\n    // If a universal link / app link / web URL is used, we should use the path\n    // from the URL, while stripping the origin.\n    url.match(/^https?:\\/\\//)) {\n      var _URL = new URL(url),\n        origin = _URL.origin,\n        href = _URL.href,\n        hostname = _URL.hostname;\n      if (hostname === 'exp.host' || hostname === 'u.expo.dev') {\n        // These are QR code generate deep-link that always like to the '/' path\n        // TODO: In the future, QR code may link to a specific path and this logic will need to be udpated\n        return '';\n      }\n      return href.replace(origin, '');\n    }\n    var isExpoGo = typeof expo !== 'undefined' && globalThis.expo?.modules?.ExpoGo;\n    // Handle special URLs used in Expo Go: `/--/pathname` -> `pathname`\n    if (isExpoGo &&\n    // while not exhaustive, `exp` and `exps` are the only two schemes which\n    // are passed through to other apps in Expo Go.\n    url.match(/^exp(s)?:\\/\\//)) {\n      var pathname = parsePathFromExpoGoLink(url);\n      if (pathname) {\n        return fromDeepLink('a://' + pathname);\n      }\n      // Match the `?.*` segment of the URL.\n      var queryParams = url.match(/exps?:\\/\\/.*\\?(.*)/)?.[1];\n      if (queryParams) {\n        return fromDeepLink('a://?' + queryParams);\n      }\n      return '';\n    }\n    // TODO: Support dev client URLs\n    return fromDeepLink(url);\n  }\n  /** Major hack to support the makeshift expo-development-client system. */\n  function isExpoDevelopmentClient(url) {\n    return url.hostname === 'expo-development-client';\n  }\n  function fromDeepLink(url) {\n    var res;\n    try {\n      // This is for all standard deep links, e.g. `foobar://` where everything\n      // after the `://` is the path.\n      res = new URL(url);\n    } catch {\n      return url;\n    }\n    if (isExpoDevelopmentClient(res)) {\n      if (!res.searchParams.get('url')) {\n        return '';\n      }\n      var incomingUrl = res.searchParams.get('url');\n      return extractExactPathFromURL(decodeURI(incomingUrl));\n    }\n    var results = '';\n    if (res.host) {\n      results += res.host;\n    }\n    if (res.pathname) {\n      results += res.pathname;\n    }\n    var qs = !res.search ? '' :\n    // @ts-ignore: `entries` is not on `URLSearchParams` in some typechecks.\n    [...res.searchParams.entries()].map(_ref => {\n      var _ref2 = _slicedToArray(_ref, 2),\n        k = _ref2[0],\n        v = _ref2[1];\n      return `${k}=${decodeURIComponent(v)}`;\n    }).join('&');\n    if (qs) {\n      results += '?' + qs;\n    }\n    return results;\n  }\n  function extractExpoPathFromURL() {\n    var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return extractExactPathFromURL(url)\n    // TODO: We should get rid of this, dropping specificities is not good\n    .replace(/^\\//, '');\n  }\n  exports.extractExpoPathFromURL = extractExpoPathFromURL;\n});","lineCount":110,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[4,90,1,13,"default"],[4,97,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,3,0,"exports"],[8,9,3,7],[8,10,3,8,"extractExpoPathFromURL"],[8,32,3,30],[8,35,3,33,"exports"],[8,42,3,40],[8,43,3,41,"parsePathFromExpoGoLink"],[8,66,3,64],[8,69,3,67,"exports"],[8,76,3,74],[8,77,3,75,"parsePathAndParamsFromExpoGoLink"],[8,109,3,107],[8,112,3,110],[8,117,3,115],[8,118,3,116],[9,2,4,0],[9,11,4,9,"parsePathAndParamsFromExpoGoLink"],[9,43,4,41,"parsePathAndParamsFromExpoGoLink"],[9,44,4,42,"url"],[9,47,4,45],[9,49,4,47],[10,4,5,4],[11,4,6,4],[12,4,7,4],[12,8,7,10,"href"],[12,12,7,14],[12,15,7,17,"parsePathFromExpoGoLink"],[12,38,7,40],[12,39,7,41,"url"],[12,42,7,44],[12,43,7,45],[13,4,8,4],[13,8,8,10,"results"],[13,15,8,17],[13,18,8,20,"href"],[13,22,8,24],[13,23,8,25,"match"],[13,28,8,30],[13,29,8,31],[13,45,8,47],[13,46,8,48],[14,4,9,4],[14,11,9,11],[15,6,10,8,"pathname"],[15,14,10,16],[15,16,10,18,"results"],[15,23,10,25],[15,26,10,28],[15,27,10,29],[15,28,10,30],[15,32,10,34],[15,34,10,36],[16,6,11,8,"queryString"],[16,17,11,19],[16,19,11,21,"results"],[16,26,11,28],[16,29,11,31],[16,30,11,32],[16,31,11,33],[16,35,11,37],[17,4,12,4],[17,5,12,5],[18,2,13,0],[19,2,14,0,"exports"],[19,9,14,7],[19,10,14,8,"parsePathAndParamsFromExpoGoLink"],[19,42,14,40],[19,45,14,43,"parsePathAndParamsFromExpoGoLink"],[19,77,14,75],[20,2,15,0],[20,11,15,9,"parsePathFromExpoGoLink"],[20,34,15,32,"parsePathFromExpoGoLink"],[20,35,15,33,"url"],[20,38,15,36],[20,40,15,38],[21,4,16,4],[22,4,17,4],[23,4,18,4],[23,11,18,11,"url"],[23,14,18,14],[23,15,18,15,"match"],[23,20,18,20],[23,21,18,21],[23,46,18,46],[23,47,18,47],[23,50,18,50],[23,51,18,51],[23,52,18,52],[23,56,18,56],[23,58,18,58],[24,2,19,0],[25,2,20,0,"exports"],[25,9,20,7],[25,10,20,8,"parsePathFromExpoGoLink"],[25,33,20,31],[25,36,20,34,"parsePathFromExpoGoLink"],[25,59,20,57],[26,2,21,0],[27,2,22,0],[27,11,22,9,"extractExactPathFromURL"],[27,34,22,32,"extractExactPathFromURL"],[27,35,22,33,"url"],[27,38,22,36],[27,40,22,38],[28,4,23,4],[29,4,24,4],[30,4,25,4],[31,4,26,4,"url"],[31,7,26,7],[31,8,26,8,"match"],[31,13,26,13],[31,14,26,14],[31,28,26,28],[31,29,26,29],[31,31,26,31],[32,6,27,8],[32,10,27,8,"_URL"],[32,14,27,8],[32,17,27,43],[32,21,27,47,"URL"],[32,24,27,50],[32,25,27,51,"url"],[32,28,27,54],[32,29,27,55],[33,8,27,16,"origin"],[33,14,27,22],[33,17,27,22,"_URL"],[33,21,27,22],[33,22,27,16,"origin"],[33,28,27,22],[34,8,27,24,"href"],[34,12,27,28],[34,15,27,28,"_URL"],[34,19,27,28],[34,20,27,24,"href"],[34,24,27,28],[35,8,27,30,"hostname"],[35,16,27,38],[35,19,27,38,"_URL"],[35,23,27,38],[35,24,27,30,"hostname"],[35,32,27,38],[36,6,28,8],[36,10,28,12,"hostname"],[36,18,28,20],[36,23,28,25],[36,33,28,35],[36,37,28,39,"hostname"],[36,45,28,47],[36,50,28,52],[36,62,28,64],[36,64,28,66],[37,8,29,12],[38,8,30,12],[39,8,31,12],[39,15,31,19],[39,17,31,21],[40,6,32,8],[41,6,33,8],[41,13,33,15,"href"],[41,17,33,19],[41,18,33,20,"replace"],[41,25,33,27],[41,26,33,28,"origin"],[41,32,33,34],[41,34,33,36],[41,36,33,38],[41,37,33,39],[42,4,34,4],[43,4,35,4],[43,8,35,10,"isExpoGo"],[43,16,35,18],[43,19,35,21],[43,26,35,28,"expo"],[43,30,35,32],[43,35,35,37],[43,46,35,48],[43,50,35,52,"globalThis"],[43,60,35,62],[43,61,35,63,"expo"],[43,65,35,67],[43,67,35,69,"modules"],[43,74,35,76],[43,76,35,78,"ExpoGo"],[43,82,35,84],[44,4,36,4],[45,4,37,4],[45,8,37,8,"isExpoGo"],[45,16,37,16],[46,4,38,8],[47,4,39,8],[48,4,40,8,"url"],[48,7,40,11],[48,8,40,12,"match"],[48,13,40,17],[48,14,40,18],[48,29,40,33],[48,30,40,34],[48,32,40,36],[49,6,41,8],[49,10,41,14,"pathname"],[49,18,41,22],[49,21,41,25,"parsePathFromExpoGoLink"],[49,44,41,48],[49,45,41,49,"url"],[49,48,41,52],[49,49,41,53],[50,6,42,8],[50,10,42,12,"pathname"],[50,18,42,20],[50,20,42,22],[51,8,43,12],[51,15,43,19,"fromDeepLink"],[51,27,43,31],[51,28,43,32],[51,34,43,38],[51,37,43,41,"pathname"],[51,45,43,49],[51,46,43,50],[52,6,44,8],[53,6,45,8],[54,6,46,8],[54,10,46,14,"queryParams"],[54,21,46,25],[54,24,46,28,"url"],[54,27,46,31],[54,28,46,32,"match"],[54,33,46,37],[54,34,46,38],[54,54,46,58],[54,55,46,59],[54,58,46,62],[54,59,46,63],[54,60,46,64],[55,6,47,8],[55,10,47,12,"queryParams"],[55,21,47,23],[55,23,47,25],[56,8,48,12],[56,15,48,19,"fromDeepLink"],[56,27,48,31],[56,28,48,32],[56,35,48,39],[56,38,48,42,"queryParams"],[56,49,48,53],[56,50,48,54],[57,6,49,8],[58,6,50,8],[58,13,50,15],[58,15,50,17],[59,4,51,4],[60,4,52,4],[61,4,53,4],[61,11,53,11,"fromDeepLink"],[61,23,53,23],[61,24,53,24,"url"],[61,27,53,27],[61,28,53,28],[62,2,54,0],[63,2,55,0],[64,2,56,0],[64,11,56,9,"isExpoDevelopmentClient"],[64,34,56,32,"isExpoDevelopmentClient"],[64,35,56,33,"url"],[64,38,56,36],[64,40,56,38],[65,4,57,4],[65,11,57,11,"url"],[65,14,57,14],[65,15,57,15,"hostname"],[65,23,57,23],[65,28,57,28],[65,53,57,53],[66,2,58,0],[67,2,59,0],[67,11,59,9,"fromDeepLink"],[67,23,59,21,"fromDeepLink"],[67,24,59,22,"url"],[67,27,59,25],[67,29,59,27],[68,4,60,4],[68,8,60,8,"res"],[68,11,60,11],[69,4,61,4],[69,8,61,8],[70,6,62,8],[71,6,63,8],[72,6,64,8,"res"],[72,9,64,11],[72,12,64,14],[72,16,64,18,"URL"],[72,19,64,21],[72,20,64,22,"url"],[72,23,64,25],[72,24,64,26],[73,4,65,4],[73,5,65,5],[73,6,66,4],[73,12,66,10],[74,6,67,8],[74,13,67,15,"url"],[74,16,67,18],[75,4,68,4],[76,4,69,4],[76,8,69,8,"isExpoDevelopmentClient"],[76,31,69,31],[76,32,69,32,"res"],[76,35,69,35],[76,36,69,36],[76,38,69,38],[77,6,70,8],[77,10,70,12],[77,11,70,13,"res"],[77,14,70,16],[77,15,70,17,"searchParams"],[77,27,70,29],[77,28,70,30,"get"],[77,31,70,33],[77,32,70,34],[77,37,70,39],[77,38,70,40],[77,40,70,42],[78,8,71,12],[78,15,71,19],[78,17,71,21],[79,6,72,8],[80,6,73,8],[80,10,73,14,"incomingUrl"],[80,21,73,25],[80,24,73,28,"res"],[80,27,73,31],[80,28,73,32,"searchParams"],[80,40,73,44],[80,41,73,45,"get"],[80,44,73,48],[80,45,73,49],[80,50,73,54],[80,51,73,55],[81,6,74,8],[81,13,74,15,"extractExactPathFromURL"],[81,36,74,38],[81,37,74,39,"decodeURI"],[81,46,74,48],[81,47,74,49,"incomingUrl"],[81,58,74,60],[81,59,74,61],[81,60,74,62],[82,4,75,4],[83,4,76,4],[83,8,76,8,"results"],[83,15,76,15],[83,18,76,18],[83,20,76,20],[84,4,77,4],[84,8,77,8,"res"],[84,11,77,11],[84,12,77,12,"host"],[84,16,77,16],[84,18,77,18],[85,6,78,8,"results"],[85,13,78,15],[85,17,78,19,"res"],[85,20,78,22],[85,21,78,23,"host"],[85,25,78,27],[86,4,79,4],[87,4,80,4],[87,8,80,8,"res"],[87,11,80,11],[87,12,80,12,"pathname"],[87,20,80,20],[87,22,80,22],[88,6,81,8,"results"],[88,13,81,15],[88,17,81,19,"res"],[88,20,81,22],[88,21,81,23,"pathname"],[88,29,81,31],[89,4,82,4],[90,4,83,4],[90,8,83,10,"qs"],[90,10,83,12],[90,13,83,15],[90,14,83,16,"res"],[90,17,83,19],[90,18,83,20,"search"],[90,24,83,26],[90,27,84,10],[90,29,84,12],[91,4,85,10],[92,4,86,12],[92,5,86,13],[92,8,86,16,"res"],[92,11,86,19],[92,12,86,20,"searchParams"],[92,24,86,32],[92,25,86,33,"entries"],[92,32,86,40],[92,33,86,41],[92,34,86,42],[92,35,86,43],[92,36,86,44,"map"],[92,39,86,47],[92,40,86,48,"_ref"],[92,44,86,48],[93,6,86,48],[93,10,86,48,"_ref2"],[93,15,86,48],[93,18,86,48,"_slicedToArray"],[93,32,86,48],[93,33,86,48,"_ref"],[93,37,86,48],[94,8,86,50,"k"],[94,9,86,51],[94,12,86,51,"_ref2"],[94,17,86,51],[95,8,86,53,"v"],[95,9,86,54],[95,12,86,54,"_ref2"],[95,17,86,54],[96,6,86,54],[96,13,86,60],[96,16,86,63,"k"],[96,17,86,64],[96,21,86,68,"decodeURIComponent"],[96,39,86,86],[96,40,86,87,"v"],[96,41,86,88],[96,42,86,89],[96,44,86,91],[97,4,86,91],[97,6,86,92],[97,7,86,93,"join"],[97,11,86,97],[97,12,86,98],[97,15,86,101],[97,16,86,102],[98,4,87,4],[98,8,87,8,"qs"],[98,10,87,10],[98,12,87,12],[99,6,88,8,"results"],[99,13,88,15],[99,17,88,19],[99,20,88,22],[99,23,88,25,"qs"],[99,25,88,27],[100,4,89,4],[101,4,90,4],[101,11,90,11,"results"],[101,18,90,18],[102,2,91,0],[103,2,92,0],[103,11,92,9,"extractExpoPathFromURL"],[103,33,92,31,"extractExpoPathFromURL"],[103,34,92,31],[103,36,92,42],[104,4,92,42],[104,8,92,32,"url"],[104,11,92,35],[104,14,92,35,"arguments"],[104,23,92,35],[104,24,92,35,"length"],[104,30,92,35],[104,38,92,35,"arguments"],[104,47,92,35],[104,55,92,35,"undefined"],[104,64,92,35],[104,67,92,35,"arguments"],[104,76,92,35],[104,82,92,38],[104,84,92,40],[105,4,93,4],[105,11,93,12,"extractExactPathFromURL"],[105,34,93,35],[105,35,93,36,"url"],[105,38,93,39],[106,4,94,8],[107,4,94,8],[107,5,95,9,"replace"],[107,12,95,16],[107,13,95,17],[107,18,95,22],[107,20,95,24],[107,22,95,26],[107,23,95,27],[108,2,96,0],[109,2,97,0,"exports"],[109,9,97,7],[109,10,97,8,"extractExpoPathFromURL"],[109,32,97,30],[109,35,97,33,"extractExpoPathFromURL"],[109,57,97,55],[110,0,97,56],[110,3]],"functionMap":{"names":["<global>","parsePathAndParamsFromExpoGoLink","parsePathFromExpoGoLink","extractExactPathFromURL","isExpoDevelopmentClient","fromDeepLink","map$argument_0","extractExpoPathFromURL"],"mappings":"AAA;ACG;CDS;AEE;CFI;AGG;CHgC;AIE;CJE;AKC;gDC2B,2CD;CLK;AOC;CPI"},"hasCjsExports":true},"type":"js/module"}]}