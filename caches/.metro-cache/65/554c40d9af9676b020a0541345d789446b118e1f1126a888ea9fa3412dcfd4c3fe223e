{"dependencies":[{"name":"fbjs/lib/invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":16,"index":411},"end":{"line":14,"column":45,"index":440}}],"key":"ePiUN85REKH0vTLGPPDgdWgjFww=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\r\n   * Copyright (c) 2014-present, Facebook, Inc.\r\n   * All rights reserved.\r\n   *\r\n   * This source code is licensed under the BSD-style license found in the\r\n   * LICENSE file in the root directory of this source tree. An additional grant\r\n   * of patent rights can be found in the PATENTS file in the same directory.\r\n   *\r\n   * @providesModule EventSubscriptionVendor\r\n   * @typechecks\r\n   */\n  'use strict';\n\n  var invariant = require(_dependencyMap[0], \"fbjs/lib/invariant\");\n  /**\r\n   * EventSubscriptionVendor stores a set of EventSubscriptions that are\r\n   * subscribed to a particular event type.\r\n   */\n\n  var EventSubscriptionVendor = /*#__PURE__*/function () {\n    function EventSubscriptionVendor() {\n      this._subscriptionsForType = {};\n      this._currentSubscription = null;\n    }\n    /**\r\n     * Adds a subscription keyed by an event type.\r\n     *\r\n     * @param {string} eventType\r\n     * @param {EventSubscription} subscription\r\n     */\n\n    var _proto = EventSubscriptionVendor.prototype;\n    _proto.addSubscription = function addSubscription(eventType, subscription) {\n      !(subscription.subscriber === this) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'The subscriber of the subscription is incorrectly set.') : invariant(false) : void 0;\n      if (!this._subscriptionsForType[eventType]) {\n        this._subscriptionsForType[eventType] = [];\n      }\n      var key = this._subscriptionsForType[eventType].length;\n      this._subscriptionsForType[eventType].push(subscription);\n      subscription.eventType = eventType;\n      subscription.key = key;\n      return subscription;\n    }\n    /**\r\n     * Removes a bulk set of the subscriptions.\r\n     *\r\n     * @param {?string} eventType - Optional name of the event type whose\r\n     *   registered supscriptions to remove, if null remove all subscriptions.\r\n     */;\n    _proto.removeAllSubscriptions = function removeAllSubscriptions(eventType) {\n      if (eventType === undefined) {\n        this._subscriptionsForType = {};\n      } else {\n        delete this._subscriptionsForType[eventType];\n      }\n    }\n    /**\r\n     * Removes a specific subscription. Instead of calling this function, call\r\n     * `subscription.remove()` directly.\r\n     *\r\n     * @param {object} subscription\r\n     */;\n    _proto.removeSubscription = function removeSubscription(subscription) {\n      var eventType = subscription.eventType;\n      var key = subscription.key;\n      var subscriptionsForType = this._subscriptionsForType[eventType];\n      if (subscriptionsForType) {\n        delete subscriptionsForType[key];\n      }\n    }\n    /**\r\n     * Returns the array of subscriptions that are currently registered for the\r\n     * given event type.\r\n     *\r\n     * Note: This array can be potentially sparse as subscriptions are deleted\r\n     * from it when they are removed.\r\n     *\r\n     * TODO: This returns a nullable array. wat?\r\n     *\r\n     * @param {string} eventType\r\n     * @return {?array}\r\n     */;\n    _proto.getSubscriptionsForType = function getSubscriptionsForType(eventType) {\n      return this._subscriptionsForType[eventType];\n    };\n    return EventSubscriptionVendor;\n  }();\n  module.exports = EventSubscriptionVendor;\n});","lineCount":90,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,2,12,0],[13,14,12,12],[15,2,14,0],[15,6,14,4,"invariant"],[15,15,14,13],[15,18,14,16,"require"],[15,25,14,23],[15,26,14,23,"_dependencyMap"],[15,40,14,23],[15,65,14,44],[15,66,14,45],[16,2,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[21,2,21,0],[21,6,21,4,"EventSubscriptionVendor"],[21,29,21,27],[21,32,21,30],[21,45,21,43],[21,57,21,55],[22,4,22,2],[22,13,22,11,"EventSubscriptionVendor"],[22,36,22,34,"EventSubscriptionVendor"],[22,37,22,34],[22,39,22,37],[23,6,23,4],[23,10,23,8],[23,11,23,9,"_subscriptionsForType"],[23,32,23,30],[23,35,23,33],[23,36,23,34],[23,37,23,35],[24,6,24,4],[24,10,24,8],[24,11,24,9,"_currentSubscription"],[24,31,24,29],[24,34,24,32],[24,38,24,36],[25,4,25,2],[26,4,26,2],[27,0,27,0],[28,0,28,0],[29,0,29,0],[30,0,30,0],[31,0,31,0],[33,4,34,2],[33,8,34,6,"_proto"],[33,14,34,12],[33,17,34,15,"EventSubscriptionVendor"],[33,40,34,38],[33,41,34,39,"prototype"],[33,50,34,48],[34,4,36,2,"_proto"],[34,10,36,8],[34,11,36,9,"addSubscription"],[34,26,36,24],[34,29,36,27],[34,38,36,36,"addSubscription"],[34,53,36,51,"addSubscription"],[34,54,36,52,"eventType"],[34,63,36,61],[34,65,36,63,"subscription"],[34,77,36,75],[34,79,36,77],[35,6,37,4],[35,8,37,6,"subscription"],[35,20,37,18],[35,21,37,19,"subscriber"],[35,31,37,29],[35,36,37,34],[35,40,37,38],[35,41,37,39],[35,44,37,42,"process"],[35,51,37,49],[35,52,37,50,"env"],[35,55,37,53],[35,56,37,54,"NODE_ENV"],[35,64,37,62],[35,69,37,67],[35,81,37,79],[35,84,37,82,"invariant"],[35,93,37,91],[35,94,37,92],[35,99,37,97],[35,101,37,99],[35,157,37,155],[35,158,37,156],[35,161,37,159,"invariant"],[35,170,37,168],[35,171,37,169],[35,176,37,174],[35,177,37,175],[35,180,37,178],[35,185,37,183],[35,186,37,184],[36,6,39,4],[36,10,39,8],[36,11,39,9],[36,15,39,13],[36,16,39,14,"_subscriptionsForType"],[36,37,39,35],[36,38,39,36,"eventType"],[36,47,39,45],[36,48,39,46],[36,50,39,48],[37,8,40,6],[37,12,40,10],[37,13,40,11,"_subscriptionsForType"],[37,34,40,32],[37,35,40,33,"eventType"],[37,44,40,42],[37,45,40,43],[37,48,40,46],[37,50,40,48],[38,6,41,4],[39,6,43,4],[39,10,43,8,"key"],[39,13,43,11],[39,16,43,14],[39,20,43,18],[39,21,43,19,"_subscriptionsForType"],[39,42,43,40],[39,43,43,41,"eventType"],[39,52,43,50],[39,53,43,51],[39,54,43,52,"length"],[39,60,43,58],[40,6,45,4],[40,10,45,8],[40,11,45,9,"_subscriptionsForType"],[40,32,45,30],[40,33,45,31,"eventType"],[40,42,45,40],[40,43,45,41],[40,44,45,42,"push"],[40,48,45,46],[40,49,45,47,"subscription"],[40,61,45,59],[40,62,45,60],[41,6,47,4,"subscription"],[41,18,47,16],[41,19,47,17,"eventType"],[41,28,47,26],[41,31,47,29,"eventType"],[41,40,47,38],[42,6,48,4,"subscription"],[42,18,48,16],[42,19,48,17,"key"],[42,22,48,20],[42,25,48,23,"key"],[42,28,48,26],[43,6,49,4],[43,13,49,11,"subscription"],[43,25,49,23],[44,4,50,2],[45,4,51,2],[46,0,52,0],[47,0,53,0],[48,0,54,0],[49,0,55,0],[50,0,56,0],[50,7,51,2],[51,4,59,2,"_proto"],[51,10,59,8],[51,11,59,9,"removeAllSubscriptions"],[51,33,59,31],[51,36,59,34],[51,45,59,43,"removeAllSubscriptions"],[51,67,59,65,"removeAllSubscriptions"],[51,68,59,66,"eventType"],[51,77,59,75],[51,79,59,77],[52,6,60,4],[52,10,60,8,"eventType"],[52,19,60,17],[52,24,60,22,"undefined"],[52,33,60,31],[52,35,60,33],[53,8,61,6],[53,12,61,10],[53,13,61,11,"_subscriptionsForType"],[53,34,61,32],[53,37,61,35],[53,38,61,36],[53,39,61,37],[54,6,62,4],[54,7,62,5],[54,13,62,11],[55,8,63,6],[55,15,63,13],[55,19,63,17],[55,20,63,18,"_subscriptionsForType"],[55,41,63,39],[55,42,63,40,"eventType"],[55,51,63,49],[55,52,63,50],[56,6,64,4],[57,4,65,2],[58,4,66,2],[59,0,67,0],[60,0,68,0],[61,0,69,0],[62,0,70,0],[63,0,71,0],[63,7,66,2],[64,4,74,2,"_proto"],[64,10,74,8],[64,11,74,9,"removeSubscription"],[64,29,74,27],[64,32,74,30],[64,41,74,39,"removeSubscription"],[64,59,74,57,"removeSubscription"],[64,60,74,58,"subscription"],[64,72,74,70],[64,74,74,72],[65,6,75,4],[65,10,75,8,"eventType"],[65,19,75,17],[65,22,75,20,"subscription"],[65,34,75,32],[65,35,75,33,"eventType"],[65,44,75,42],[66,6,76,4],[66,10,76,8,"key"],[66,13,76,11],[66,16,76,14,"subscription"],[66,28,76,26],[66,29,76,27,"key"],[66,32,76,30],[67,6,77,4],[67,10,77,8,"subscriptionsForType"],[67,30,77,28],[67,33,77,31],[67,37,77,35],[67,38,77,36,"_subscriptionsForType"],[67,59,77,57],[67,60,77,58,"eventType"],[67,69,77,67],[67,70,77,68],[68,6,79,4],[68,10,79,8,"subscriptionsForType"],[68,30,79,28],[68,32,79,30],[69,8,80,6],[69,15,80,13,"subscriptionsForType"],[69,35,80,33],[69,36,80,34,"key"],[69,39,80,37],[69,40,80,38],[70,6,81,4],[71,4,82,2],[72,4,83,2],[73,0,84,0],[74,0,85,0],[75,0,86,0],[76,0,87,0],[77,0,88,0],[78,0,89,0],[79,0,90,0],[80,0,91,0],[81,0,92,0],[82,0,93,0],[83,0,94,0],[83,7,83,2],[84,4,97,2,"_proto"],[84,10,97,8],[84,11,97,9,"getSubscriptionsForType"],[84,34,97,32],[84,37,97,35],[84,46,97,44,"getSubscriptionsForType"],[84,69,97,67,"getSubscriptionsForType"],[84,70,97,68,"eventType"],[84,79,97,77],[84,81,97,79],[85,6,98,4],[85,13,98,11],[85,17,98,15],[85,18,98,16,"_subscriptionsForType"],[85,39,98,37],[85,40,98,38,"eventType"],[85,49,98,47],[85,50,98,48],[86,4,99,2],[86,5,99,3],[87,4,101,2],[87,11,101,9,"EventSubscriptionVendor"],[87,34,101,32],[88,2,102,0],[88,3,102,1],[88,4,102,2],[88,5,102,3],[89,2,104,0,"module"],[89,8,104,6],[89,9,104,7,"exports"],[89,16,104,14],[89,19,104,17,"EventSubscriptionVendor"],[89,42,104,40],[90,0,104,41],[90,3]],"functionMap":{"names":["<global>","<anonymous>","EventSubscriptionVendor","addSubscription","removeAllSubscriptions","removeSubscription","getSubscriptionsForType"],"mappings":"AAA;2CCoB;ECC;GDG;2BEW;GFc;kCGS;GHM;8BIS;GJQ;mCKe;GLE;CDG"},"hasCjsExports":true},"type":"js/module"}]}