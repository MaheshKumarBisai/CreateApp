{"dependencies":[{"name":"../EventEmitter/NativeEventEmitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":206},"end":{"line":10,"column":68,"index":274}}],"key":"Jk6GODPsD+OS/XTex7hK2MSfvW0=","exportNames":["*"],"imports":1}},{"name":"../Utilities/Platform","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":275},"end":{"line":11,"column":45,"index":320}}],"key":"WyqnBhspP5BAR0xvCwqfBv/v4uA=","exportNames":["*"],"imports":1}},{"name":"./NativeWebSocketModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":321},"end":{"line":12,"column":60,"index":381}}],"key":"AGB2JKXOMxtGwGWQCZlW2uis6T8=","exportNames":["*"],"imports":1}},{"name":"base64-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":382},"end":{"line":13,"column":31,"index":413}}],"key":"9arPc0KuVPvzcEfvnWXidnN1Ujk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  var _EventEmitterNativeEventEmitter = require(_dependencyMap[0], \"../EventEmitter/NativeEventEmitter\");\n  var NativeEventEmitter = _interopDefault(_EventEmitterNativeEventEmitter);\n  var _UtilitiesPlatform = require(_dependencyMap[1], \"../Utilities/Platform\");\n  var Platform = _interopDefault(_UtilitiesPlatform);\n  var _NativeWebSocketModule = require(_dependencyMap[2], \"./NativeWebSocketModule\");\n  var NativeWebSocketModule = _interopDefault(_NativeWebSocketModule);\n  var _base64Js = require(_dependencyMap[3], \"base64-js\");\n  var base64 = _interopDefault(_base64Js);\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   */\n\n  var originalRCTWebSocketConnect = NativeWebSocketModule.default.connect;\n  var originalRCTWebSocketSend = NativeWebSocketModule.default.send;\n  var originalRCTWebSocketSendBinary = NativeWebSocketModule.default.sendBinary;\n  var originalRCTWebSocketClose = NativeWebSocketModule.default.close;\n  var eventEmitter;\n  var subscriptions;\n  var closeCallback;\n  var sendCallback;\n  var connectCallback;\n  var onOpenCallback;\n  var onMessageCallback;\n  var onErrorCallback;\n  var onCloseCallback;\n  var isInterceptorEnabled = false;\n\n  /**\n   * A network interceptor which monkey-patches RCTWebSocketModule methods\n   * to gather all websocket network requests/responses, in order to show\n   * their information in the React Native inspector development tool.\n   */\n\n  var WebSocketInterceptor = {\n    /**\n     * Invoked when RCTWebSocketModule.close(...) is called.\n     */\n    setCloseCallback(callback) {\n      closeCallback = callback;\n    },\n    /**\n     * Invoked when RCTWebSocketModule.send(...) or sendBinary(...) is called.\n     */\n    setSendCallback(callback) {\n      sendCallback = callback;\n    },\n    /**\n     * Invoked when RCTWebSocketModule.connect(...) is called.\n     */\n    setConnectCallback(callback) {\n      connectCallback = callback;\n    },\n    /**\n     * Invoked when event \"websocketOpen\" happens.\n     */\n    setOnOpenCallback(callback) {\n      onOpenCallback = callback;\n    },\n    /**\n     * Invoked when event \"websocketMessage\" happens.\n     */\n    setOnMessageCallback(callback) {\n      onMessageCallback = callback;\n    },\n    /**\n     * Invoked when event \"websocketFailed\" happens.\n     */\n    setOnErrorCallback(callback) {\n      onErrorCallback = callback;\n    },\n    /**\n     * Invoked when event \"websocketClosed\" happens.\n     */\n    setOnCloseCallback(callback) {\n      onCloseCallback = callback;\n    },\n    isInterceptorEnabled() {\n      return isInterceptorEnabled;\n    },\n    _unregisterEvents() {\n      subscriptions.forEach(e => e.remove());\n      subscriptions = [];\n    },\n    /**\n     * Add listeners to the RCTWebSocketModule events to intercept them.\n     */\n    _registerEvents() {\n      subscriptions = [eventEmitter.addListener('websocketMessage', ev => {\n        if (onMessageCallback) {\n          onMessageCallback(ev.id, ev.type === 'binary' ? WebSocketInterceptor._arrayBufferToString(ev.data) : ev.data);\n        }\n      }), eventEmitter.addListener('websocketOpen', ev => {\n        if (onOpenCallback) {\n          onOpenCallback(ev.id);\n        }\n      }), eventEmitter.addListener('websocketClosed', ev => {\n        if (onCloseCallback) {\n          onCloseCallback(ev.id, {\n            code: ev.code,\n            reason: ev.reason\n          });\n        }\n      }), eventEmitter.addListener('websocketFailed', ev => {\n        if (onErrorCallback) {\n          onErrorCallback(ev.id, {\n            message: ev.message\n          });\n        }\n      })];\n    },\n    enableInterception() {\n      if (isInterceptorEnabled) {\n        return;\n      }\n      eventEmitter = new NativeEventEmitter.default(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      Platform.default.OS !== 'ios' ? null : NativeWebSocketModule.default);\n      WebSocketInterceptor._registerEvents();\n\n      // Override `connect` method for all RCTWebSocketModule requests\n      // to intercept the request url, protocols, options and socketId,\n      // then pass them through the `connectCallback`.\n      NativeWebSocketModule.default.connect = function (url, protocols, options, socketId) {\n        if (connectCallback) {\n          connectCallback(url, protocols, options, socketId);\n        }\n        originalRCTWebSocketConnect.apply(this, arguments);\n      };\n\n      // Override `send` method for all RCTWebSocketModule requests to intercept\n      // the data sent, then pass them through the `sendCallback`.\n      NativeWebSocketModule.default.send = function (data, socketId) {\n        if (sendCallback) {\n          sendCallback(data, socketId);\n        }\n        originalRCTWebSocketSend.apply(this, arguments);\n      };\n\n      // Override `sendBinary` method for all RCTWebSocketModule requests to\n      // intercept the data sent, then pass them through the `sendCallback`.\n      NativeWebSocketModule.default.sendBinary = function (data, socketId) {\n        if (sendCallback) {\n          sendCallback(WebSocketInterceptor._arrayBufferToString(data), socketId);\n        }\n        originalRCTWebSocketSendBinary.apply(this, arguments);\n      };\n\n      // Override `close` method for all RCTWebSocketModule requests to intercept\n      // the close information, then pass them through the `closeCallback`.\n      NativeWebSocketModule.default.close = function () {\n        if (closeCallback) {\n          if (arguments.length === 3) {\n            closeCallback(arguments[0], arguments[1], arguments[2]);\n          } else {\n            closeCallback(null, null, arguments[0]);\n          }\n        }\n        originalRCTWebSocketClose.apply(this, arguments);\n      };\n      isInterceptorEnabled = true;\n    },\n    _arrayBufferToString(data) {\n      var value = base64.default.toByteArray(data).buffer;\n      if (value === undefined || value === null) {\n        return '(no value)';\n      }\n      if (typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined' && value instanceof ArrayBuffer) {\n        return `ArrayBuffer {${String(Array.from(new Uint8Array(value)))}}`;\n      }\n      return value;\n    },\n    // Unpatch RCTWebSocketModule methods and remove the callbacks.\n    disableInterception() {\n      if (!isInterceptorEnabled) {\n        return;\n      }\n      isInterceptorEnabled = false;\n      NativeWebSocketModule.default.send = originalRCTWebSocketSend;\n      NativeWebSocketModule.default.sendBinary = originalRCTWebSocketSendBinary;\n      NativeWebSocketModule.default.close = originalRCTWebSocketClose;\n      NativeWebSocketModule.default.connect = originalRCTWebSocketConnect;\n      connectCallback = null;\n      closeCallback = null;\n      sendCallback = null;\n      onOpenCallback = null;\n      onMessageCallback = null;\n      onCloseCallback = null;\n      onErrorCallback = null;\n      WebSocketInterceptor._unregisterEvents();\n    }\n  };\n  module.exports = WebSocketInterceptor;\n});","lineCount":207,"map":[[9,2,10,0],[9,6,10,0,"_EventEmitterNativeEventEmitter"],[9,37,10,0],[9,40,10,0,"require"],[9,47,10,0],[9,48,10,0,"_dependencyMap"],[9,62,10,0],[10,2,10,0],[10,6,10,0,"NativeEventEmitter"],[10,24,10,0],[10,27,10,0,"_interopDefault"],[10,42,10,0],[10,43,10,0,"_EventEmitterNativeEventEmitter"],[10,74,10,0],[11,2,11,0],[11,6,11,0,"_UtilitiesPlatform"],[11,24,11,0],[11,27,11,0,"require"],[11,34,11,0],[11,35,11,0,"_dependencyMap"],[11,49,11,0],[12,2,11,0],[12,6,11,0,"Platform"],[12,14,11,0],[12,17,11,0,"_interopDefault"],[12,32,11,0],[12,33,11,0,"_UtilitiesPlatform"],[12,51,11,0],[13,2,12,0],[13,6,12,0,"_NativeWebSocketModule"],[13,28,12,0],[13,31,12,0,"require"],[13,38,12,0],[13,39,12,0,"_dependencyMap"],[13,53,12,0],[14,2,12,0],[14,6,12,0,"NativeWebSocketModule"],[14,27,12,0],[14,30,12,0,"_interopDefault"],[14,45,12,0],[14,46,12,0,"_NativeWebSocketModule"],[14,68,12,0],[15,2,13,0],[15,6,13,0,"_base64Js"],[15,15,13,0],[15,18,13,0,"require"],[15,25,13,0],[15,26,13,0,"_dependencyMap"],[15,40,13,0],[16,2,13,0],[16,6,13,0,"base64"],[16,12,13,0],[16,15,13,0,"_interopDefault"],[16,30,13,0],[16,31,13,0,"_base64Js"],[16,40,13,0],[17,2,1,0],[18,0,2,0],[19,0,3,0],[20,0,4,0],[21,0,5,0],[22,0,6,0],[23,0,7,0],[24,0,8,0],[26,2,15,0],[26,6,15,6,"originalRCTWebSocketConnect"],[26,33,15,33],[26,36,15,36,"NativeWebSocketModule"],[26,57,15,57],[26,58,15,57,"default"],[26,65,15,57],[26,66,15,58,"connect"],[26,73,15,65],[27,2,16,0],[27,6,16,6,"originalRCTWebSocketSend"],[27,30,16,30],[27,33,16,33,"NativeWebSocketModule"],[27,54,16,54],[27,55,16,54,"default"],[27,62,16,54],[27,63,16,55,"send"],[27,67,16,59],[28,2,17,0],[28,6,17,6,"originalRCTWebSocketSendBinary"],[28,36,17,36],[28,39,17,39,"NativeWebSocketModule"],[28,60,17,60],[28,61,17,60,"default"],[28,68,17,60],[28,69,17,61,"sendBinary"],[28,79,17,71],[29,2,18,0],[29,6,18,6,"originalRCTWebSocketClose"],[29,31,18,31],[29,34,18,34,"NativeWebSocketModule"],[29,55,18,55],[29,56,18,55,"default"],[29,63,18,55],[29,64,18,56,"close"],[29,69,18,61],[30,2,20,0],[30,6,20,4,"eventEmitter"],[30,18,20,16],[31,2,21,0],[31,6,21,4,"subscriptions"],[31,19,21,17],[32,2,23,0],[32,6,23,4,"closeCallback"],[32,19,23,17],[33,2,24,0],[33,6,24,4,"sendCallback"],[33,18,24,16],[34,2,25,0],[34,6,25,4,"connectCallback"],[34,21,25,19],[35,2,26,0],[35,6,26,4,"onOpenCallback"],[35,20,26,18],[36,2,27,0],[36,6,27,4,"onMessageCallback"],[36,23,27,21],[37,2,28,0],[37,6,28,4,"onErrorCallback"],[37,21,28,19],[38,2,29,0],[38,6,29,4,"onCloseCallback"],[38,21,29,19],[39,2,31,0],[39,6,31,4,"isInterceptorEnabled"],[39,26,31,24],[39,29,31,27],[39,34,31,32],[41,2,33,0],[42,0,34,0],[43,0,35,0],[44,0,36,0],[45,0,37,0],[47,2,39,0],[47,6,39,6,"WebSocketInterceptor"],[47,26,39,26],[47,29,39,29],[48,4,40,2],[49,0,41,0],[50,0,42,0],[51,4,43,2,"setCloseCallback"],[51,20,43,18,"setCloseCallback"],[51,21,43,19,"callback"],[51,29,43,27],[51,31,43,29],[52,6,44,4,"closeCallback"],[52,19,44,17],[52,22,44,20,"callback"],[52,30,44,28],[53,4,45,2],[53,5,45,3],[54,4,47,2],[55,0,48,0],[56,0,49,0],[57,4,50,2,"setSendCallback"],[57,19,50,17,"setSendCallback"],[57,20,50,18,"callback"],[57,28,50,26],[57,30,50,28],[58,6,51,4,"sendCallback"],[58,18,51,16],[58,21,51,19,"callback"],[58,29,51,27],[59,4,52,2],[59,5,52,3],[60,4,54,2],[61,0,55,0],[62,0,56,0],[63,4,57,2,"setConnectCallback"],[63,22,57,20,"setConnectCallback"],[63,23,57,21,"callback"],[63,31,57,29],[63,33,57,31],[64,6,58,4,"connectCallback"],[64,21,58,19],[64,24,58,22,"callback"],[64,32,58,30],[65,4,59,2],[65,5,59,3],[66,4,61,2],[67,0,62,0],[68,0,63,0],[69,4,64,2,"setOnOpenCallback"],[69,21,64,19,"setOnOpenCallback"],[69,22,64,20,"callback"],[69,30,64,28],[69,32,64,30],[70,6,65,4,"onOpenCallback"],[70,20,65,18],[70,23,65,21,"callback"],[70,31,65,29],[71,4,66,2],[71,5,66,3],[72,4,68,2],[73,0,69,0],[74,0,70,0],[75,4,71,2,"setOnMessageCallback"],[75,24,71,22,"setOnMessageCallback"],[75,25,71,23,"callback"],[75,33,71,31],[75,35,71,33],[76,6,72,4,"onMessageCallback"],[76,23,72,21],[76,26,72,24,"callback"],[76,34,72,32],[77,4,73,2],[77,5,73,3],[78,4,75,2],[79,0,76,0],[80,0,77,0],[81,4,78,2,"setOnErrorCallback"],[81,22,78,20,"setOnErrorCallback"],[81,23,78,21,"callback"],[81,31,78,29],[81,33,78,31],[82,6,79,4,"onErrorCallback"],[82,21,79,19],[82,24,79,22,"callback"],[82,32,79,30],[83,4,80,2],[83,5,80,3],[84,4,82,2],[85,0,83,0],[86,0,84,0],[87,4,85,2,"setOnCloseCallback"],[87,22,85,20,"setOnCloseCallback"],[87,23,85,21,"callback"],[87,31,85,29],[87,33,85,31],[88,6,86,4,"onCloseCallback"],[88,21,86,19],[88,24,86,22,"callback"],[88,32,86,30],[89,4,87,2],[89,5,87,3],[90,4,89,2,"isInterceptorEnabled"],[90,24,89,22,"isInterceptorEnabled"],[90,25,89,22],[90,27,89,25],[91,6,90,4],[91,13,90,11,"isInterceptorEnabled"],[91,33,90,31],[92,4,91,2],[92,5,91,3],[93,4,93,2,"_unregisterEvents"],[93,21,93,19,"_unregisterEvents"],[93,22,93,19],[93,24,93,22],[94,6,94,4,"subscriptions"],[94,19,94,17],[94,20,94,18,"forEach"],[94,27,94,25],[94,28,94,26,"e"],[94,29,94,27],[94,33,94,31,"e"],[94,34,94,32],[94,35,94,33,"remove"],[94,41,94,39],[94,42,94,40],[94,43,94,41],[94,44,94,42],[95,6,95,4,"subscriptions"],[95,19,95,17],[95,22,95,20],[95,24,95,22],[96,4,96,2],[96,5,96,3],[97,4,98,2],[98,0,99,0],[99,0,100,0],[100,4,101,2,"_registerEvents"],[100,19,101,17,"_registerEvents"],[100,20,101,17],[100,22,101,20],[101,6,102,4,"subscriptions"],[101,19,102,17],[101,22,102,20],[101,23,103,6,"eventEmitter"],[101,35,103,18],[101,36,103,19,"addListener"],[101,47,103,30],[101,48,103,31],[101,66,103,49],[101,68,103,51,"ev"],[101,70,103,53],[101,74,103,57],[102,8,104,8],[102,12,104,12,"onMessageCallback"],[102,29,104,29],[102,31,104,31],[103,10,105,10,"onMessageCallback"],[103,27,105,27],[103,28,106,12,"ev"],[103,30,106,14],[103,31,106,15,"id"],[103,33,106,17],[103,35,107,12,"ev"],[103,37,107,14],[103,38,107,15,"type"],[103,42,107,19],[103,47,107,24],[103,55,107,32],[103,58,108,16,"WebSocketInterceptor"],[103,78,108,36],[103,79,108,37,"_arrayBufferToString"],[103,99,108,57],[103,100,108,58,"ev"],[103,102,108,60],[103,103,108,61,"data"],[103,107,108,65],[103,108,108,66],[103,111,109,16,"ev"],[103,113,109,18],[103,114,109,19,"data"],[103,118,110,10],[103,119,110,11],[104,8,111,8],[105,6,112,6],[105,7,112,7],[105,8,112,8],[105,10,113,6,"eventEmitter"],[105,22,113,18],[105,23,113,19,"addListener"],[105,34,113,30],[105,35,113,31],[105,50,113,46],[105,52,113,48,"ev"],[105,54,113,50],[105,58,113,54],[106,8,114,8],[106,12,114,12,"onOpenCallback"],[106,26,114,26],[106,28,114,28],[107,10,115,10,"onOpenCallback"],[107,24,115,24],[107,25,115,25,"ev"],[107,27,115,27],[107,28,115,28,"id"],[107,30,115,30],[107,31,115,31],[108,8,116,8],[109,6,117,6],[109,7,117,7],[109,8,117,8],[109,10,118,6,"eventEmitter"],[109,22,118,18],[109,23,118,19,"addListener"],[109,34,118,30],[109,35,118,31],[109,52,118,48],[109,54,118,50,"ev"],[109,56,118,52],[109,60,118,56],[110,8,119,8],[110,12,119,12,"onCloseCallback"],[110,27,119,27],[110,29,119,29],[111,10,120,10,"onCloseCallback"],[111,25,120,25],[111,26,120,26,"ev"],[111,28,120,28],[111,29,120,29,"id"],[111,31,120,31],[111,33,120,33],[112,12,120,34,"code"],[112,16,120,38],[112,18,120,40,"ev"],[112,20,120,42],[112,21,120,43,"code"],[112,25,120,47],[113,12,120,49,"reason"],[113,18,120,55],[113,20,120,57,"ev"],[113,22,120,59],[113,23,120,60,"reason"],[114,10,120,66],[114,11,120,67],[114,12,120,68],[115,8,121,8],[116,6,122,6],[116,7,122,7],[116,8,122,8],[116,10,123,6,"eventEmitter"],[116,22,123,18],[116,23,123,19,"addListener"],[116,34,123,30],[116,35,123,31],[116,52,123,48],[116,54,123,50,"ev"],[116,56,123,52],[116,60,123,56],[117,8,124,8],[117,12,124,12,"onErrorCallback"],[117,27,124,27],[117,29,124,29],[118,10,125,10,"onErrorCallback"],[118,25,125,25],[118,26,125,26,"ev"],[118,28,125,28],[118,29,125,29,"id"],[118,31,125,31],[118,33,125,33],[119,12,125,34,"message"],[119,19,125,41],[119,21,125,43,"ev"],[119,23,125,45],[119,24,125,46,"message"],[120,10,125,53],[120,11,125,54],[120,12,125,55],[121,8,126,8],[122,6,127,6],[122,7,127,7],[122,8,127,8],[122,9,128,5],[123,4,129,2],[123,5,129,3],[124,4,131,2,"enableInterception"],[124,22,131,20,"enableInterception"],[124,23,131,20],[124,25,131,23],[125,6,132,4],[125,10,132,8,"isInterceptorEnabled"],[125,30,132,28],[125,32,132,30],[126,8,133,6],[127,6,134,4],[128,6,135,4,"eventEmitter"],[128,18,135,16],[128,21,135,19],[128,25,135,23,"NativeEventEmitter"],[128,43,135,41],[128,44,135,41,"default"],[128,51,135,41],[129,6,136,6],[130,6,137,6],[131,6,138,6,"Platform"],[131,14,138,14],[131,15,138,14,"default"],[131,22,138,14],[131,23,138,15,"OS"],[131,25,138,17],[131,30,138,22],[131,35,138,27],[131,38,138,30],[131,42,138,34],[131,45,138,37,"NativeWebSocketModule"],[131,66,138,58],[131,67,138,58,"default"],[131,74,139,4],[131,75,139,5],[132,6,140,4,"WebSocketInterceptor"],[132,26,140,24],[132,27,140,25,"_registerEvents"],[132,42,140,40],[132,43,140,41],[132,44,140,42],[134,6,142,4],[135,6,143,4],[136,6,144,4],[137,6,145,4,"NativeWebSocketModule"],[137,27,145,25],[137,28,145,25,"default"],[137,35,145,25],[137,36,145,26,"connect"],[137,43,145,33],[137,46,145,36],[137,56,146,6,"url"],[137,59,146,9],[137,61,147,6,"protocols"],[137,70,147,15],[137,72,148,6,"options"],[137,79,148,13],[137,81,149,6,"socketId"],[137,89,149,14],[137,91,150,6],[138,8,151,6],[138,12,151,10,"connectCallback"],[138,27,151,25],[138,29,151,27],[139,10,152,8,"connectCallback"],[139,25,152,23],[139,26,152,24,"url"],[139,29,152,27],[139,31,152,29,"protocols"],[139,40,152,38],[139,42,152,40,"options"],[139,49,152,47],[139,51,152,49,"socketId"],[139,59,152,57],[139,60,152,58],[140,8,153,6],[141,8,154,6,"originalRCTWebSocketConnect"],[141,35,154,33],[141,36,154,34,"apply"],[141,41,154,39],[141,42,154,40],[141,46,154,44],[141,48,154,46,"arguments"],[141,57,154,55],[141,58,154,56],[142,6,155,4],[142,7,155,5],[144,6,157,4],[145,6,158,4],[146,6,159,4,"NativeWebSocketModule"],[146,27,159,25],[146,28,159,25,"default"],[146,35,159,25],[146,36,159,26,"send"],[146,40,159,30],[146,43,159,33],[146,53,159,43,"data"],[146,57,159,47],[146,59,159,49,"socketId"],[146,67,159,57],[146,69,159,59],[147,8,160,6],[147,12,160,10,"sendCallback"],[147,24,160,22],[147,26,160,24],[148,10,161,8,"sendCallback"],[148,22,161,20],[148,23,161,21,"data"],[148,27,161,25],[148,29,161,27,"socketId"],[148,37,161,35],[148,38,161,36],[149,8,162,6],[150,8,163,6,"originalRCTWebSocketSend"],[150,32,163,30],[150,33,163,31,"apply"],[150,38,163,36],[150,39,163,37],[150,43,163,41],[150,45,163,43,"arguments"],[150,54,163,52],[150,55,163,53],[151,6,164,4],[151,7,164,5],[153,6,166,4],[154,6,167,4],[155,6,168,4,"NativeWebSocketModule"],[155,27,168,25],[155,28,168,25,"default"],[155,35,168,25],[155,36,168,26,"sendBinary"],[155,46,168,36],[155,49,168,39],[155,59,168,49,"data"],[155,63,168,53],[155,65,168,55,"socketId"],[155,73,168,63],[155,75,168,65],[156,8,169,6],[156,12,169,10,"sendCallback"],[156,24,169,22],[156,26,169,24],[157,10,170,8,"sendCallback"],[157,22,170,20],[157,23,170,21,"WebSocketInterceptor"],[157,43,170,41],[157,44,170,42,"_arrayBufferToString"],[157,64,170,62],[157,65,170,63,"data"],[157,69,170,67],[157,70,170,68],[157,72,170,70,"socketId"],[157,80,170,78],[157,81,170,79],[158,8,171,6],[159,8,172,6,"originalRCTWebSocketSendBinary"],[159,38,172,36],[159,39,172,37,"apply"],[159,44,172,42],[159,45,172,43],[159,49,172,47],[159,51,172,49,"arguments"],[159,60,172,58],[159,61,172,59],[160,6,173,4],[160,7,173,5],[162,6,175,4],[163,6,176,4],[164,6,177,4,"NativeWebSocketModule"],[164,27,177,25],[164,28,177,25,"default"],[164,35,177,25],[164,36,177,26,"close"],[164,41,177,31],[164,44,177,34],[164,56,177,46],[165,8,178,6],[165,12,178,10,"closeCallback"],[165,25,178,23],[165,27,178,25],[166,10,179,8],[166,14,179,12,"arguments"],[166,23,179,21],[166,24,179,22,"length"],[166,30,179,28],[166,35,179,33],[166,36,179,34],[166,38,179,36],[167,12,180,10,"closeCallback"],[167,25,180,23],[167,26,180,24,"arguments"],[167,35,180,33],[167,36,180,34],[167,37,180,35],[167,38,180,36],[167,40,180,38,"arguments"],[167,49,180,47],[167,50,180,48],[167,51,180,49],[167,52,180,50],[167,54,180,52,"arguments"],[167,63,180,61],[167,64,180,62],[167,65,180,63],[167,66,180,64],[167,67,180,65],[168,10,181,8],[168,11,181,9],[168,17,181,15],[169,12,182,10,"closeCallback"],[169,25,182,23],[169,26,182,24],[169,30,182,28],[169,32,182,30],[169,36,182,34],[169,38,182,36,"arguments"],[169,47,182,45],[169,48,182,46],[169,49,182,47],[169,50,182,48],[169,51,182,49],[170,10,183,8],[171,8,184,6],[172,8,185,6,"originalRCTWebSocketClose"],[172,33,185,31],[172,34,185,32,"apply"],[172,39,185,37],[172,40,185,38],[172,44,185,42],[172,46,185,44,"arguments"],[172,55,185,53],[172,56,185,54],[173,6,186,4],[173,7,186,5],[174,6,188,4,"isInterceptorEnabled"],[174,26,188,24],[174,29,188,27],[174,33,188,31],[175,4,189,2],[175,5,189,3],[176,4,191,2,"_arrayBufferToString"],[176,24,191,22,"_arrayBufferToString"],[176,25,191,23,"data"],[176,29,191,27],[176,31,191,29],[177,6,192,4],[177,10,192,10,"value"],[177,15,192,15],[177,18,192,18,"base64"],[177,24,192,24],[177,25,192,24,"default"],[177,32,192,24],[177,33,192,25,"toByteArray"],[177,44,192,36],[177,45,192,37,"data"],[177,49,192,41],[177,50,192,42],[177,51,192,43,"buffer"],[177,57,192,49],[178,6,193,4],[178,10,193,8,"value"],[178,15,193,13],[178,20,193,18,"undefined"],[178,29,193,27],[178,33,193,31,"value"],[178,38,193,36],[178,43,193,41],[178,47,193,45],[178,49,193,47],[179,8,194,6],[179,15,194,13],[179,27,194,25],[180,6,195,4],[181,6,196,4],[181,10,197,6],[181,17,197,13,"ArrayBuffer"],[181,28,197,24],[181,33,197,29],[181,44,197,40],[181,48,198,6],[181,55,198,13,"Uint8Array"],[181,65,198,23],[181,70,198,28],[181,81,198,39],[181,85,199,6,"value"],[181,90,199,11],[181,102,199,23,"ArrayBuffer"],[181,113,199,34],[181,115,200,6],[182,8,201,6],[182,15,201,13],[182,31,201,29,"String"],[182,37,201,35],[182,38,201,36,"Array"],[182,43,201,41],[182,44,201,42,"from"],[182,48,201,46],[182,49,201,47],[182,53,201,51,"Uint8Array"],[182,63,201,61],[182,64,201,62,"value"],[182,69,201,67],[182,70,201,68],[182,71,201,69],[182,72,201,70],[182,75,201,73],[183,6,202,4],[184,6,203,4],[184,13,203,11,"value"],[184,18,203,16],[185,4,204,2],[185,5,204,3],[186,4,206,2],[187,4,207,2,"disableInterception"],[187,23,207,21,"disableInterception"],[187,24,207,21],[187,26,207,24],[188,6,208,4],[188,10,208,8],[188,11,208,9,"isInterceptorEnabled"],[188,31,208,29],[188,33,208,31],[189,8,209,6],[190,6,210,4],[191,6,211,4,"isInterceptorEnabled"],[191,26,211,24],[191,29,211,27],[191,34,211,32],[192,6,212,4,"NativeWebSocketModule"],[192,27,212,25],[192,28,212,25,"default"],[192,35,212,25],[192,36,212,26,"send"],[192,40,212,30],[192,43,212,33,"originalRCTWebSocketSend"],[192,67,212,57],[193,6,213,4,"NativeWebSocketModule"],[193,27,213,25],[193,28,213,25,"default"],[193,35,213,25],[193,36,213,26,"sendBinary"],[193,46,213,36],[193,49,213,39,"originalRCTWebSocketSendBinary"],[193,79,213,69],[194,6,214,4,"NativeWebSocketModule"],[194,27,214,25],[194,28,214,25,"default"],[194,35,214,25],[194,36,214,26,"close"],[194,41,214,31],[194,44,214,34,"originalRCTWebSocketClose"],[194,69,214,59],[195,6,215,4,"NativeWebSocketModule"],[195,27,215,25],[195,28,215,25,"default"],[195,35,215,25],[195,36,215,26,"connect"],[195,43,215,33],[195,46,215,36,"originalRCTWebSocketConnect"],[195,73,215,63],[196,6,217,4,"connectCallback"],[196,21,217,19],[196,24,217,22],[196,28,217,26],[197,6,218,4,"closeCallback"],[197,19,218,17],[197,22,218,20],[197,26,218,24],[198,6,219,4,"sendCallback"],[198,18,219,16],[198,21,219,19],[198,25,219,23],[199,6,220,4,"onOpenCallback"],[199,20,220,18],[199,23,220,21],[199,27,220,25],[200,6,221,4,"onMessageCallback"],[200,23,221,21],[200,26,221,24],[200,30,221,28],[201,6,222,4,"onCloseCallback"],[201,21,222,19],[201,24,222,22],[201,28,222,26],[202,6,223,4,"onErrorCallback"],[202,21,223,19],[202,24,223,22],[202,28,223,26],[203,6,225,4,"WebSocketInterceptor"],[203,26,225,24],[203,27,225,25,"_unregisterEvents"],[203,44,225,42],[203,45,225,43],[203,46,225,44],[204,4,226,2],[205,2,227,0],[205,3,227,1],[206,2,229,0,"module"],[206,8,229,6],[206,9,229,7,"exports"],[206,16,229,14],[206,19,229,17,"WebSocketInterceptor"],[206,39,229,37],[207,0,229,38],[207,3]],"functionMap":{"names":["<global>","setCloseCallback","setSendCallback","setConnectCallback","setOnOpenCallback","setOnMessageCallback","setOnErrorCallback","setOnCloseCallback","isInterceptorEnabled","_unregisterEvents","subscriptions.forEach$argument_0","_registerEvents","eventEmitter.addListener$argument_1","enableInterception","NativeWebSocketModule.connect","NativeWebSocketModule.send","NativeWebSocketModule.sendBinary","NativeWebSocketModule.close","_arrayBufferToString","disableInterception"],"mappings":"AAA;EC0C;GDE;EEK;GFE;EGK;GHE;EIK;GJE;EKK;GLE;EMK;GNE;EOK;GPE;EQE;GRE;ESE;0BCC,eD;GTE;EWK;mDCE;ODS;gDCC;ODI;kDCC;ODI;kDCC;ODI;GXE;EaE;oCCc;KDU;iCEI;KFK;uCGI;KHK;kCII;KJS;GbG;EkBE;GlBa;EmBG;GnBmB"},"hasCjsExports":true},"type":"js/module"}]}