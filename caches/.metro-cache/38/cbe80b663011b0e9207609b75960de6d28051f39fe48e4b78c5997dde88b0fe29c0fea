{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"./BatchedBridge","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":22},"end":{"line":15,"column":48}}],"key":"pZMcJWKis6r8zImtFNHls0vi+s0=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":18},"end":{"line":16,"column":38}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4=","exportNames":["*"],"imports":1}},{"name":"../Utilities/defineLazyObjectProperty","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":187,"column":35},"end":{"line":187,"column":83}}],"key":"iAPGUMITE/2KH0DH4/f0/lVJtsQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\").default;\n  var BatchedBridge = require(_dependencyMap[1], \"./BatchedBridge\");\n  var invariant = require(_dependencyMap[2], \"invariant\");\n  function genModule(config, moduleID) {\n    if (!config) {\n      return null;\n    }\n    var _config = _slicedToArray(config, 5),\n      moduleName = _config[0],\n      constants = _config[1],\n      methods = _config[2],\n      promiseMethods = _config[3],\n      syncMethods = _config[4];\n    invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), \"Module name prefixes should've been stripped by the native side \" + \"but wasn't for \" + moduleName);\n    if (!constants && !methods) {\n      return {\n        name: moduleName\n      };\n    }\n    var module = {};\n    methods && methods.forEach((methodName, methodID) => {\n      var isPromise = promiseMethods && arrayContains(promiseMethods, methodID) || false;\n      var isSync = syncMethods && arrayContains(syncMethods, methodID) || false;\n      invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');\n      var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';\n      module[methodName] = genMethod(moduleID, methodID, methodType);\n    });\n    Object.assign(module, constants);\n    if (module.getConstants == null) {\n      module.getConstants = () => constants || Object.freeze({});\n    } else {\n      console.warn(`Unable to define method 'getConstants()' on NativeModule '${moduleName}'. NativeModule '${moduleName}' already has a constant or method called 'getConstants'. Please remove it.`);\n    }\n    if (__DEV__) {\n      BatchedBridge.createDebugLookup(moduleID, moduleName, methods);\n    }\n    return {\n      name: moduleName,\n      module\n    };\n  }\n  global.__fbGenNativeModule = genModule;\n  function loadModule(name, moduleID) {\n    invariant(global.nativeRequireModuleConfig, \"Can't lazily create module without nativeRequireModuleConfig\");\n    var config = global.nativeRequireModuleConfig(name);\n    var info = genModule(config, moduleID);\n    return info && info.module;\n  }\n  function genMethod(moduleID, methodID, type) {\n    var fn = null;\n    if (type === 'promise') {\n      fn = function promiseMethodWrapper() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        var enqueueingFrameError = new Error();\n        return new Promise((resolve, reject) => {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, args, data => resolve(data), errorData => reject(updateErrorWithErrorData(errorData, enqueueingFrameError)));\n        });\n      };\n    } else {\n      fn = function nonPromiseMethodWrapper() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        var lastArg = args.length > 0 ? args[args.length - 1] : null;\n        var secondLastArg = args.length > 1 ? args[args.length - 2] : null;\n        var hasSuccessCallback = typeof lastArg === 'function';\n        var hasErrorCallback = typeof secondLastArg === 'function';\n        hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');\n        var onSuccess = hasSuccessCallback ? lastArg : null;\n        var onFail = hasErrorCallback ? secondLastArg : null;\n        var callbackCount = hasSuccessCallback + hasErrorCallback;\n        var newArgs = args.slice(0, args.length - callbackCount);\n        if (type === 'sync') {\n          return BatchedBridge.callNativeSyncHook(moduleID, methodID, newArgs, onFail, onSuccess);\n        } else {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, newArgs, onFail, onSuccess);\n        }\n      };\n    }\n    fn.type = type;\n    return fn;\n  }\n  function arrayContains(array, value) {\n    return array.indexOf(value) !== -1;\n  }\n  function updateErrorWithErrorData(errorData, error) {\n    return Object.assign(error, errorData || {});\n  }\n  var NativeModules = {};\n  if (global.nativeModuleProxy) {\n    NativeModules = global.nativeModuleProxy;\n  } else if (!global.nativeExtensions) {\n    var bridgeConfig = global.__fbBatchedBridgeConfig;\n    invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');\n    var defineLazyObjectProperty = require(_dependencyMap[3], \"../Utilities/defineLazyObjectProperty\");\n    (bridgeConfig.remoteModuleConfig || []).forEach((config, moduleID) => {\n      var info = genModule(config, moduleID);\n      if (!info) {\n        return;\n      }\n      if (info.module) {\n        NativeModules[info.name] = info.module;\n      } else {\n        defineLazyObjectProperty(NativeModules, info.name, {\n          get: () => loadModule(info.name, moduleID)\n        });\n      }\n    });\n  }\n  module.exports = NativeModules;\n});","lineCount":116,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13],[4,6,11,13,"_slicedToArray"],[4,20,11,13],[4,23,11,13,"require"],[4,30,11,13],[4,31,11,13,"_dependencyMap"],[4,45,11,13],[4,90,11,13,"default"],[4,97,11,13],[5,2,15,0],[5,6,15,6,"BatchedBridge"],[5,19,15,19],[5,22,15,22,"require"],[5,29,15,29],[5,30,15,29,"_dependencyMap"],[5,44,15,29],[5,66,15,47],[5,67,15,48],[6,2,16,0],[6,6,16,6,"invariant"],[6,15,16,15],[6,18,16,18,"require"],[6,25,16,25],[6,26,16,25,"_dependencyMap"],[6,40,16,25],[6,56,16,37],[6,57,16,38],[7,2,28,0],[7,11,28,9,"genModule"],[7,20,28,18,"genModule"],[7,21,29,2,"config"],[7,27,29,23],[7,29,30,2,"moduleID"],[7,37,30,18],[7,39,35,2],[8,4,36,2],[8,8,36,6],[8,9,36,7,"config"],[8,15,36,13],[8,17,36,15],[9,6,37,4],[9,13,37,11],[9,17,37,15],[10,4,38,2],[11,4,40,2],[11,8,40,2,"_config"],[11,15,40,2],[11,18,40,2,"_slicedToArray"],[11,32,40,2],[11,33,40,72,"config"],[11,39,40,78],[12,6,40,9,"moduleName"],[12,16,40,19],[12,19,40,19,"_config"],[12,26,40,19],[13,6,40,21,"constants"],[13,15,40,30],[13,18,40,30,"_config"],[13,25,40,30],[14,6,40,32,"methods"],[14,13,40,39],[14,16,40,39,"_config"],[14,23,40,39],[15,6,40,41,"promiseMethods"],[15,20,40,55],[15,23,40,55,"_config"],[15,30,40,55],[16,6,40,57,"syncMethods"],[16,17,40,68],[16,20,40,68,"_config"],[16,27,40,68],[17,4,41,2,"invariant"],[17,13,41,11],[17,14,42,4],[17,15,42,5,"moduleName"],[17,25,42,15],[17,26,42,16,"startsWith"],[17,36,42,26],[17,37,42,27],[17,42,42,32],[17,43,42,33],[17,47,42,37],[17,48,42,38,"moduleName"],[17,58,42,48],[17,59,42,49,"startsWith"],[17,69,42,59],[17,70,42,60],[17,74,42,64],[17,75,42,65],[17,77,43,4],[17,143,43,70],[17,146,44,6],[17,163,44,23],[17,166,45,6,"moduleName"],[17,176,46,2],[17,177,46,3],[18,4,48,2],[18,8,48,6],[18,9,48,7,"constants"],[18,18,48,16],[18,22,48,20],[18,23,48,21,"methods"],[18,30,48,28],[18,32,48,30],[19,6,50,4],[19,13,50,11],[20,8,50,12,"name"],[20,12,50,16],[20,14,50,18,"moduleName"],[21,6,50,28],[21,7,50,29],[22,4,51,2],[23,4,53,2],[23,8,53,8,"module"],[23,14,53,33],[23,17,53,36],[23,18,53,37],[23,19,53,38],[24,4,54,2,"methods"],[24,11,54,9],[24,15,55,4,"methods"],[24,22,55,11],[24,23,55,12,"forEach"],[24,30,55,19],[24,31,55,20],[24,32,55,21,"methodName"],[24,42,55,31],[24,44,55,33,"methodID"],[24,52,55,41],[24,57,55,46],[25,6,56,6],[25,10,56,12,"isPromise"],[25,19,56,21],[25,22,57,9,"promiseMethods"],[25,36,57,23],[25,40,57,27,"arrayContains"],[25,53,57,40],[25,54,57,41,"promiseMethods"],[25,68,57,55],[25,70,57,57,"methodID"],[25,78,57,65],[25,79,57,66],[25,83,57,71],[25,88,57,76],[26,6,58,6],[26,10,58,12,"isSync"],[26,16,58,18],[26,19,59,9,"syncMethods"],[26,30,59,20],[26,34,59,24,"arrayContains"],[26,47,59,37],[26,48,59,38,"syncMethods"],[26,59,59,49],[26,61,59,51,"methodID"],[26,69,59,59],[26,70,59,60],[26,74,59,65],[26,79,59,70],[27,6,60,6,"invariant"],[27,15,60,15],[27,16,61,8],[27,17,61,9,"isPromise"],[27,26,61,18],[27,30,61,22],[27,31,61,23,"isSync"],[27,37,61,29],[27,39,62,8],[27,96,63,6],[27,97,63,7],[28,6,64,6],[28,10,64,12,"methodType"],[28,20,64,22],[28,23,64,25,"isPromise"],[28,32,64,34],[28,35,64,37],[28,44,64,46],[28,47,64,49,"isSync"],[28,53,64,55],[28,56,64,58],[28,62,64,64],[28,65,64,67],[28,72,64,74],[29,6,65,6,"module"],[29,12,65,12],[29,13,65,13,"methodName"],[29,23,65,23],[29,24,65,24],[29,27,65,27,"genMethod"],[29,36,65,36],[29,37,65,37,"moduleID"],[29,45,65,45],[29,47,65,47,"methodID"],[29,55,65,55],[29,57,65,57,"methodType"],[29,67,65,67],[29,68,65,68],[30,4,66,4],[30,5,66,5],[30,6,66,6],[31,4,68,2,"Object"],[31,10,68,8],[31,11,68,9,"assign"],[31,17,68,15],[31,18,68,16,"module"],[31,24,68,22],[31,26,68,24,"constants"],[31,35,68,33],[31,36,68,34],[32,4,70,2],[32,8,70,6,"module"],[32,14,70,12],[32,15,70,13,"getConstants"],[32,27,70,25],[32,31,70,29],[32,35,70,33],[32,37,70,35],[33,6,71,4,"module"],[33,12,71,10],[33,13,71,11,"getConstants"],[33,25,71,23],[33,28,71,26],[33,34,71,32,"constants"],[33,43,71,41],[33,47,71,45,"Object"],[33,53,71,51],[33,54,71,52,"freeze"],[33,60,71,58],[33,61,71,59],[33,62,71,60],[33,63,71,61],[33,64,71,62],[34,4,72,2],[34,5,72,3],[34,11,72,9],[35,6,73,4,"console"],[35,13,73,11],[35,14,73,12,"warn"],[35,18,73,16],[35,19,74,6],[35,80,74,67,"moduleName"],[35,90,74,77],[35,110,74,97,"moduleName"],[35,120,74,107],[35,197,75,4],[35,198,75,5],[36,4,76,2],[37,4,78,2],[37,8,78,6,"__DEV__"],[37,15,78,13],[37,17,78,15],[38,6,79,4,"BatchedBridge"],[38,19,79,17],[38,20,79,18,"createDebugLookup"],[38,37,79,35],[38,38,79,36,"moduleID"],[38,46,79,44],[38,48,79,46,"moduleName"],[38,58,79,56],[38,60,79,58,"methods"],[38,67,79,65],[38,68,79,66],[39,4,80,2],[40,4,82,2],[40,11,82,9],[41,6,82,10,"name"],[41,10,82,14],[41,12,82,16,"moduleName"],[41,22,82,26],[42,6,82,28,"module"],[43,4,82,34],[43,5,82,35],[44,2,83,0],[45,2,86,0,"global"],[45,8,86,6],[45,9,86,7,"__fbGenNativeModule"],[45,28,86,26],[45,31,86,29,"genModule"],[45,40,86,38],[46,2,88,0],[46,11,88,9,"loadModule"],[46,21,88,19,"loadModule"],[46,22,88,20,"name"],[46,26,88,32],[46,28,88,34,"moduleID"],[46,36,88,50],[46,38,88,60],[47,4,89,2,"invariant"],[47,13,89,11],[47,14,90,4,"global"],[47,20,90,10],[47,21,90,11,"nativeRequireModuleConfig"],[47,46,90,36],[47,48,91,4],[47,110,92,2],[47,111,92,3],[48,4,93,2],[48,8,93,8,"config"],[48,14,93,14],[48,17,93,17,"global"],[48,23,93,23],[48,24,93,24,"nativeRequireModuleConfig"],[48,49,93,49],[48,50,93,50,"name"],[48,54,93,54],[48,55,93,55],[49,4,94,2],[49,8,94,8,"info"],[49,12,94,12],[49,15,94,15,"genModule"],[49,24,94,24],[49,25,94,25,"config"],[49,31,94,31],[49,33,94,33,"moduleID"],[49,41,94,41],[49,42,94,42],[50,4,95,2],[50,11,95,9,"info"],[50,15,95,13],[50,19,95,17,"info"],[50,23,95,21],[50,24,95,22,"module"],[50,30,95,28],[51,2,96,0],[52,2,98,0],[52,11,98,9,"genMethod"],[52,20,98,18,"genMethod"],[52,21,98,19,"moduleID"],[52,29,98,35],[52,31,98,37,"methodID"],[52,39,98,53],[52,41,98,55,"type"],[52,45,98,71],[52,47,98,73],[53,4,99,2],[53,8,99,6,"fn"],[53,10,99,8],[53,13,99,11],[53,17,99,15],[54,4,100,2],[54,8,100,6,"type"],[54,12,100,10],[54,17,100,15],[54,26,100,24],[54,28,100,26],[55,6,101,4,"fn"],[55,8,101,6],[55,11,101,9],[55,20,101,18,"promiseMethodWrapper"],[55,40,101,38,"promiseMethodWrapper"],[55,41,101,38],[55,43,101,62],[56,8,101,62],[56,17,101,62,"_len"],[56,21,101,62],[56,24,101,62,"arguments"],[56,33,101,62],[56,34,101,62,"length"],[56,40,101,62],[56,42,101,42,"args"],[56,46,101,46],[56,53,101,46,"Array"],[56,58,101,46],[56,59,101,46,"_len"],[56,63,101,46],[56,66,101,46,"_key"],[56,70,101,46],[56,76,101,46,"_key"],[56,80,101,46],[56,83,101,46,"_len"],[56,87,101,46],[56,89,101,46,"_key"],[56,93,101,46],[57,10,101,42,"args"],[57,14,101,46],[57,15,101,46,"_key"],[57,19,101,46],[57,23,101,46,"arguments"],[57,32,101,46],[57,33,101,46,"_key"],[57,37,101,46],[58,8,101,46],[59,8,105,6],[59,12,105,12,"enqueueingFrameError"],[59,32,105,47],[59,35,105,50],[59,39,105,54,"Error"],[59,44,105,59],[59,45,105,60],[59,46,105,61],[60,8,106,6],[60,15,106,13],[60,19,106,17,"Promise"],[60,26,106,24],[60,27,106,25],[60,28,106,26,"resolve"],[60,35,106,33],[60,37,106,35,"reject"],[60,43,106,41],[60,48,106,46],[61,10,107,8,"BatchedBridge"],[61,23,107,21],[61,24,107,22,"enqueueNativeCall"],[61,41,107,39],[61,42,108,10,"moduleID"],[61,50,108,18],[61,52,109,10,"methodID"],[61,60,109,18],[61,62,110,10,"args"],[61,66,110,14],[61,68,111,10,"data"],[61,72,111,14],[61,76,111,18,"resolve"],[61,83,111,25],[61,84,111,26,"data"],[61,88,111,30],[61,89,111,31],[61,91,112,10,"errorData"],[61,100,112,19],[61,104,113,12,"reject"],[61,110,113,18],[61,111,114,14,"updateErrorWithErrorData"],[61,135,114,38],[61,136,115,17,"errorData"],[61,145,115,26],[61,147,116,16,"enqueueingFrameError"],[61,167,117,14],[61,168,118,12],[61,169,119,8],[61,170,119,9],[62,8,120,6],[62,9,120,7],[62,10,120,8],[63,6,121,4],[63,7,121,5],[64,4,122,2],[64,5,122,3],[64,11,122,9],[65,6,123,4,"fn"],[65,8,123,6],[65,11,123,9],[65,20,123,18,"nonPromiseMethodWrapper"],[65,43,123,41,"nonPromiseMethodWrapper"],[65,44,123,41],[65,46,123,65],[66,8,123,65],[66,17,123,65,"_len2"],[66,22,123,65],[66,25,123,65,"arguments"],[66,34,123,65],[66,35,123,65,"length"],[66,41,123,65],[66,43,123,45,"args"],[66,47,123,49],[66,54,123,49,"Array"],[66,59,123,49],[66,60,123,49,"_len2"],[66,65,123,49],[66,68,123,49,"_key2"],[66,73,123,49],[66,79,123,49,"_key2"],[66,84,123,49],[66,87,123,49,"_len2"],[66,92,123,49],[66,94,123,49,"_key2"],[66,99,123,49],[67,10,123,45,"args"],[67,14,123,49],[67,15,123,49,"_key2"],[67,20,123,49],[67,24,123,49,"arguments"],[67,33,123,49],[67,34,123,49,"_key2"],[67,39,123,49],[68,8,123,49],[69,8,124,6],[69,12,124,12,"lastArg"],[69,19,124,19],[69,22,124,22,"args"],[69,26,124,26],[69,27,124,27,"length"],[69,33,124,33],[69,36,124,36],[69,37,124,37],[69,40,124,40,"args"],[69,44,124,44],[69,45,124,45,"args"],[69,49,124,49],[69,50,124,50,"length"],[69,56,124,56],[69,59,124,59],[69,60,124,60],[69,61,124,61],[69,64,124,64],[69,68,124,68],[70,8,125,6],[70,12,125,12,"secondLastArg"],[70,25,125,25],[70,28,125,28,"args"],[70,32,125,32],[70,33,125,33,"length"],[70,39,125,39],[70,42,125,42],[70,43,125,43],[70,46,125,46,"args"],[70,50,125,50],[70,51,125,51,"args"],[70,55,125,55],[70,56,125,56,"length"],[70,62,125,62],[70,65,125,65],[70,66,125,66],[70,67,125,67],[70,70,125,70],[70,74,125,74],[71,8,126,6],[71,12,126,12,"hasSuccessCallback"],[71,30,126,30],[71,33,126,33],[71,40,126,40,"lastArg"],[71,47,126,47],[71,52,126,52],[71,62,126,62],[72,8,127,6],[72,12,127,12,"hasErrorCallback"],[72,28,127,28],[72,31,127,31],[72,38,127,38,"secondLastArg"],[72,51,127,51],[72,56,127,56],[72,66,127,66],[73,8,128,6,"hasErrorCallback"],[73,24,128,22],[73,28,129,8,"invariant"],[73,37,129,17],[73,38,130,10,"hasSuccessCallback"],[73,56,130,28],[73,58,131,10],[73,112,132,8],[73,113,132,9],[74,8,134,6],[74,12,134,12,"onSuccess"],[74,21,134,39],[74,24,134,42,"hasSuccessCallback"],[74,42,134,60],[74,45,134,63,"lastArg"],[74,52,134,70],[74,55,134,73],[74,59,134,77],[75,8,136,6],[75,12,136,12,"onFail"],[75,18,136,36],[75,21,136,39,"hasErrorCallback"],[75,37,136,55],[75,40,136,58,"secondLastArg"],[75,53,136,71],[75,56,136,74],[75,60,136,78],[76,8,138,6],[76,12,138,12,"callbackCount"],[76,25,138,25],[76,28,138,28,"hasSuccessCallback"],[76,46,138,46],[76,49,138,49,"hasErrorCallback"],[76,65,138,65],[77,8,139,6],[77,12,139,12,"newArgs"],[77,19,139,19],[77,22,139,22,"args"],[77,26,139,26],[77,27,139,27,"slice"],[77,32,139,32],[77,33,139,33],[77,34,139,34],[77,36,139,36,"args"],[77,40,139,40],[77,41,139,41,"length"],[77,47,139,47],[77,50,139,50,"callbackCount"],[77,63,139,63],[77,64,139,64],[78,8,140,6],[78,12,140,10,"type"],[78,16,140,14],[78,21,140,19],[78,27,140,25],[78,29,140,27],[79,10,141,8],[79,17,141,15,"BatchedBridge"],[79,30,141,28],[79,31,141,29,"callNativeSyncHook"],[79,49,141,47],[79,50,142,10,"moduleID"],[79,58,142,18],[79,60,143,10,"methodID"],[79,68,143,18],[79,70,144,10,"newArgs"],[79,77,144,17],[79,79,145,10,"onFail"],[79,85,145,16],[79,87,146,10,"onSuccess"],[79,96,147,8],[79,97,147,9],[80,8,148,6],[80,9,148,7],[80,15,148,13],[81,10,149,8,"BatchedBridge"],[81,23,149,21],[81,24,149,22,"enqueueNativeCall"],[81,41,149,39],[81,42,150,10,"moduleID"],[81,50,150,18],[81,52,151,10,"methodID"],[81,60,151,18],[81,62,152,10,"newArgs"],[81,69,152,17],[81,71,153,10,"onFail"],[81,77,153,16],[81,79,154,10,"onSuccess"],[81,88,155,8],[81,89,155,9],[82,8,156,6],[83,6,157,4],[83,7,157,5],[84,4,158,2],[85,4,160,2,"fn"],[85,6,160,4],[85,7,160,5,"type"],[85,11,160,9],[85,14,160,12,"type"],[85,18,160,16],[86,4,161,2],[86,11,161,9,"fn"],[86,13,161,11],[87,2,162,0],[88,2,164,0],[88,11,164,9,"arrayContains"],[88,24,164,22,"arrayContains"],[88,25,164,26,"array"],[88,30,164,50],[88,32,164,52,"value"],[88,37,164,60],[88,39,164,71],[89,4,165,2],[89,11,165,9,"array"],[89,16,165,14],[89,17,165,15,"indexOf"],[89,24,165,22],[89,25,165,23,"value"],[89,30,165,28],[89,31,165,29],[89,36,165,34],[89,37,165,35],[89,38,165,36],[90,2,166,0],[91,2,168,0],[91,11,168,9,"updateErrorWithErrorData"],[91,35,168,33,"updateErrorWithErrorData"],[91,36,169,2,"errorData"],[91,45,169,35],[91,47,170,2,"error"],[91,52,170,22],[91,54,171,17],[92,4,174,2],[92,11,174,9,"Object"],[92,17,174,15],[92,18,174,16,"assign"],[92,24,174,22],[92,25,174,23,"error"],[92,30,174,28],[92,32,174,30,"errorData"],[92,41,174,39],[92,45,174,43],[92,46,174,44],[92,47,174,45],[92,48,174,46],[93,2,175,0],[94,2,177,0],[94,6,177,4,"NativeModules"],[94,19,177,58],[94,22,177,61],[94,23,177,62],[94,24,177,63],[95,2,178,0],[95,6,178,4,"global"],[95,12,178,10],[95,13,178,11,"nativeModuleProxy"],[95,30,178,28],[95,32,178,30],[96,4,179,2,"NativeModules"],[96,17,179,15],[96,20,179,18,"global"],[96,26,179,24],[96,27,179,25,"nativeModuleProxy"],[96,44,179,42],[97,2,180,0],[97,3,180,1],[97,9,180,7],[97,13,180,11],[97,14,180,12,"global"],[97,20,180,18],[97,21,180,19,"nativeExtensions"],[97,37,180,35],[97,39,180,37],[98,4,181,2],[98,8,181,8,"bridgeConfig"],[98,20,181,20],[98,23,181,23,"global"],[98,29,181,29],[98,30,181,30,"__fbBatchedBridgeConfig"],[98,53,181,53],[99,4,182,2,"invariant"],[99,13,182,11],[99,14,183,4,"bridgeConfig"],[99,26,183,16],[99,28,184,4],[99,94,185,2],[99,95,185,3],[100,4,187,2],[100,8,187,8,"defineLazyObjectProperty"],[100,32,187,32],[100,35,187,35,"require"],[100,42,187,42],[100,43,187,42,"_dependencyMap"],[100,57,187,42],[100,101,187,82],[100,102,187,83],[101,4,188,2],[101,5,188,3,"bridgeConfig"],[101,17,188,15],[101,18,188,16,"remoteModuleConfig"],[101,36,188,34],[101,40,188,38],[101,42,188,40],[101,44,188,42,"forEach"],[101,51,188,49],[101,52,189,4],[101,53,189,5,"config"],[101,59,189,25],[101,61,189,27,"moduleID"],[101,69,189,43],[101,74,189,48],[102,6,192,6],[102,10,192,12,"info"],[102,14,192,16],[102,17,192,19,"genModule"],[102,26,192,28],[102,27,192,29,"config"],[102,33,192,35],[102,35,192,37,"moduleID"],[102,43,192,45],[102,44,192,46],[103,6,193,6],[103,10,193,10],[103,11,193,11,"info"],[103,15,193,15],[103,17,193,17],[104,8,194,8],[105,6,195,6],[106,6,197,6],[106,10,197,10,"info"],[106,14,197,14],[106,15,197,15,"module"],[106,21,197,21],[106,23,197,23],[107,8,198,8,"NativeModules"],[107,21,198,21],[107,22,198,22,"info"],[107,26,198,26],[107,27,198,27,"name"],[107,31,198,31],[107,32,198,32],[107,35,198,35,"info"],[107,39,198,39],[107,40,198,40,"module"],[107,46,198,46],[108,6,199,6],[108,7,199,7],[108,13,201,11],[109,8,202,8,"defineLazyObjectProperty"],[109,32,202,32],[109,33,202,33,"NativeModules"],[109,46,202,46],[109,48,202,48,"info"],[109,52,202,52],[109,53,202,53,"name"],[109,57,202,57],[109,59,202,59],[110,10,203,10,"get"],[110,13,203,13],[110,15,203,15,"get"],[110,16,203,15],[110,21,203,21,"loadModule"],[110,31,203,31],[110,32,203,32,"info"],[110,36,203,36],[110,37,203,37,"name"],[110,41,203,41],[110,43,203,43,"moduleID"],[110,51,203,51],[111,8,204,8],[111,9,204,9],[111,10,204,10],[112,6,205,6],[113,4,206,4],[113,5,207,2],[113,6,207,3],[114,2,208,0],[115,2,210,0,"module"],[115,8,210,6],[115,9,210,7,"exports"],[115,16,210,14],[115,19,210,17,"NativeModules"],[115,32,210,30],[116,0,210,31],[116,3]],"functionMap":{"names":["<global>","genModule","methods.forEach$argument_0","module.getConstants","loadModule","genMethod","promiseMethodWrapper","Promise$argument_0","BatchedBridge.enqueueNativeCall$argument_3","BatchedBridge.enqueueNativeCall$argument_4","nonPromiseMethodWrapper","arrayContains","updateErrorWithErrorData","forEach$argument_0","defineLazyObjectProperty$argument_2.get"],"mappings":"AAA;AC2B;oBC2B;KDW;0BEK,oCF;CDY;AIK;CJQ;AKE;SCG;yBCK;UCK,qBD;UEC;aFM;ODE;KDC;SKE;KLkC;CLK;AWE;CXE;AYE;CZO;Iac;eCc,qCD;KbG"},"hasCjsExports":true},"type":"js/module"}]}