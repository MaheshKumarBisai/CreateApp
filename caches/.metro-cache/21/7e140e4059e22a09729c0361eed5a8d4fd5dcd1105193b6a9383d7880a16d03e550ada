{"dependencies":[{"name":"nanoid/non-secure","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":43,"index":43}}],"key":"SN8WVal79eAEDQEpzmVqVAy5JJs=","exportNames":["*"],"imports":1}},{"name":"./BaseRouter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":45},"end":{"line":3,"column":38,"index":83}}],"key":"0eoEoXpCtYLRNFmhXLBjjgAloWI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return TabRouter;\n    }\n  });\n  Object.defineProperty(exports, \"TabActions\", {\n    enumerable: true,\n    get: function () {\n      return TabActions;\n    }\n  });\n  var _nanoidNonSecure = require(_dependencyMap[0], \"nanoid/non-secure\");\n  var _BaseRouter = require(_dependencyMap[1], \"./BaseRouter\");\n  var BaseRouter = _interopDefault(_BaseRouter);\n  var TYPE_ROUTE = 'route';\n  var TabActions = {\n    jumpTo(name, params) {\n      return {\n        type: 'JUMP_TO',\n        payload: {\n          name,\n          params\n        }\n      };\n    }\n  };\n  var getRouteHistory = (routes, index, backBehavior, initialRouteName) => {\n    var history = [{\n      type: TYPE_ROUTE,\n      key: routes[index].key\n    }];\n    var initialRouteIndex;\n    switch (backBehavior) {\n      case 'order':\n        for (var i = index; i > 0; i--) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[i - 1].key\n          });\n        }\n        break;\n      case 'firstRoute':\n        if (index !== 0) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[0].key\n          });\n        }\n        break;\n      case 'initialRoute':\n        initialRouteIndex = routes.findIndex(route => route.name === initialRouteName);\n        initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n        if (index !== initialRouteIndex) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[initialRouteIndex].key\n          });\n        }\n        break;\n      case 'history':\n        // The history will fill up on navigation\n        break;\n    }\n    return history;\n  };\n  var changeIndex = (state, index, backBehavior, initialRouteName) => {\n    var history;\n    if (backBehavior === 'history') {\n      var currentKey = state.routes[index].key;\n      history = state.history.filter(it => it.type === 'route' ? it.key !== currentKey : false).concat({\n        type: TYPE_ROUTE,\n        key: currentKey\n      });\n    } else {\n      history = getRouteHistory(state.routes, index, backBehavior, initialRouteName);\n    }\n    return {\n      ...state,\n      index,\n      history\n    };\n  };\n  function TabRouter(_ref) {\n    var initialRouteName = _ref.initialRouteName,\n      _ref$backBehavior = _ref.backBehavior,\n      backBehavior = _ref$backBehavior === void 0 ? 'firstRoute' : _ref$backBehavior;\n    var router = {\n      ...BaseRouter.default,\n      type: 'tab',\n      getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n          routeParamList = _ref2.routeParamList;\n        var index = initialRouteName !== undefined && routeNames.includes(initialRouteName) ? routeNames.indexOf(initialRouteName) : 0;\n        var routes = routeNames.map(name => ({\n          name,\n          key: `${name}-${(0, _nanoidNonSecure.nanoid)()}`,\n          params: routeParamList[name]\n        }));\n        var history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        return {\n          stale: false,\n          type: 'tab',\n          key: `tab-${(0, _nanoidNonSecure.nanoid)()}`,\n          index,\n          routeNames,\n          history,\n          routes\n        };\n      },\n      getRehydratedState(partialState, _ref3) {\n        var routeNames = _ref3.routeNames,\n          routeParamList = _ref3.routeParamList;\n        var state = partialState;\n        if (state.stale === false) {\n          return state;\n        }\n        var routes = routeNames.map(name => {\n          var route = state.routes.find(r => r.name === name);\n          return {\n            ...route,\n            name,\n            key: route && route.name === name && route.key ? route.key : `${name}-${(0, _nanoidNonSecure.nanoid)()}`,\n            params: routeParamList[name] !== undefined ? {\n              ...routeParamList[name],\n              ...(route ? route.params : undefined)\n            } : route ? route.params : undefined\n          };\n        });\n        var index = Math.min(Math.max(routeNames.indexOf(state.routes[state?.index ?? 0]?.name), 0), routes.length - 1);\n        var history = state.history?.filter(it => routes.find(r => r.key === it.key)) ?? [];\n        return changeIndex({\n          stale: false,\n          type: 'tab',\n          key: `tab-${(0, _nanoidNonSecure.nanoid)()}`,\n          index,\n          routeNames,\n          history,\n          routes\n        }, index, backBehavior, initialRouteName);\n      },\n      getStateForRouteNamesChange(state, _ref4) {\n        var routeNames = _ref4.routeNames,\n          routeParamList = _ref4.routeParamList,\n          routeKeyChanges = _ref4.routeKeyChanges;\n        var routes = routeNames.map(name => state.routes.find(r => r.name === name && !routeKeyChanges.includes(r.name)) || {\n          name,\n          key: `${name}-${(0, _nanoidNonSecure.nanoid)()}`,\n          params: routeParamList[name]\n        });\n        var index = Math.max(0, routeNames.indexOf(state.routes[state.index].name));\n        var history = state.history.filter(\n        // Type will always be 'route' for tabs, but could be different in a router extending this (e.g. drawer)\n        it => it.type !== 'route' || routes.find(r => r.key === it.key));\n        if (!history.length) {\n          history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        }\n        return {\n          ...state,\n          history,\n          routeNames,\n          routes,\n          index\n        };\n      },\n      getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(r => r.key === key);\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n        return changeIndex(state, index, backBehavior, initialRouteName);\n      },\n      getStateForAction(state, action, _ref5) {\n        var routeParamList = _ref5.routeParamList,\n          routeGetIdList = _ref5.routeGetIdList;\n        switch (action.type) {\n          case 'JUMP_TO':\n          case 'NAVIGATE':\n            {\n              var index = -1;\n              if (action.type === 'NAVIGATE' && action.payload.key) {\n                index = state.routes.findIndex(route => route.key === action.payload.key);\n              } else {\n                index = state.routes.findIndex(route => route.name === action.payload.name);\n              }\n              if (index === -1) {\n                return null;\n              }\n              return changeIndex({\n                ...state,\n                routes: state.routes.map((route, i) => {\n                  if (i !== index) {\n                    return route;\n                  }\n                  var getId = routeGetIdList[route.name];\n                  var currentId = getId?.({\n                    params: route.params\n                  });\n                  var nextId = getId?.({\n                    params: action.payload.params\n                  });\n                  var key = currentId === nextId ? route.key : `${route.name}-${(0, _nanoidNonSecure.nanoid)()}`;\n                  var params;\n                  if (action.type === 'NAVIGATE' && action.payload.merge && currentId === nextId) {\n                    params = action.payload.params !== undefined || routeParamList[route.name] !== undefined ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                      ...action.payload.params\n                    } : route.params;\n                  } else {\n                    params = routeParamList[route.name] !== undefined ? {\n                      ...routeParamList[route.name],\n                      ...action.payload.params\n                    } : action.payload.params;\n                  }\n                  var path = action.type === 'NAVIGATE' && action.payload.path != null ? action.payload.path : route.path;\n                  return params !== route.params || path !== route.path ? {\n                    ...route,\n                    key,\n                    path,\n                    params\n                  } : route;\n                })\n              }, index, backBehavior, initialRouteName);\n            }\n          case 'GO_BACK':\n            {\n              if (state.history.length === 1) {\n                return null;\n              }\n              var previousKey = state.history[state.history.length - 2].key;\n              var _index = state.routes.findIndex(route => route.key === previousKey);\n              if (_index === -1) {\n                return null;\n              }\n              return {\n                ...state,\n                history: state.history.slice(0, -1),\n                index: _index\n              };\n            }\n          default:\n            return BaseRouter.default.getStateForAction(state, action);\n        }\n      },\n      shouldActionChangeFocus(action) {\n        return action.type === 'NAVIGATE';\n      },\n      actionCreators: TabActions\n    };\n    return router;\n  }\n});","lineCount":264,"map":[[12,2,142,15,"Object"],[12,8,142,15],[12,9,142,15,"defineProperty"],[12,23,142,15],[12,24,142,15,"exports"],[12,31,142,15],[13,4,142,15,"enumerable"],[13,14,142,15],[14,4,142,15,"get"],[14,7,142,15],[14,18,142,15,"get"],[14,19,142,15],[15,6,142,15],[15,13,142,15,"TabRouter"],[15,22,142,15],[16,4,142,15],[17,2,142,15],[18,2,62,0,"Object"],[18,8,62,0],[18,9,62,0,"defineProperty"],[18,23,62,0],[18,24,62,0,"exports"],[18,31,62,0],[19,4,62,0,"enumerable"],[19,14,62,0],[20,4,62,0,"get"],[20,7,62,0],[20,18,62,0,"get"],[20,19,62,0],[21,6,62,0],[21,13,62,0,"TabActions"],[21,23,62,0],[22,4,62,0],[23,2,62,0],[24,2,1,0],[24,6,1,0,"_nanoidNonSecure"],[24,22,1,0],[24,25,1,0,"require"],[24,32,1,0],[24,33,1,0,"_dependencyMap"],[24,47,1,0],[25,2,3,0],[25,6,3,0,"_BaseRouter"],[25,17,3,0],[25,20,3,0,"require"],[25,27,3,0],[25,28,3,0,"_dependencyMap"],[25,42,3,0],[26,2,3,0],[26,6,3,0,"BaseRouter"],[26,16,3,0],[26,19,3,0,"_interopDefault"],[26,34,3,0],[26,35,3,0,"_BaseRouter"],[26,46,3,0],[27,2,60,0],[27,6,60,6,"TYPE_ROUTE"],[27,16,60,16],[27,19,60,19],[27,26,60,35],[28,2,62,7],[28,6,62,13,"TabActions"],[28,16,62,23],[28,19,62,26],[29,4,63,2,"jumpTo"],[29,10,63,8,"jumpTo"],[29,11,63,9,"name"],[29,15,63,21],[29,17,63,23,"params"],[29,23,63,38],[29,25,63,55],[30,6,64,4],[30,13,64,11],[31,8,64,13,"type"],[31,12,64,17],[31,14,64,19],[31,23,64,28],[32,8,64,30,"payload"],[32,15,64,37],[32,17,64,39],[33,10,64,41,"name"],[33,14,64,45],[34,10,64,47,"params"],[35,8,64,54],[36,6,64,56],[36,7,64,57],[37,4,65,2],[38,2,66,0],[38,3,66,1],[39,2,68,0],[39,6,68,6,"getRouteHistory"],[39,21,68,21],[39,24,68,24,"getRouteHistory"],[39,25,69,2,"routes"],[39,31,69,25],[39,33,70,2,"index"],[39,38,70,15],[39,40,71,2,"backBehavior"],[39,52,71,28],[39,54,72,2,"initialRouteName"],[39,70,72,38],[39,75,73,5],[40,4,74,2],[40,8,74,8,"history"],[40,15,74,15],[40,18,74,18],[40,19,74,19],[41,6,74,21,"type"],[41,10,74,25],[41,12,74,27,"TYPE_ROUTE"],[41,22,74,37],[42,6,74,39,"key"],[42,9,74,42],[42,11,74,44,"routes"],[42,17,74,50],[42,18,74,51,"index"],[42,23,74,56],[42,24,74,57],[42,25,74,58,"key"],[43,4,74,62],[43,5,74,63],[43,6,74,64],[44,4,75,2],[44,8,75,6,"initialRouteIndex"],[44,25,75,23],[45,4,77,2],[45,12,77,10,"backBehavior"],[45,24,77,22],[46,6,78,4],[46,11,78,9],[46,18,78,16],[47,8,79,6],[47,13,79,11],[47,17,79,15,"i"],[47,18,79,16],[47,21,79,19,"index"],[47,26,79,24],[47,28,79,26,"i"],[47,29,79,27],[47,32,79,30],[47,33,79,31],[47,35,79,33,"i"],[47,36,79,34],[47,38,79,36],[47,40,79,38],[48,10,80,8,"history"],[48,17,80,15],[48,18,80,16,"unshift"],[48,25,80,23],[48,26,80,24],[49,12,80,26,"type"],[49,16,80,30],[49,18,80,32,"TYPE_ROUTE"],[49,28,80,42],[50,12,80,44,"key"],[50,15,80,47],[50,17,80,49,"routes"],[50,23,80,55],[50,24,80,56,"i"],[50,25,80,57],[50,28,80,60],[50,29,80,61],[50,30,80,62],[50,31,80,63,"key"],[51,10,80,67],[51,11,80,68],[51,12,80,69],[52,8,81,6],[53,8,82,6],[54,6,83,4],[54,11,83,9],[54,23,83,21],[55,8,84,6],[55,12,84,10,"index"],[55,17,84,15],[55,22,84,20],[55,23,84,21],[55,25,84,23],[56,10,85,8,"history"],[56,17,85,15],[56,18,85,16,"unshift"],[56,25,85,23],[56,26,85,24],[57,12,86,10,"type"],[57,16,86,14],[57,18,86,16,"TYPE_ROUTE"],[57,28,86,26],[58,12,87,10,"key"],[58,15,87,13],[58,17,87,15,"routes"],[58,23,87,21],[58,24,87,22],[58,25,87,23],[58,26,87,24],[58,27,87,25,"key"],[59,10,88,8],[59,11,88,9],[59,12,88,10],[60,8,89,6],[61,8,90,6],[62,6,91,4],[62,11,91,9],[62,25,91,23],[63,8,92,6,"initialRouteIndex"],[63,25,92,23],[63,28,92,26,"routes"],[63,34,92,32],[63,35,92,33,"findIndex"],[63,44,92,42],[63,45,93,9,"route"],[63,50,93,14],[63,54,93,19,"route"],[63,59,93,24],[63,60,93,25,"name"],[63,64,93,29],[63,69,93,34,"initialRouteName"],[63,85,94,6],[63,86,94,7],[64,8,95,6,"initialRouteIndex"],[64,25,95,23],[64,28,95,26,"initialRouteIndex"],[64,45,95,43],[64,50,95,48],[64,51,95,49],[64,52,95,50],[64,55,95,53],[64,56,95,54],[64,59,95,57,"initialRouteIndex"],[64,76,95,74],[65,8,97,6],[65,12,97,10,"index"],[65,17,97,15],[65,22,97,20,"initialRouteIndex"],[65,39,97,37],[65,41,97,39],[66,10,98,8,"history"],[66,17,98,15],[66,18,98,16,"unshift"],[66,25,98,23],[66,26,98,24],[67,12,99,10,"type"],[67,16,99,14],[67,18,99,16,"TYPE_ROUTE"],[67,28,99,26],[68,12,100,10,"key"],[68,15,100,13],[68,17,100,15,"routes"],[68,23,100,21],[68,24,100,22,"initialRouteIndex"],[68,41,100,39],[68,42,100,40],[68,43,100,41,"key"],[69,10,101,8],[69,11,101,9],[69,12,101,10],[70,8,102,6],[71,8,103,6],[72,6,104,4],[72,11,104,9],[72,20,104,18],[73,8,105,6],[74,8,106,6],[75,4,107,2],[76,4,109,2],[76,11,109,9,"history"],[76,18,109,16],[77,2,110,0],[77,3,110,1],[78,2,112,0],[78,6,112,6,"changeIndex"],[78,17,112,17],[78,20,112,20,"changeIndex"],[78,21,113,2,"state"],[78,26,113,42],[78,28,114,2,"index"],[78,33,114,15],[78,35,115,2,"backBehavior"],[78,47,115,28],[78,49,116,2,"initialRouteName"],[78,65,116,38],[78,70,117,5],[79,4,118,2],[79,8,118,6,"history"],[79,15,118,13],[80,4,120,2],[80,8,120,6,"backBehavior"],[80,20,120,18],[80,25,120,23],[80,34,120,32],[80,36,120,34],[81,6,121,4],[81,10,121,10,"currentKey"],[81,20,121,20],[81,23,121,23,"state"],[81,28,121,28],[81,29,121,29,"routes"],[81,35,121,35],[81,36,121,36,"index"],[81,41,121,41],[81,42,121,42],[81,43,121,43,"key"],[81,46,121,46],[82,6,123,4,"history"],[82,13,123,11],[82,16,123,14,"state"],[82,21,123,19],[82,22,123,20,"history"],[82,29,123,27],[82,30,124,7,"filter"],[82,36,124,13],[82,37,124,15,"it"],[82,39,124,17],[82,43,124,23,"it"],[82,45,124,25],[82,46,124,26,"type"],[82,50,124,30],[82,55,124,35],[82,62,124,42],[82,65,124,45,"it"],[82,67,124,47],[82,68,124,48,"key"],[82,71,124,51],[82,76,124,56,"currentKey"],[82,86,124,66],[82,89,124,69],[82,94,124,75],[82,95,124,76],[82,96,125,7,"concat"],[82,102,125,13],[82,103,125,14],[83,8,125,16,"type"],[83,12,125,20],[83,14,125,22,"TYPE_ROUTE"],[83,24,125,32],[84,8,125,34,"key"],[84,11,125,37],[84,13,125,39,"currentKey"],[85,6,125,50],[85,7,125,51],[85,8,125,52],[86,4,126,2],[86,5,126,3],[86,11,126,9],[87,6,127,4,"history"],[87,13,127,11],[87,16,127,14,"getRouteHistory"],[87,31,127,29],[87,32,128,6,"state"],[87,37,128,11],[87,38,128,12,"routes"],[87,44,128,18],[87,46,129,6,"index"],[87,51,129,11],[87,53,130,6,"backBehavior"],[87,65,130,18],[87,67,131,6,"initialRouteName"],[87,83,132,4],[87,84,132,5],[88,4,133,2],[89,4,135,2],[89,11,135,9],[90,6,136,4],[90,9,136,7,"state"],[90,14,136,12],[91,6,137,4,"index"],[91,11,137,9],[92,6,138,4,"history"],[93,4,139,2],[93,5,139,3],[94,2,140,0],[94,3,140,1],[95,2,142,15],[95,11,142,24,"TabRouter"],[95,20,142,33,"TabRouter"],[95,21,142,33,"_ref"],[95,25,142,33],[95,27,145,21],[96,4,145,21],[96,8,143,2,"initialRouteName"],[96,24,143,18],[96,27,143,18,"_ref"],[96,31,143,18],[96,32,143,2,"initialRouteName"],[96,48,143,18],[97,6,143,18,"_ref$backBehavior"],[97,23,143,18],[97,26,143,18,"_ref"],[97,30,143,18],[97,31,144,2,"backBehavior"],[97,43,144,14],[98,6,144,2,"backBehavior"],[98,18,144,14],[98,21,144,14,"_ref$backBehavior"],[98,38,144,14],[98,52,144,17],[98,64,144,29],[98,67,144,29,"_ref$backBehavior"],[98,84,144,29],[99,4,146,2],[99,8,146,8,"router"],[99,14,149,3],[99,17,149,6],[100,6,150,4],[100,9,150,7,"BaseRouter"],[100,19,150,17],[100,20,150,17,"default"],[100,27,150,17],[101,6,152,4,"type"],[101,10,152,8],[101,12,152,10],[101,17,152,15],[102,6,154,4,"getInitialState"],[102,21,154,19,"getInitialState"],[102,22,154,19,"_ref2"],[102,27,154,19],[102,29,154,52],[103,8,154,52],[103,12,154,22,"routeNames"],[103,22,154,32],[103,25,154,32,"_ref2"],[103,30,154,32],[103,31,154,22,"routeNames"],[103,41,154,32],[104,10,154,34,"routeParamList"],[104,24,154,48],[104,27,154,48,"_ref2"],[104,32,154,48],[104,33,154,34,"routeParamList"],[104,47,154,48],[105,8,155,6],[105,12,155,12,"index"],[105,17,155,17],[105,20,156,8,"initialRouteName"],[105,36,156,24],[105,41,156,29,"undefined"],[105,50,156,38],[105,54,156,42,"routeNames"],[105,64,156,52],[105,65,156,53,"includes"],[105,73,156,61],[105,74,156,62,"initialRouteName"],[105,90,156,78],[105,91,156,79],[105,94,157,12,"routeNames"],[105,104,157,22],[105,105,157,23,"indexOf"],[105,112,157,30],[105,113,157,31,"initialRouteName"],[105,129,157,47],[105,130,157,48],[105,133,158,12],[105,134,158,13],[106,8,160,6],[106,12,160,12,"routes"],[106,18,160,18],[106,21,160,21,"routeNames"],[106,31,160,31],[106,32,160,32,"map"],[106,35,160,35],[106,36,160,37,"name"],[106,40,160,41],[106,45,160,47],[107,10,161,8,"name"],[107,14,161,12],[108,10,162,8,"key"],[108,13,162,11],[108,15,162,13],[108,18,162,16,"name"],[108,22,162,20],[108,26,162,24],[108,30,162,24,"nanoid"],[108,46,162,30],[108,47,162,30,"nanoid"],[108,53,162,30],[108,55,162,31],[108,56,162,32],[108,58,162,34],[109,10,163,8,"params"],[109,16,163,14],[109,18,163,16,"routeParamList"],[109,32,163,30],[109,33,163,31,"name"],[109,37,163,35],[110,8,164,6],[110,9,164,7],[110,10,164,8],[110,11,164,9],[111,8,166,6],[111,12,166,12,"history"],[111,19,166,19],[111,22,166,22,"getRouteHistory"],[111,37,166,37],[111,38,167,8,"routes"],[111,44,167,14],[111,46,168,8,"index"],[111,51,168,13],[111,53,169,8,"backBehavior"],[111,65,169,20],[111,67,170,8,"initialRouteName"],[111,83,171,6],[111,84,171,7],[112,8,173,6],[112,15,173,13],[113,10,174,8,"stale"],[113,15,174,13],[113,17,174,15],[113,22,174,20],[114,10,175,8,"type"],[114,14,175,12],[114,16,175,14],[114,21,175,19],[115,10,176,8,"key"],[115,13,176,11],[115,15,176,13],[115,22,176,20],[115,26,176,20,"nanoid"],[115,42,176,26],[115,43,176,26,"nanoid"],[115,49,176,26],[115,51,176,27],[115,52,176,28],[115,54,176,30],[116,10,177,8,"index"],[116,15,177,13],[117,10,178,8,"routeNames"],[117,20,178,18],[118,10,179,8,"history"],[118,17,179,15],[119,10,180,8,"routes"],[120,8,181,6],[120,9,181,7],[121,6,182,4],[121,7,182,5],[122,6,184,4,"getRehydratedState"],[122,24,184,22,"getRehydratedState"],[122,25,184,23,"partialState"],[122,37,184,35],[122,39,184,35,"_ref3"],[122,44,184,35],[122,46,184,69],[123,8,184,69],[123,12,184,39,"routeNames"],[123,22,184,49],[123,25,184,49,"_ref3"],[123,30,184,49],[123,31,184,39,"routeNames"],[123,41,184,49],[124,10,184,51,"routeParamList"],[124,24,184,65],[124,27,184,65,"_ref3"],[124,32,184,65],[124,33,184,51,"routeParamList"],[124,47,184,65],[125,8,185,6],[125,12,185,10,"state"],[125,17,185,15],[125,20,185,18,"partialState"],[125,32,185,30],[126,8,187,6],[126,12,187,10,"state"],[126,17,187,15],[126,18,187,16,"stale"],[126,23,187,21],[126,28,187,26],[126,33,187,31],[126,35,187,33],[127,10,188,8],[127,17,188,15,"state"],[127,22,188,20],[128,8,189,6],[129,8,191,6],[129,12,191,12,"routes"],[129,18,191,18],[129,21,191,21,"routeNames"],[129,31,191,31],[129,32,191,32,"map"],[129,35,191,35],[129,36,191,37,"name"],[129,40,191,41],[129,44,191,46],[130,10,192,8],[130,14,192,14,"route"],[130,19,192,19],[130,22,193,10,"state"],[130,27,193,15],[130,28,194,10,"routes"],[130,34,194,16],[130,35,194,17,"find"],[130,39,194,21],[130,40,194,23,"r"],[130,41,194,24],[130,45,194,29,"r"],[130,46,194,30],[130,47,194,31,"name"],[130,51,194,35],[130,56,194,40,"name"],[130,60,194,44],[130,61,194,45],[131,10,196,8],[131,17,196,15],[132,12,197,10],[132,15,197,13,"route"],[132,20,197,18],[133,12,198,10,"name"],[133,16,198,14],[134,12,199,10,"key"],[134,15,199,13],[134,17,200,12,"route"],[134,22,200,17],[134,26,200,21,"route"],[134,31,200,26],[134,32,200,27,"name"],[134,36,200,31],[134,41,200,36,"name"],[134,45,200,40],[134,49,200,44,"route"],[134,54,200,49],[134,55,200,50,"key"],[134,58,200,53],[134,61,201,16,"route"],[134,66,201,21],[134,67,201,22,"key"],[134,70,201,25],[134,73,202,16],[134,76,202,19,"name"],[134,80,202,23],[134,84,202,27],[134,88,202,27,"nanoid"],[134,104,202,33],[134,105,202,33,"nanoid"],[134,111,202,33],[134,113,202,34],[134,114,202,35],[134,116,202,37],[135,12,203,10,"params"],[135,18,203,16],[135,20,204,12,"routeParamList"],[135,34,204,26],[135,35,204,27,"name"],[135,39,204,31],[135,40,204,32],[135,45,204,37,"undefined"],[135,54,204,46],[135,57,205,16],[136,14,206,18],[136,17,206,21,"routeParamList"],[136,31,206,35],[136,32,206,36,"name"],[136,36,206,40],[136,37,206,41],[137,14,207,18],[137,18,207,22,"route"],[137,23,207,27],[137,26,207,30,"route"],[137,31,207,35],[137,32,207,36,"params"],[137,38,207,42],[137,41,207,45,"undefined"],[137,50,207,54],[138,12,208,16],[138,13,208,17],[138,16,209,16,"route"],[138,21,209,21],[138,24,210,16,"route"],[138,29,210,21],[138,30,210,22,"params"],[138,36,210,28],[138,39,211,16,"undefined"],[139,10,212,8],[139,11,212,9],[140,8,213,6],[140,9,213,7],[140,10,213,8],[141,8,215,6],[141,12,215,12,"index"],[141,17,215,17],[141,20,215,20,"Math"],[141,24,215,24],[141,25,215,25,"min"],[141,28,215,28],[141,29,216,8,"Math"],[141,33,216,12],[141,34,216,13,"max"],[141,37,216,16],[141,38,216,17,"routeNames"],[141,48,216,27],[141,49,216,28,"indexOf"],[141,56,216,35],[141,57,216,36,"state"],[141,62,216,41],[141,63,216,42,"routes"],[141,69,216,48],[141,70,216,49,"state"],[141,75,216,54],[141,77,216,56,"index"],[141,82,216,61],[141,86,216,65],[141,87,216,66],[141,88,216,67],[141,90,216,69,"name"],[141,94,216,73],[141,95,216,74],[141,97,216,76],[141,98,216,77],[141,99,216,78],[141,101,217,8,"routes"],[141,107,217,14],[141,108,217,15,"length"],[141,114,217,21],[141,117,217,24],[141,118,218,6],[141,119,218,7],[142,8,220,6],[142,12,220,12,"history"],[142,19,220,19],[142,22,221,8,"state"],[142,27,221,13],[142,28,221,14,"history"],[142,35,221,21],[142,37,221,23,"filter"],[142,43,221,29],[142,44,221,31,"it"],[142,46,221,33],[142,50,221,38,"routes"],[142,56,221,44],[142,57,221,45,"find"],[142,61,221,49],[142,62,221,51,"r"],[142,63,221,52],[142,67,221,57,"r"],[142,68,221,58],[142,69,221,59,"key"],[142,72,221,62],[142,77,221,67,"it"],[142,79,221,69],[142,80,221,70,"key"],[142,83,221,73],[142,84,221,74],[142,85,221,75],[142,89,222,8],[142,91,222,10],[143,8,224,6],[143,15,224,13,"changeIndex"],[143,26,224,24],[143,27,225,8],[144,10,226,10,"stale"],[144,15,226,15],[144,17,226,17],[144,22,226,22],[145,10,227,10,"type"],[145,14,227,14],[145,16,227,16],[145,21,227,21],[146,10,228,10,"key"],[146,13,228,13],[146,15,228,15],[146,22,228,22],[146,26,228,22,"nanoid"],[146,42,228,28],[146,43,228,28,"nanoid"],[146,49,228,28],[146,51,228,29],[146,52,228,30],[146,54,228,32],[147,10,229,10,"index"],[147,15,229,15],[148,10,230,10,"routeNames"],[148,20,230,20],[149,10,231,10,"history"],[149,17,231,17],[150,10,232,10,"routes"],[151,8,233,8],[151,9,233,9],[151,11,234,8,"index"],[151,16,234,13],[151,18,235,8,"backBehavior"],[151,30,235,20],[151,32,236,8,"initialRouteName"],[151,48,237,6],[151,49,237,7],[152,6,238,4],[152,7,238,5],[153,6,240,4,"getStateForRouteNamesChange"],[153,33,240,31,"getStateForRouteNamesChange"],[153,34,241,6,"state"],[153,39,241,11],[153,41,241,11,"_ref4"],[153,46,241,11],[153,48,243,6],[154,8,243,6],[154,12,242,8,"routeNames"],[154,22,242,18],[154,25,242,18,"_ref4"],[154,30,242,18],[154,31,242,8,"routeNames"],[154,41,242,18],[155,10,242,20,"routeParamList"],[155,24,242,34],[155,27,242,34,"_ref4"],[155,32,242,34],[155,33,242,20,"routeParamList"],[155,47,242,34],[156,10,242,36,"routeKeyChanges"],[156,25,242,51],[156,28,242,51,"_ref4"],[156,33,242,51],[156,34,242,36,"routeKeyChanges"],[156,49,242,51],[157,8,244,6],[157,12,244,12,"routes"],[157,18,244,18],[157,21,244,21,"routeNames"],[157,31,244,31],[157,32,244,32,"map"],[157,35,244,35],[157,36,245,9,"name"],[157,40,245,13],[157,44,246,10,"state"],[157,49,246,15],[157,50,246,16,"routes"],[157,56,246,22],[157,57,246,23,"find"],[157,61,246,27],[157,62,247,13,"r"],[157,63,247,14],[157,67,247,19,"r"],[157,68,247,20],[157,69,247,21,"name"],[157,73,247,25],[157,78,247,30,"name"],[157,82,247,34],[157,86,247,38],[157,87,247,39,"routeKeyChanges"],[157,102,247,54],[157,103,247,55,"includes"],[157,111,247,63],[157,112,247,64,"r"],[157,113,247,65],[157,114,247,66,"name"],[157,118,247,70],[157,119,248,10],[157,120,248,11],[157,124,248,15],[158,10,249,12,"name"],[158,14,249,16],[159,10,250,12,"key"],[159,13,250,15],[159,15,250,17],[159,18,250,20,"name"],[159,22,250,24],[159,26,250,28],[159,30,250,28,"nanoid"],[159,46,250,34],[159,47,250,34,"nanoid"],[159,53,250,34],[159,55,250,35],[159,56,250,36],[159,58,250,38],[160,10,251,12,"params"],[160,16,251,18],[160,18,251,20,"routeParamList"],[160,32,251,34],[160,33,251,35,"name"],[160,37,251,39],[161,8,252,10],[161,9,253,6],[161,10,253,7],[162,8,255,6],[162,12,255,12,"index"],[162,17,255,17],[162,20,255,20,"Math"],[162,24,255,24],[162,25,255,25,"max"],[162,28,255,28],[162,29,256,8],[162,30,256,9],[162,32,257,8,"routeNames"],[162,42,257,18],[162,43,257,19,"indexOf"],[162,50,257,26],[162,51,257,27,"state"],[162,56,257,32],[162,57,257,33,"routes"],[162,63,257,39],[162,64,257,40,"state"],[162,69,257,45],[162,70,257,46,"index"],[162,75,257,51],[162,76,257,52],[162,77,257,53,"name"],[162,81,257,57],[162,82,258,6],[162,83,258,7],[163,8,260,6],[163,12,260,10,"history"],[163,19,260,17],[163,22,260,20,"state"],[163,27,260,25],[163,28,260,26,"history"],[163,35,260,33],[163,36,260,34,"filter"],[163,42,260,40],[164,8,261,8],[165,8,262,9,"it"],[165,10,262,11],[165,14,262,16,"it"],[165,16,262,18],[165,17,262,19,"type"],[165,21,262,23],[165,26,262,28],[165,33,262,35],[165,37,262,39,"routes"],[165,43,262,45],[165,44,262,46,"find"],[165,48,262,50],[165,49,262,52,"r"],[165,50,262,53],[165,54,262,58,"r"],[165,55,262,59],[165,56,262,60,"key"],[165,59,262,63],[165,64,262,68,"it"],[165,66,262,70],[165,67,262,71,"key"],[165,70,262,74],[165,71,263,6],[165,72,263,7],[166,8,265,6],[166,12,265,10],[166,13,265,11,"history"],[166,20,265,18],[166,21,265,19,"length"],[166,27,265,25],[166,29,265,27],[167,10,266,8,"history"],[167,17,266,15],[167,20,266,18,"getRouteHistory"],[167,35,266,33],[167,36,267,10,"routes"],[167,42,267,16],[167,44,268,10,"index"],[167,49,268,15],[167,51,269,10,"backBehavior"],[167,63,269,22],[167,65,270,10,"initialRouteName"],[167,81,271,8],[167,82,271,9],[168,8,272,6],[169,8,274,6],[169,15,274,13],[170,10,275,8],[170,13,275,11,"state"],[170,18,275,16],[171,10,276,8,"history"],[171,17,276,15],[172,10,277,8,"routeNames"],[172,20,277,18],[173,10,278,8,"routes"],[173,16,278,14],[174,10,279,8,"index"],[175,8,280,6],[175,9,280,7],[176,6,281,4],[176,7,281,5],[177,6,283,4,"getStateForRouteFocus"],[177,27,283,25,"getStateForRouteFocus"],[177,28,283,26,"state"],[177,33,283,31],[177,35,283,33,"key"],[177,38,283,36],[177,40,283,38],[178,8,284,6],[178,12,284,12,"index"],[178,17,284,17],[178,20,284,20,"state"],[178,25,284,25],[178,26,284,26,"routes"],[178,32,284,32],[178,33,284,33,"findIndex"],[178,42,284,42],[178,43,284,44,"r"],[178,44,284,45],[178,48,284,50,"r"],[178,49,284,51],[178,50,284,52,"key"],[178,53,284,55],[178,58,284,60,"key"],[178,61,284,63],[178,62,284,64],[179,8,286,6],[179,12,286,10,"index"],[179,17,286,15],[179,22,286,20],[179,23,286,21],[179,24,286,22],[179,28,286,26,"index"],[179,33,286,31],[179,38,286,36,"state"],[179,43,286,41],[179,44,286,42,"index"],[179,49,286,47],[179,51,286,49],[180,10,287,8],[180,17,287,15,"state"],[180,22,287,20],[181,8,288,6],[182,8,290,6],[182,15,290,13,"changeIndex"],[182,26,290,24],[182,27,290,25,"state"],[182,32,290,30],[182,34,290,32,"index"],[182,39,290,37],[182,41,290,39,"backBehavior"],[182,53,290,51],[182,55,290,53,"initialRouteName"],[182,71,290,69],[182,72,290,70],[183,6,291,4],[183,7,291,5],[184,6,293,4,"getStateForAction"],[184,23,293,21,"getStateForAction"],[184,24,293,22,"state"],[184,29,293,27],[184,31,293,29,"action"],[184,37,293,35],[184,39,293,35,"_ref5"],[184,44,293,35],[184,46,293,73],[185,8,293,73],[185,12,293,39,"routeParamList"],[185,26,293,53],[185,29,293,53,"_ref5"],[185,34,293,53],[185,35,293,39,"routeParamList"],[185,49,293,53],[186,10,293,55,"routeGetIdList"],[186,24,293,69],[186,27,293,69,"_ref5"],[186,32,293,69],[186,33,293,55,"routeGetIdList"],[186,47,293,69],[187,8,294,6],[187,16,294,14,"action"],[187,22,294,20],[187,23,294,21,"type"],[187,27,294,25],[188,10,295,8],[188,15,295,13],[188,24,295,22],[189,10,296,8],[189,15,296,13],[189,25,296,23],[190,12,296,25],[191,14,297,10],[191,18,297,14,"index"],[191,23,297,19],[191,26,297,22],[191,27,297,23],[191,28,297,24],[192,14,299,10],[192,18,299,14,"action"],[192,24,299,20],[192,25,299,21,"type"],[192,29,299,25],[192,34,299,30],[192,44,299,40],[192,48,299,44,"action"],[192,54,299,50],[192,55,299,51,"payload"],[192,62,299,58],[192,63,299,59,"key"],[192,66,299,62],[192,68,299,64],[193,16,300,12,"index"],[193,21,300,17],[193,24,300,20,"state"],[193,29,300,25],[193,30,300,26,"routes"],[193,36,300,32],[193,37,300,33,"findIndex"],[193,46,300,42],[193,47,301,15,"route"],[193,52,301,20],[193,56,301,25,"route"],[193,61,301,30],[193,62,301,31,"key"],[193,65,301,34],[193,70,301,39,"action"],[193,76,301,45],[193,77,301,46,"payload"],[193,84,301,53],[193,85,301,54,"key"],[193,88,302,12],[193,89,302,13],[194,14,303,10],[194,15,303,11],[194,21,303,17],[195,16,304,12,"index"],[195,21,304,17],[195,24,304,20,"state"],[195,29,304,25],[195,30,304,26,"routes"],[195,36,304,32],[195,37,304,33,"findIndex"],[195,46,304,42],[195,47,305,15,"route"],[195,52,305,20],[195,56,305,25,"route"],[195,61,305,30],[195,62,305,31,"name"],[195,66,305,35],[195,71,305,40,"action"],[195,77,305,46],[195,78,305,47,"payload"],[195,85,305,54],[195,86,305,55,"name"],[195,90,306,12],[195,91,306,13],[196,14,307,10],[197,14,309,10],[197,18,309,14,"index"],[197,23,309,19],[197,28,309,24],[197,29,309,25],[197,30,309,26],[197,32,309,28],[198,16,310,12],[198,23,310,19],[198,27,310,23],[199,14,311,10],[200,14,313,10],[200,21,313,17,"changeIndex"],[200,32,313,28],[200,33,314,12],[201,16,315,14],[201,19,315,17,"state"],[201,24,315,22],[202,16,316,14,"routes"],[202,22,316,20],[202,24,316,22,"state"],[202,29,316,27],[202,30,316,28,"routes"],[202,36,316,34],[202,37,316,35,"map"],[202,40,316,38],[202,41,316,39],[202,42,316,40,"route"],[202,47,316,45],[202,49,316,47,"i"],[202,50,316,48],[202,55,316,53],[203,18,317,16],[203,22,317,20,"i"],[203,23,317,21],[203,28,317,26,"index"],[203,33,317,31],[203,35,317,33],[204,20,318,18],[204,27,318,25,"route"],[204,32,318,30],[205,18,319,16],[206,18,321,16],[206,22,321,22,"getId"],[206,27,321,27],[206,30,321,30,"routeGetIdList"],[206,44,321,44],[206,45,321,45,"route"],[206,50,321,50],[206,51,321,51,"name"],[206,55,321,55],[206,56,321,56],[207,18,323,16],[207,22,323,22,"currentId"],[207,31,323,31],[207,34,323,34,"getId"],[207,39,323,39],[207,42,323,42],[208,20,323,44,"params"],[208,26,323,50],[208,28,323,52,"route"],[208,33,323,57],[208,34,323,58,"params"],[209,18,323,65],[209,19,323,66],[209,20,323,67],[210,18,324,16],[210,22,324,22,"nextId"],[210,28,324,28],[210,31,324,31,"getId"],[210,36,324,36],[210,39,324,39],[211,20,324,41,"params"],[211,26,324,47],[211,28,324,49,"action"],[211,34,324,55],[211,35,324,56,"payload"],[211,42,324,63],[211,43,324,64,"params"],[212,18,324,71],[212,19,324,72],[212,20,324,73],[213,18,326,16],[213,22,326,22,"key"],[213,25,326,25],[213,28,327,18,"currentId"],[213,37,327,27],[213,42,327,32,"nextId"],[213,48,327,38],[213,51,328,22,"route"],[213,56,328,27],[213,57,328,28,"key"],[213,60,328,31],[213,63,329,22],[213,66,329,25,"route"],[213,71,329,30],[213,72,329,31,"name"],[213,76,329,35],[213,80,329,39],[213,84,329,39,"nanoid"],[213,100,329,45],[213,101,329,45,"nanoid"],[213,107,329,45],[213,109,329,46],[213,110,329,47],[213,112,329,49],[214,18,331,16],[214,22,331,20,"params"],[214,28,331,26],[215,18,333,16],[215,22,334,18,"action"],[215,28,334,24],[215,29,334,25,"type"],[215,33,334,29],[215,38,334,34],[215,48,334,44],[215,52,335,18,"action"],[215,58,335,24],[215,59,335,25,"payload"],[215,66,335,32],[215,67,335,33,"merge"],[215,72,335,38],[215,76,336,18,"currentId"],[215,85,336,27],[215,90,336,32,"nextId"],[215,96,336,38],[215,98,337,18],[216,20,338,18,"params"],[216,26,338,24],[216,29,339,20,"action"],[216,35,339,26],[216,36,339,27,"payload"],[216,43,339,34],[216,44,339,35,"params"],[216,50,339,41],[216,55,339,46,"undefined"],[216,64,339,55],[216,68,340,20,"routeParamList"],[216,82,340,34],[216,83,340,35,"route"],[216,88,340,40],[216,89,340,41,"name"],[216,93,340,45],[216,94,340,46],[216,99,340,51,"undefined"],[216,108,340,60],[216,111,341,24],[217,22,342,26],[217,25,342,29,"routeParamList"],[217,39,342,43],[217,40,342,44,"route"],[217,45,342,49],[217,46,342,50,"name"],[217,50,342,54],[217,51,342,55],[218,22,343,26],[218,25,343,29,"route"],[218,30,343,34],[218,31,343,35,"params"],[218,37,343,41],[219,22,344,26],[219,25,344,29,"action"],[219,31,344,35],[219,32,344,36,"payload"],[219,39,344,43],[219,40,344,44,"params"],[220,20,345,24],[220,21,345,25],[220,24,346,24,"route"],[220,29,346,29],[220,30,346,30,"params"],[220,36,346,36],[221,18,347,16],[221,19,347,17],[221,25,347,23],[222,20,348,18,"params"],[222,26,348,24],[222,29,349,20,"routeParamList"],[222,43,349,34],[222,44,349,35,"route"],[222,49,349,40],[222,50,349,41,"name"],[222,54,349,45],[222,55,349,46],[222,60,349,51,"undefined"],[222,69,349,60],[222,72,350,24],[223,22,351,26],[223,25,351,29,"routeParamList"],[223,39,351,43],[223,40,351,44,"route"],[223,45,351,49],[223,46,351,50,"name"],[223,50,351,54],[223,51,351,55],[224,22,352,26],[224,25,352,29,"action"],[224,31,352,35],[224,32,352,36,"payload"],[224,39,352,43],[224,40,352,44,"params"],[225,20,353,24],[225,21,353,25],[225,24,354,24,"action"],[225,30,354,30],[225,31,354,31,"payload"],[225,38,354,38],[225,39,354,39,"params"],[225,45,354,45],[226,18,355,16],[227,18,357,16],[227,22,357,22,"path"],[227,26,357,26],[227,29,358,18,"action"],[227,35,358,24],[227,36,358,25,"type"],[227,40,358,29],[227,45,358,34],[227,55,358,44],[227,59,358,48,"action"],[227,65,358,54],[227,66,358,55,"payload"],[227,73,358,62],[227,74,358,63,"path"],[227,78,358,67],[227,82,358,71],[227,86,358,75],[227,89,359,22,"action"],[227,95,359,28],[227,96,359,29,"payload"],[227,103,359,36],[227,104,359,37,"path"],[227,108,359,41],[227,111,360,22,"route"],[227,116,360,27],[227,117,360,28,"path"],[227,121,360,32],[228,18,362,16],[228,25,362,23,"params"],[228,31,362,29],[228,36,362,34,"route"],[228,41,362,39],[228,42,362,40,"params"],[228,48,362,46],[228,52,362,50,"path"],[228,56,362,54],[228,61,362,59,"route"],[228,66,362,64],[228,67,362,65,"path"],[228,71,362,69],[228,74,363,20],[229,20,363,22],[229,23,363,25,"route"],[229,28,363,30],[230,20,363,32,"key"],[230,23,363,35],[231,20,363,37,"path"],[231,24,363,41],[232,20,363,43,"params"],[233,18,363,50],[233,19,363,51],[233,22,364,20,"route"],[233,27,364,25],[234,16,365,14],[234,17,365,15],[235,14,366,12],[235,15,366,13],[235,17,367,12,"index"],[235,22,367,17],[235,24,368,12,"backBehavior"],[235,36,368,24],[235,38,369,12,"initialRouteName"],[235,54,370,10],[235,55,370,11],[236,12,371,8],[237,10,373,8],[237,15,373,13],[237,24,373,22],[238,12,373,24],[239,14,374,10],[239,18,374,14,"state"],[239,23,374,19],[239,24,374,20,"history"],[239,31,374,27],[239,32,374,28,"length"],[239,38,374,34],[239,43,374,39],[239,44,374,40],[239,46,374,42],[240,16,375,12],[240,23,375,19],[240,27,375,23],[241,14,376,10],[242,14,378,10],[242,18,378,16,"previousKey"],[242,29,378,27],[242,32,378,30,"state"],[242,37,378,35],[242,38,378,36,"history"],[242,45,378,43],[242,46,378,44,"state"],[242,51,378,49],[242,52,378,50,"history"],[242,59,378,57],[242,60,378,58,"length"],[242,66,378,64],[242,69,378,67],[242,70,378,68],[242,71,378,69],[242,72,378,70,"key"],[242,75,378,73],[243,14,379,10],[243,18,379,16,"index"],[243,24,379,21],[243,27,379,24,"state"],[243,32,379,29],[243,33,379,30,"routes"],[243,39,379,36],[243,40,379,37,"findIndex"],[243,49,379,46],[243,50,380,13,"route"],[243,55,380,18],[243,59,380,23,"route"],[243,64,380,28],[243,65,380,29,"key"],[243,68,380,32],[243,73,380,37,"previousKey"],[243,84,381,10],[243,85,381,11],[244,14,383,10],[244,18,383,14,"index"],[244,24,383,19],[244,29,383,24],[244,30,383,25],[244,31,383,26],[244,33,383,28],[245,16,384,12],[245,23,384,19],[245,27,384,23],[246,14,385,10],[247,14,387,10],[247,21,387,17],[248,16,388,12],[248,19,388,15,"state"],[248,24,388,20],[249,16,389,12,"history"],[249,23,389,19],[249,25,389,21,"state"],[249,30,389,26],[249,31,389,27,"history"],[249,38,389,34],[249,39,389,35,"slice"],[249,44,389,40],[249,45,389,41],[249,46,389,42],[249,48,389,44],[249,49,389,45],[249,50,389,46],[249,51,389,47],[250,16,390,12,"index"],[250,21,390,17],[250,23,390,12,"index"],[251,14,391,10],[251,15,391,11],[252,12,392,8],[253,10,394,8],[254,12,395,10],[254,19,395,17,"BaseRouter"],[254,29,395,27],[254,30,395,27,"default"],[254,37,395,27],[254,38,395,28,"getStateForAction"],[254,55,395,45],[254,56,395,46,"state"],[254,61,395,51],[254,63,395,53,"action"],[254,69,395,59],[254,70,395,60],[255,8,396,6],[256,6,397,4],[256,7,397,5],[257,6,399,4,"shouldActionChangeFocus"],[257,29,399,27,"shouldActionChangeFocus"],[257,30,399,28,"action"],[257,36,399,34],[257,38,399,36],[258,8,400,6],[258,15,400,13,"action"],[258,21,400,19],[258,22,400,20,"type"],[258,26,400,24],[258,31,400,29],[258,41,400,39],[259,6,401,4],[259,7,401,5],[260,6,403,4,"actionCreators"],[260,20,403,18],[260,22,403,20,"TabActions"],[261,4,404,2],[261,5,404,3],[262,4,406,2],[262,11,406,9,"router"],[262,17,406,15],[263,2,407,0],[264,0,407,1],[264,3]],"functionMap":{"names":["<global>","TabActions.jumpTo","getRouteHistory","routes.findIndex$argument_0","changeIndex","state.history.filter$argument_0","TabRouter","router.getInitialState","routeNames.map$argument_0","router.getRehydratedState","routes.find$argument_0","router.getStateForRouteNamesChange","state.routes.find$argument_0","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0","router.shouldActionChangeFocus"],"mappings":"AAA;EC8D;GDE;wBEG;QCyB,0CD;CFiB;oBIE;cCY,6DD;CJgB;eME;ICY;oCCM;QDI;KDkB;IGE;oCDO;sBEG,sBF;OCmB;8BJQ,oBK,uBL,CI;KHiB;IKE;QHK;YIE,2DJ;WGK;QNU,2CK,uBL,CM;KLmB;IOE;2CCC,oBD;KPO;ISE;cDQ,2CC;cDI,6CC;uCCW;eDiD;YDe,oCC;KTiB;IWE;KXE;CNM"},"hasCjsExports":false},"type":"js/module"}]}