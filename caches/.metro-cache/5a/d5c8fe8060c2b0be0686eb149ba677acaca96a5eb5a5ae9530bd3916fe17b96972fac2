{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/callSuper","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"378KbBHdmndC3iMXZ2Ix8oB3LeE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":414},"end":{"line":9,"column":31,"index":445}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":481},"end":{"line":11,"column":34,"index":515}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":516},"end":{"line":24,"column":22,"index":714}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../handlers/PanGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":856},"end":{"line":36,"column":39,"index":958}}],"key":"Z7WldcovRqVbXERv5Mkjp/bqHuA=","exportNames":["*"],"imports":1}},{"name":"../handlers/TapGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":37,"column":0,"index":959},"end":{"line":40,"column":39,"index":1061}}],"key":"+Msf+8iAdn6txPXicJvQZ0hdOZ0=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":41,"column":0,"index":1062},"end":{"line":41,"column":33,"index":1095}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-gesture-handler/src/components/DrawerLayout.tsx\"; // This component is based on RN's DrawerLayoutAndroid API\n  //\n  // It perhaps deserves to be put in a separate repo, but since it relies on\n  // react-native-gesture-handler library which isn't very popular at the moment I\n  // decided to keep it here for the time being. It will allow us to move faster\n  // and fix issues that may arise in gesture handler library that could be found\n  // when using the drawer component\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return DrawerLayout;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _babelRuntimeHelpersCallSuper = require(_dependencyMap[2], \"@babel/runtime/helpers/callSuper\");\n  var _callSuper = _interopDefault(_babelRuntimeHelpersCallSuper);\n  var _babelRuntimeHelpersInherits = require(_dependencyMap[3], \"@babel/runtime/helpers/inherits\");\n  var _inherits = _interopDefault(_babelRuntimeHelpersInherits);\n  var _react = require(_dependencyMap[4], \"react\");\n  var React = _interopNamespace(_react);\n  var _invariant = require(_dependencyMap[5], \"invariant\");\n  var invariant = _interopDefault(_invariant);\n  var _reactNative = require(_dependencyMap[6], \"react-native\");\n  var _handlersPanGestureHandler = require(_dependencyMap[7], \"../handlers/PanGestureHandler\");\n  var _handlersTapGestureHandler = require(_dependencyMap[8], \"../handlers/TapGestureHandler\");\n  var _State = require(_dependencyMap[9], \"../State\");\n  var _reactJsxDevRuntime = require(_dependencyMap[10], \"react/jsx-dev-runtime\");\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  // Animated.AnimatedInterpolation has been converted to a generic type\n  // in @types/react-native 0.70. This way we can maintain compatibility\n  // with all versions of @types/react-native`\n  var DrawerLayout = /*#__PURE__*/function (_Component) {\n    function DrawerLayout(_props) {\n      var _this;\n      (0, _classCallCheck.default)(this, DrawerLayout);\n      _this = (0, _callSuper.default)(this, DrawerLayout, [_props]);\n      _this.accessibilityIsModalView = /*#__PURE__*/React.createRef();\n      _this.pointerEventsView = /*#__PURE__*/React.createRef();\n      _this.panGestureHandler = /*#__PURE__*/React.createRef();\n      _this.drawerShown = false;\n      _this.updateAnimatedEvent = (props, state) => {\n        // Event definition is based on\n        var drawerPosition = props.drawerPosition,\n          drawerWidth = props.drawerWidth,\n          drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n          touchXValue = state.touchX,\n          drawerTranslation = state.drawerTranslation,\n          containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n        if (drawerPosition !== 'left') {\n          // Most of the code is written in a way to handle left-side drawer. In\n          // order to handle right-side drawer the only thing we need to do is to\n          // reverse events coming from gesture handler in a way they emulate\n          // left-side drawer gestures. E.g. dragX is simply -dragX, and touchX is\n          // calulcated by subtracing real touchX from the width of the container\n          // (such that when touch happens at the right edge the value is simply 0)\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue); // TODO(TS): (for all \"as\" in this file) make sure we can map this\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue)); // TODO(TS): make sure we can map this;\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        // While closing the drawer when user starts gesture outside of its area (in greyed\n        // out part of the window), we want the drawer to follow only once finger reaches the\n        // edge of the drawer.\n        // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n        // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n        // an arrow pointing left\n        // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    +---------------+    +---------------+    +---------------+    +---------------+\n        //\n        // For the above to work properly we define animated value that will keep\n        // start position of the gesture. Then we use that value to calculate how\n        // much we need to subtract from the dragX. If the gesture started on the\n        // greyed out area we take the distance from the edge of the drawer to the\n        // start position. Otherwise we don't subtract at all and the drawer be\n        // pulled back as soon as you start the pan.\n        //\n        // This is used only when drawerType is \"front\"\n        //\n        var translationX = dragX;\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition); // TODO: as above\n        }\n        _this.openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        var gestureOptions = {\n          useNativeDriver: props.useNativeAnimations\n        };\n        if (_this.props.onDrawerSlide) {\n          gestureOptions.listener = ev => {\n            var translationX = Math.floor(Math.abs(ev.nativeEvent.translationX));\n            var position = translationX / _this.state.containerWidth;\n            _this.props.onDrawerSlide?.(position);\n          };\n        }\n        _this.onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], gestureOptions);\n      };\n      _this.handleContainerLayout = _ref => {\n        var nativeEvent = _ref.nativeEvent;\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n      _this.emitStateChanged = (newState, drawerWillShow) => {\n        _this.props.onDrawerStateChanged?.(newState, drawerWillShow);\n      };\n      _this.openingHandlerStateChange = _ref2 => {\n        var nativeEvent = _ref2.nativeEvent;\n        if (nativeEvent.oldState === _State.State.ACTIVE) {\n          _this.handleRelease({\n            nativeEvent\n          });\n        } else if (nativeEvent.state === _State.State.ACTIVE) {\n          _this.emitStateChanged(DRAGGING, false);\n          _this.setState({\n            drawerState: DRAGGING\n          });\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n      _this.onTapHandlerStateChange = _ref3 => {\n        var nativeEvent = _ref3.nativeEvent;\n        if (_this.drawerShown && nativeEvent.oldState === _State.State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n      _this.handleRelease = _ref4 => {\n        var nativeEvent = _ref4.nativeEvent;\n        var _this$props = _this.props,\n          drawerWidth = _this$props.drawerWidth,\n          drawerPosition = _this$props.drawerPosition,\n          drawerType = _this$props.drawerType;\n        var containerWidth = _this.state.containerWidth;\n        var dragX = nativeEvent.translationX,\n          velocityX = nativeEvent.velocityX,\n          touchX = nativeEvent.x;\n        if (drawerPosition !== 'left') {\n          // See description in _updateAnimatedEvent about why events are flipped\n          // for right-side drawer\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (_this.drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n        if (shouldOpen) {\n          _this.animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this.animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n      _this.updateShowing = showing => {\n        _this.drawerShown = showing;\n        _this.accessibilityIsModalView.current?.setNativeProps({\n          accessibilityViewIsModal: showing\n        });\n        _this.pointerEventsView.current?.setNativeProps({\n          pointerEvents: showing ? 'auto' : 'none'\n        });\n        var _this$props2 = _this.props,\n          drawerPosition = _this$props2.drawerPosition,\n          minSwipeDistance = _this$props2.minSwipeDistance,\n          edgeWidth = _this$props2.edgeWidth;\n        var fromLeft = drawerPosition === 'left';\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (_this.drawerShown ? -1 : 1);\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: showing ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: showing ? undefined : edgeWidth\n        };\n        // @ts-ignore internal API, maybe could be fixed in handler types\n        _this.panGestureHandler.current?.setNativeProps({\n          hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance\n        });\n      };\n      _this.animateDrawer = (fromValue, toValue, velocity, speed) => {\n        _this.state.dragX.setValue(0);\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n        if (fromValue != null) {\n          var nextFramePosition = fromValue;\n          if (_this.props.useNativeAnimations) {\n            // When using native driver, we predict the next position of the\n            // animation because it takes one frame of a roundtrip to pass RELEASE\n            // event from native driver to JS before we can start animating. Without\n            // it, it is more noticable that the frame is dropped.\n            if (fromValue < toValue && velocity > 0) {\n              nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n            } else if (fromValue > toValue && velocity < 0) {\n              nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n            }\n          }\n          _this.state.drawerTranslation.setValue(nextFramePosition);\n        }\n        var willShow = toValue !== 0;\n        _this.updateShowing(willShow);\n        _this.emitStateChanged(SETTLING, willShow);\n        _this.setState({\n          drawerState: SETTLING\n        });\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity,\n          bounciness: 0,\n          toValue,\n          useNativeDriver: _this.props.useNativeAnimations,\n          speed: speed ?? undefined\n        }).start(_ref5 => {\n          var finished = _ref5.finished;\n          if (finished) {\n            _this.emitStateChanged(IDLE, willShow);\n            _this.setState({\n              drawerOpened: willShow\n            });\n            if (_this.state.drawerState !== DRAGGING) {\n              // it's possilbe that user started drag while the drawer\n              // was settling, don't override state in this case\n              _this.setState({\n                drawerState: IDLE\n              });\n            }\n            if (willShow) {\n              _this.props.onDrawerOpen?.();\n            } else {\n              _this.props.onDrawerClose?.();\n            }\n          }\n        });\n      };\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _this.animateDrawer(\n        // TODO: decide if it should be null or undefined is the proper value\n        undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would not be clickable\n        _this.forceUpdate();\n      };\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        // TODO: decide if it should be null or undefined is the proper value\n        _this.animateDrawer(undefined, 0, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would be still clickable\n        _this.forceUpdate();\n      };\n      _this.renderOverlay = () => {\n        /* Overlay styles */\n        (0, invariant.default)(_this.openValue, 'should be set');\n        var overlayOpacity;\n        if (_this.state.drawerState !== IDLE) {\n          overlayOpacity = _this.openValue;\n        } else {\n          overlayOpacity = _this.state.drawerOpened ? 1 : 0;\n        }\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_handlersTapGestureHandler.TapGestureHandler, {\n          onHandlerStateChange: _this.onTapHandlerStateChange,\n          children: /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            pointerEvents: _this.drawerShown ? 'auto' : 'none',\n            ref: _this.pointerEventsView,\n            style: [styles.overlay, dynamicOverlayStyles]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 9\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 7\n        }, _this);\n      };\n      _this.renderDrawer = () => {\n        var _this$props3 = _this.props,\n          drawerBackgroundColor = _this$props3.drawerBackgroundColor,\n          drawerWidth = _this$props3.drawerWidth,\n          drawerPosition = _this$props3.drawerPosition,\n          drawerType = _this$props3.drawerType,\n          drawerContainerStyle = _this$props3.drawerContainerStyle,\n          contentContainerStyle = _this$props3.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n\n        // we rely on row and row-reverse flex directions to position the drawer\n        // properly. Apparently for RTL these are flipped which requires us to use\n        // the opposite setting for the drawer to appear from left or right\n        // according to the drawerPosition prop\n        var reverseContentDirection = _reactNative.I18nManager.isRTL ? fromLeft : !fromLeft;\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this.openValue;\n        (0, invariant.default)(openValue, 'should be set');\n        var containerStyles;\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n        var drawerTranslateX = 0;\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          if (_this.state.drawerState !== IDLE) {\n            drawerTranslateX = openValue.interpolate({\n              inputRange: [0, 1],\n              outputRange: [closedDrawerOffset, 0],\n              extrapolate: 'clamp'\n            });\n          } else {\n            drawerTranslateX = _this.state.drawerOpened ? 0 : closedDrawerOffset;\n          }\n        }\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: reverseContentDirection ? 'row-reverse' : 'row'\n        };\n        return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this.handleContainerLayout,\n          children: [/*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n            importantForAccessibility: _this.drawerShown ? 'no-hide-descendants' : 'yes',\n            children: [typeof _this.props.children === 'function' ? _this.props.children(_this.openValue) : _this.props.children, _this.renderOverlay()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            pointerEvents: \"box-none\",\n            ref: _this.accessibilityIsModalView,\n            accessibilityViewIsModal: _this.drawerShown,\n            style: [styles.drawerContainer, drawerStyles, drawerContainerStyle],\n            children: /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.View, {\n              style: dynamicDrawerStyles,\n              children: _this.props.renderNavigationView(_this.openValue)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 7\n        }, _this);\n      };\n      _this.setPanGestureRef = ref => {\n        // TODO(TS): make sure it is OK taken from\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065#issuecomment-596081842\n        _this.panGestureHandler.current = ref;\n        _this.props.onGestureRef?.(ref);\n      };\n      var _dragX = new _reactNative.Animated.Value(0);\n      var _touchX = new _reactNative.Animated.Value(0);\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        containerWidth: 0,\n        drawerState: IDLE,\n        drawerOpened: false\n      };\n      _this.updateAnimatedEvent(_props, _this.state);\n      return _this;\n    }\n    (0, _inherits.default)(DrawerLayout, _Component);\n    return (0, _createClass.default)(DrawerLayout, [{\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this.updateAnimatedEvent(props, state);\n        }\n        return true;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props4 = this.props,\n          drawerPosition = _this$props4.drawerPosition,\n          drawerLockMode = _this$props4.drawerLockMode,\n          edgeWidth = _this$props4.edgeWidth,\n          minSwipeDistance = _this$props4.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (this.drawerShown ? -1 : 1);\n\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        };\n        return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_handlersPanGestureHandler.PanGestureHandler // @ts-ignore could be fixed in handler types\n        , {\n          userSelect: this.props.userSelect,\n          activeCursor: this.props.activeCursor,\n          mouseButton: this.props.mouseButton,\n          enableContextMenu: this.props.enableContextMenu,\n          ref: this.setPanGestureRef,\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance,\n          failOffsetY: [-15, 15],\n          onGestureEvent: this.onGestureEvent,\n          onHandlerStateChange: this.openingHandlerStateChange,\n          enableTrackpadTwoFingerGesture: this.props.enableTrackpadTwoFingerGesture,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open',\n          children: this.renderDrawer()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 7\n        }, this);\n      }\n    }]);\n  }(_react.Component);\n  DrawerLayout.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked',\n    enableTrackpadTwoFingerGesture: false\n  };\n  DrawerLayout.positions = {\n    Left: 'left',\n    Right: 'right'\n  };\n  var styles = _reactNative.StyleSheet.create({\n    drawerContainer: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1001,\n      flexDirection: 'row'\n    },\n    containerInFront: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1002\n    },\n    containerOnBack: {\n      ..._reactNative.StyleSheet.absoluteFillObject\n    },\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1000\n    }\n  });\n});","lineCount":562,"map":[[4,147,1,0],[5,2,2,0],[6,2,3,0],[7,2,4,0],[8,2,5,0],[9,2,6,0],[10,2,7,0],[11,2,7,0,"Object"],[11,8,7,0],[11,9,7,0,"defineProperty"],[11,23,7,0],[11,24,7,0,"exports"],[11,31,7,0],[12,4,7,0,"value"],[12,9,7,0],[13,2,7,0],[14,2,7,0],[14,11,7,0,"_interopDefault"],[14,27,7,0,"e"],[14,28,7,0],[15,4,7,0],[15,11,7,0,"e"],[15,12,7,0],[15,16,7,0,"e"],[15,17,7,0],[15,18,7,0,"__esModule"],[15,28,7,0],[15,31,7,0,"e"],[15,32,7,0],[16,6,7,0,"default"],[16,13,7,0],[16,15,7,0,"e"],[17,4,7,0],[18,2,7,0],[19,2,7,0],[19,11,7,0,"_interopNamespace"],[19,29,7,0,"e"],[19,30,7,0],[20,4,7,0],[20,8,7,0,"e"],[20,9,7,0],[20,13,7,0,"e"],[20,14,7,0],[20,15,7,0,"__esModule"],[20,25,7,0],[20,34,7,0,"e"],[20,35,7,0],[21,4,7,0],[21,8,7,0,"n"],[21,9,7,0],[22,4,7,0],[22,8,7,0,"e"],[22,9,7,0],[22,11,7,0,"Object"],[22,17,7,0],[22,18,7,0,"keys"],[22,22,7,0],[22,23,7,0,"e"],[22,24,7,0],[22,26,7,0,"forEach"],[22,33,7,0],[22,44,7,0,"k"],[22,45,7,0],[23,6,7,0],[23,10,7,0,"d"],[23,11,7,0],[23,14,7,0,"Object"],[23,20,7,0],[23,21,7,0,"getOwnPropertyDescriptor"],[23,45,7,0],[23,46,7,0,"e"],[23,47,7,0],[23,49,7,0,"k"],[23,50,7,0],[24,6,7,0,"Object"],[24,12,7,0],[24,13,7,0,"defineProperty"],[24,27,7,0],[24,28,7,0,"n"],[24,29,7,0],[24,31,7,0,"k"],[24,32,7,0],[24,34,7,0,"d"],[24,35,7,0],[24,36,7,0,"get"],[24,39,7,0],[24,42,7,0,"d"],[24,43,7,0],[25,8,7,0,"enumerable"],[25,18,7,0],[26,8,7,0,"get"],[26,11,7,0],[26,22,7,0,"get"],[26,23,7,0],[27,10,7,0],[27,17,7,0,"e"],[27,18,7,0],[27,19,7,0,"k"],[27,20,7,0],[28,8,7,0],[29,6,7,0],[30,4,7,0],[31,4,7,0,"n"],[31,5,7,0],[31,6,7,0,"default"],[31,13,7,0],[31,16,7,0,"e"],[31,17,7,0],[32,4,7,0],[32,11,7,0,"n"],[32,12,7,0],[33,2,7,0],[34,2,7,0,"Object"],[34,8,7,0],[34,9,7,0,"defineProperty"],[34,23,7,0],[34,24,7,0,"exports"],[34,31,7,0],[35,4,7,0,"enumerable"],[35,14,7,0],[36,4,7,0,"get"],[36,7,7,0],[36,18,7,0,"get"],[36,19,7,0],[37,6,7,0],[37,13,204,21,"DrawerLayout"],[37,25,204,33],[38,4,204,33],[39,2,204,33],[40,2,204,33],[40,6,204,33,"_babelRuntimeHelpersClassCallCheck"],[40,40,204,33],[40,43,204,33,"require"],[40,50,204,33],[40,51,204,33,"_dependencyMap"],[40,65,204,33],[41,2,204,33],[41,6,204,33,"_classCallCheck"],[41,21,204,33],[41,24,204,33,"_interopDefault"],[41,39,204,33],[41,40,204,33,"_babelRuntimeHelpersClassCallCheck"],[41,74,204,33],[42,2,204,33],[42,6,204,33,"_babelRuntimeHelpersCreateClass"],[42,37,204,33],[42,40,204,33,"require"],[42,47,204,33],[42,48,204,33,"_dependencyMap"],[42,62,204,33],[43,2,204,33],[43,6,204,33,"_createClass"],[43,18,204,33],[43,21,204,33,"_interopDefault"],[43,36,204,33],[43,37,204,33,"_babelRuntimeHelpersCreateClass"],[43,68,204,33],[44,2,204,33],[44,6,204,33,"_babelRuntimeHelpersCallSuper"],[44,35,204,33],[44,38,204,33,"require"],[44,45,204,33],[44,46,204,33,"_dependencyMap"],[44,60,204,33],[45,2,204,33],[45,6,204,33,"_callSuper"],[45,16,204,33],[45,19,204,33,"_interopDefault"],[45,34,204,33],[45,35,204,33,"_babelRuntimeHelpersCallSuper"],[45,64,204,33],[46,2,204,33],[46,6,204,33,"_babelRuntimeHelpersInherits"],[46,34,204,33],[46,37,204,33,"require"],[46,44,204,33],[46,45,204,33,"_dependencyMap"],[46,59,204,33],[47,2,204,33],[47,6,204,33,"_inherits"],[47,15,204,33],[47,18,204,33,"_interopDefault"],[47,33,204,33],[47,34,204,33,"_babelRuntimeHelpersInherits"],[47,62,204,33],[48,2,9,0],[48,6,9,0,"_react"],[48,12,9,0],[48,15,9,0,"require"],[48,22,9,0],[48,23,9,0,"_dependencyMap"],[48,37,9,0],[49,2,9,0],[49,6,9,0,"React"],[49,11,9,0],[49,14,9,0,"_interopNamespace"],[49,31,9,0],[49,32,9,0,"_react"],[49,38,9,0],[50,2,11,0],[50,6,11,0,"_invariant"],[50,16,11,0],[50,19,11,0,"require"],[50,26,11,0],[50,27,11,0,"_dependencyMap"],[50,41,11,0],[51,2,11,0],[51,6,11,0,"invariant"],[51,15,11,0],[51,18,11,0,"_interopDefault"],[51,33,11,0],[51,34,11,0,"_invariant"],[51,44,11,0],[52,2,12,0],[52,6,12,0,"_reactNative"],[52,18,12,0],[52,21,12,0,"require"],[52,28,12,0],[52,29,12,0,"_dependencyMap"],[52,43,12,0],[53,2,33,0],[53,6,33,0,"_handlersPanGestureHandler"],[53,32,33,0],[53,35,33,0,"require"],[53,42,33,0],[53,43,33,0,"_dependencyMap"],[53,57,33,0],[54,2,37,0],[54,6,37,0,"_handlersTapGestureHandler"],[54,32,37,0],[54,35,37,0,"require"],[54,42,37,0],[54,43,37,0,"_dependencyMap"],[54,57,37,0],[55,2,41,0],[55,6,41,0,"_State"],[55,12,41,0],[55,15,41,0,"require"],[55,22,41,0],[55,23,41,0,"_dependencyMap"],[55,37,41,0],[56,2,41,33],[56,6,41,33,"_reactJsxDevRuntime"],[56,25,41,33],[56,28,41,33,"require"],[56,35,41,33],[56,36,41,33,"_dependencyMap"],[56,50,41,33],[57,2,43,0],[57,6,43,6,"DRAG_TOSS"],[57,15,43,15],[57,18,43,18],[57,22,43,22],[58,2,45,0],[58,6,45,6,"IDLE"],[58,10,45,23],[58,13,45,26],[58,19,45,32],[59,2,46,0],[59,6,46,6,"DRAGGING"],[59,14,46,27],[59,17,46,30],[59,27,46,40],[60,2,47,0],[60,6,47,6,"SETTLING"],[60,14,47,27],[60,17,47,30],[60,27,47,40],[62,2,59,0],[63,2,60,0],[64,2,61,0],[65,2,61,0],[65,6,204,21,"DrawerLayout"],[65,18,204,33],[65,44,204,33,"_Component"],[65,54,204,33],[66,4,220,2],[66,13,220,2,"DrawerLayout"],[66,26,220,14,"props"],[66,32,220,38],[66,34,220,40],[67,6,220,40],[67,10,220,40,"_this"],[67,15,220,40],[68,6,220,40],[68,10,220,40,"_classCallCheck"],[68,25,220,40],[68,26,220,40,"default"],[68,33,220,40],[68,41,220,40,"DrawerLayout"],[68,53,220,40],[69,6,221,4,"_this"],[69,11,221,4],[69,18,221,4,"_callSuper"],[69,28,221,4],[69,29,221,4,"default"],[69,36,221,4],[69,44,221,4,"DrawerLayout"],[69,56,221,4],[69,59,221,10,"props"],[69,65,221,15],[70,6,221,17,"_this"],[70,11,221,17],[70,12,256,10,"accessibilityIsModalView"],[70,36,256,34],[70,52,256,37,"React"],[70,57,256,42],[70,58,256,43,"createRef"],[70,67,256,52],[70,68,256,59],[70,69,256,60],[71,6,256,60,"_this"],[71,11,256,60],[71,12,257,10,"pointerEventsView"],[71,29,257,27],[71,45,257,30,"React"],[71,50,257,35],[71,51,257,36,"createRef"],[71,60,257,45],[71,61,257,52],[71,62,257,53],[72,6,257,53,"_this"],[72,11,257,53],[72,12,258,10,"panGestureHandler"],[72,29,258,27],[72,45,258,30,"React"],[72,50,258,35],[72,51,258,36,"createRef"],[72,60,258,45],[72,61,258,72],[72,62,258,73],[73,6,258,73,"_this"],[73,11,258,73],[73,12,259,10,"drawerShown"],[73,23,259,21],[73,26,259,24],[73,31,259,29],[74,6,259,29,"_this"],[74,11,259,29],[74,12,266,10,"updateAnimatedEvent"],[74,31,266,29],[74,34,266,32],[74,35,267,4,"props"],[74,40,267,28],[74,42,268,4,"state"],[74,47,268,28],[74,52,269,7],[75,8,270,4],[76,8,271,4],[76,12,271,12,"drawerPosition"],[76,26,271,26],[76,29,271,56,"props"],[76,34,271,61],[76,35,271,12,"drawerPosition"],[76,49,271,26],[77,10,271,28,"drawerWidth"],[77,21,271,39],[77,24,271,56,"props"],[77,29,271,61],[77,30,271,28,"drawerWidth"],[77,41,271,39],[78,10,271,41,"drawerType"],[78,20,271,51],[78,23,271,56,"props"],[78,28,271,61],[78,29,271,41,"drawerType"],[78,39,271,51],[79,8,272,4],[79,12,273,13,"dragXValue"],[79,22,273,23],[79,25,277,8,"state"],[79,30,277,13],[79,31,273,6,"dragX"],[79,36,273,11],[80,10,274,14,"touchXValue"],[80,21,274,25],[80,24,277,8,"state"],[80,29,277,13],[80,30,274,6,"touchX"],[80,36,274,12],[81,10,275,6,"drawerTranslation"],[81,27,275,23],[81,30,277,8,"state"],[81,35,277,13],[81,36,275,6,"drawerTranslation"],[81,53,275,23],[82,10,276,6,"containerWidth"],[82,24,276,20],[82,27,277,8,"state"],[82,32,277,13],[82,33,276,6,"containerWidth"],[82,47,276,20],[83,8,279,4],[83,12,279,8,"dragX"],[83,17,279,13],[83,20,279,16,"dragXValue"],[83,30,279,26],[84,8,280,4],[84,12,280,8,"touchX"],[84,18,280,14],[84,21,280,17,"touchXValue"],[84,32,280,28],[85,8,282,4],[85,12,282,8,"drawerPosition"],[85,26,282,22],[85,31,282,27],[85,37,282,33],[85,39,282,35],[86,10,283,6],[87,10,284,6],[88,10,285,6],[89,10,286,6],[90,10,287,6],[91,10,288,6],[92,10,289,6,"dragX"],[92,15,289,11],[92,18,289,14,"Animated"],[92,30,289,22],[92,31,289,22,"Animated"],[92,39,289,22],[92,40,289,23,"multiply"],[92,48,289,31],[92,49,290,8],[92,53,290,12,"Animated"],[92,65,290,20],[92,66,290,20,"Animated"],[92,74,290,20],[92,75,290,21,"Value"],[92,80,290,26],[92,81,290,27],[92,82,290,28],[92,83,290,29],[92,84,290,30],[92,86,291,8,"dragXValue"],[92,96,292,6],[92,97,292,25],[92,98,292,26],[92,99,292,27],[93,10,293,6,"touchX"],[93,16,293,12],[93,19,293,15,"Animated"],[93,31,293,23],[93,32,293,23,"Animated"],[93,40,293,23],[93,41,293,24,"add"],[93,44,293,27],[93,45,294,8],[93,49,294,12,"Animated"],[93,61,294,20],[93,62,294,20,"Animated"],[93,70,294,20],[93,71,294,21,"Value"],[93,76,294,26],[93,77,294,27,"containerWidth"],[93,91,294,41],[93,92,294,42],[93,94,295,8,"Animated"],[93,106,295,16],[93,107,295,16,"Animated"],[93,115,295,16],[93,116,295,17,"multiply"],[93,124,295,25],[93,125,295,26],[93,129,295,30,"Animated"],[93,141,295,38],[93,142,295,38,"Animated"],[93,150,295,38],[93,151,295,39,"Value"],[93,156,295,44],[93,157,295,45],[93,158,295,46],[93,159,295,47],[93,160,295,48],[93,162,295,50,"touchXValue"],[93,173,295,61],[93,174,296,6],[93,175,296,25],[93,176,296,26],[93,177,296,27],[94,10,297,6,"touchXValue"],[94,21,297,17],[94,22,297,18,"setValue"],[94,30,297,26],[94,31,297,27,"containerWidth"],[94,45,297,41],[94,46,297,42],[95,8,298,4],[95,9,298,5],[95,15,298,11],[96,10,299,6,"touchXValue"],[96,21,299,17],[96,22,299,18,"setValue"],[96,30,299,26],[96,31,299,27],[96,32,299,28],[96,33,299,29],[97,8,300,4],[99,8,302,4],[100,8,303,4],[101,8,304,4],[102,8,305,4],[103,8,306,4],[104,8,307,4],[105,8,308,4],[106,8,309,4],[107,8,310,4],[108,8,311,4],[109,8,312,4],[110,8,313,4],[111,8,314,4],[112,8,315,4],[113,8,316,4],[114,8,317,4],[115,8,318,4],[116,8,319,4],[117,8,320,4],[118,8,321,4],[119,8,322,4],[120,8,323,4],[121,8,324,4],[122,8,325,4],[123,8,326,4],[124,8,327,4],[124,12,327,8,"translationX"],[124,24,327,20],[124,27,327,23,"dragX"],[124,32,327,28],[125,8,328,4],[125,12,328,8,"drawerType"],[125,22,328,18],[125,27,328,23],[125,34,328,30],[125,36,328,32],[126,10,329,6],[126,14,329,12,"startPositionX"],[126,28,329,26],[126,31,329,29,"Animated"],[126,43,329,37],[126,44,329,37,"Animated"],[126,52,329,37],[126,53,329,38,"add"],[126,56,329,41],[126,57,330,8,"touchX"],[126,63,330,14],[126,65,331,8,"Animated"],[126,77,331,16],[126,78,331,16,"Animated"],[126,86,331,16],[126,87,331,17,"multiply"],[126,95,331,25],[126,96,331,26],[126,100,331,30,"Animated"],[126,112,331,38],[126,113,331,38,"Animated"],[126,121,331,38],[126,122,331,39,"Value"],[126,127,331,44],[126,128,331,45],[126,129,331,46],[126,130,331,47],[126,131,331,48],[126,133,331,50,"dragX"],[126,138,331,55],[126,139,332,6],[126,140,332,7],[127,10,334,6],[127,14,334,12,"dragOffsetFromOnStartPosition"],[127,43,334,41],[127,46,334,44,"startPositionX"],[127,60,334,58],[127,61,334,59,"interpolate"],[127,72,334,70],[127,73,334,71],[128,12,335,8,"inputRange"],[128,22,335,18],[128,24,335,20],[128,25,335,21,"drawerWidth"],[128,36,335,32],[128,39,335,36],[128,40,335,37],[128,42,335,39,"drawerWidth"],[128,53,335,50],[128,55,335,53,"drawerWidth"],[128,66,335,64],[128,69,335,68],[128,70,335,69],[128,71,335,70],[129,12,336,8,"outputRange"],[129,23,336,19],[129,25,336,21],[129,26,336,22],[129,27,336,23],[129,29,336,25],[129,30,336,26],[129,32,336,28],[129,33,336,29],[130,10,337,6],[130,11,337,7],[130,12,337,8],[131,10,338,6,"translationX"],[131,22,338,18],[131,25,338,21,"Animated"],[131,37,338,29],[131,38,338,29,"Animated"],[131,46,338,29],[131,47,338,30,"add"],[131,50,338,33],[131,51,339,8,"dragX"],[131,56,339,13],[131,58,340,8,"dragOffsetFromOnStartPosition"],[131,87,341,6],[131,88,341,25],[131,89,341,26],[131,90,341,27],[132,8,342,4],[133,8,344,4,"_this"],[133,13,344,4],[133,14,344,9,"openValue"],[133,23,344,18],[133,26,344,21,"Animated"],[133,38,344,29],[133,39,344,29,"Animated"],[133,47,344,29],[133,48,344,30,"add"],[133,51,344,33],[133,52,344,34,"translationX"],[133,64,344,46],[133,66,344,48,"drawerTranslation"],[133,83,344,65],[133,84,344,66],[133,85,344,67,"interpolate"],[133,96,344,78],[133,97,344,79],[134,10,345,6,"inputRange"],[134,20,345,16],[134,22,345,18],[134,23,345,19],[134,24,345,20],[134,26,345,22,"drawerWidth"],[134,37,345,33],[134,38,345,35],[135,10,346,6,"outputRange"],[135,21,346,17],[135,23,346,19],[135,24,346,20],[135,25,346,21],[135,27,346,23],[135,28,346,24],[135,29,346,25],[136,10,347,6,"extrapolate"],[136,21,347,17],[136,23,347,19],[137,8,348,4],[137,9,348,5],[137,10,348,6],[138,8,350,4],[138,12,350,10,"gestureOptions"],[138,26,356,5],[138,29,356,8],[139,10,357,6,"useNativeDriver"],[139,25,357,21],[139,27,357,23,"props"],[139,32,357,28],[139,33,357,29,"useNativeAnimations"],[140,8,358,4],[140,9,358,5],[141,8,360,4],[141,12,360,8,"_this"],[141,17,360,8],[141,18,360,13,"props"],[141,23,360,18],[141,24,360,19,"onDrawerSlide"],[141,37,360,32],[141,39,360,34],[142,10,361,6,"gestureOptions"],[142,24,361,20],[142,25,361,21,"listener"],[142,33,361,29],[142,36,361,33,"ev"],[142,38,361,35],[142,42,361,40],[143,12,362,8],[143,16,362,14,"translationX"],[143,28,362,26],[143,31,362,29,"Math"],[143,35,362,33],[143,36,362,34,"floor"],[143,41,362,39],[143,42,362,40,"Math"],[143,46,362,44],[143,47,362,45,"abs"],[143,50,362,48],[143,51,362,49,"ev"],[143,53,362,51],[143,54,362,52,"nativeEvent"],[143,65,362,63],[143,66,362,64,"translationX"],[143,78,362,76],[143,79,362,77],[143,80,362,78],[144,12,363,8],[144,16,363,14,"position"],[144,24,363,22],[144,27,363,25,"translationX"],[144,39,363,37],[144,42,363,40,"_this"],[144,47,363,40],[144,48,363,45,"state"],[144,53,363,50],[144,54,363,51,"containerWidth"],[144,68,363,65],[145,12,365,8,"_this"],[145,17,365,8],[145,18,365,13,"props"],[145,23,365,18],[145,24,365,19,"onDrawerSlide"],[145,37,365,32],[145,40,365,35,"position"],[145,48,365,43],[145,49,365,44],[146,10,366,6],[146,11,366,7],[147,8,367,4],[148,8,369,4,"_this"],[148,13,369,4],[148,14,369,9,"onGestureEvent"],[148,28,369,23],[148,31,369,26,"Animated"],[148,43,369,34],[148,44,369,34,"Animated"],[148,52,369,34],[148,53,369,35,"event"],[148,58,369,40],[148,59,370,6],[148,60,370,7],[149,10,370,9,"nativeEvent"],[149,21,370,20],[149,23,370,22],[150,12,370,24,"translationX"],[150,24,370,36],[150,26,370,38,"dragXValue"],[150,36,370,48],[151,12,370,50,"x"],[151,13,370,51],[151,15,370,53,"touchXValue"],[152,10,370,65],[153,8,370,67],[153,9,370,68],[153,10,370,69],[153,12,371,6,"gestureOptions"],[153,26,372,4],[153,27,372,5],[154,6,373,2],[154,7,373,3],[155,6,373,3,"_this"],[155,11,373,3],[155,12,375,10,"handleContainerLayout"],[155,33,375,31],[155,36,375,34,"_ref"],[155,40,375,34],[155,44,375,74],[156,8,375,74],[156,12,375,37,"nativeEvent"],[156,23,375,48],[156,26,375,48,"_ref"],[156,30,375,48],[156,31,375,37,"nativeEvent"],[156,42,375,48],[157,8,376,4,"_this"],[157,13,376,4],[157,14,376,9,"setState"],[157,22,376,17],[157,23,376,18],[158,10,376,20,"containerWidth"],[158,24,376,34],[158,26,376,36,"nativeEvent"],[158,37,376,47],[158,38,376,48,"layout"],[158,44,376,54],[158,45,376,55,"width"],[159,8,376,61],[159,9,376,62],[159,10,376,63],[160,6,377,2],[160,7,377,3],[161,6,377,3,"_this"],[161,11,377,3],[161,12,379,10,"emitStateChanged"],[161,28,379,26],[161,31,379,29],[161,32,380,4,"newState"],[161,40,380,25],[161,42,381,4,"drawerWillShow"],[161,56,381,27],[161,61,382,7],[162,8,383,4,"_this"],[162,13,383,4],[162,14,383,9,"props"],[162,19,383,14],[162,20,383,15,"onDrawerStateChanged"],[162,40,383,35],[162,43,383,38,"newState"],[162,51,383,46],[162,53,383,48,"drawerWillShow"],[162,67,383,62],[162,68,383,63],[163,6,384,2],[163,7,384,3],[164,6,384,3,"_this"],[164,11,384,3],[164,12,386,10,"openingHandlerStateChange"],[164,37,386,35],[164,40,386,38,"_ref2"],[164,45,386,38],[164,49,388,64],[165,8,388,64],[165,12,387,4,"nativeEvent"],[165,23,387,15],[165,26,387,15,"_ref2"],[165,31,387,15],[165,32,387,4,"nativeEvent"],[165,43,387,15],[166,8,389,4],[166,12,389,8,"nativeEvent"],[166,23,389,19],[166,24,389,20,"oldState"],[166,32,389,28],[166,37,389,33,"State"],[166,43,389,38],[166,44,389,38,"State"],[166,49,389,38],[166,50,389,39,"ACTIVE"],[166,56,389,45],[166,58,389,47],[167,10,390,6,"_this"],[167,15,390,6],[167,16,390,11,"handleRelease"],[167,29,390,24],[167,30,390,25],[168,12,390,27,"nativeEvent"],[169,10,390,39],[169,11,390,40],[169,12,390,41],[170,8,391,4],[170,9,391,5],[170,15,391,11],[170,19,391,15,"nativeEvent"],[170,30,391,26],[170,31,391,27,"state"],[170,36,391,32],[170,41,391,37,"State"],[170,47,391,42],[170,48,391,42,"State"],[170,53,391,42],[170,54,391,43,"ACTIVE"],[170,60,391,49],[170,62,391,51],[171,10,392,6,"_this"],[171,15,392,6],[171,16,392,11,"emitStateChanged"],[171,32,392,27],[171,33,392,28,"DRAGGING"],[171,41,392,36],[171,43,392,38],[171,48,392,43],[171,49,392,44],[172,10,393,6,"_this"],[172,15,393,6],[172,16,393,11,"setState"],[172,24,393,19],[172,25,393,20],[173,12,393,22,"drawerState"],[173,23,393,33],[173,25,393,35,"DRAGGING"],[174,10,393,44],[174,11,393,45],[174,12,393,46],[175,10,394,6],[175,14,394,10,"_this"],[175,19,394,10],[175,20,394,15,"props"],[175,25,394,20],[175,26,394,21,"keyboardDismissMode"],[175,45,394,40],[175,50,394,45],[175,59,394,54],[175,61,394,56],[176,12,395,8,"Keyboard"],[176,24,395,16],[176,25,395,16,"Keyboard"],[176,33,395,16],[176,34,395,17,"dismiss"],[176,41,395,24],[176,42,395,25],[176,43,395,26],[177,10,396,6],[178,10,397,6],[178,14,397,10,"_this"],[178,19,397,10],[178,20,397,15,"props"],[178,25,397,20],[178,26,397,21,"hideStatusBar"],[178,39,397,34],[178,41,397,36],[179,12,398,8,"StatusBar"],[179,24,398,17],[179,25,398,17,"StatusBar"],[179,34,398,17],[179,35,398,18,"setHidden"],[179,44,398,27],[179,45,398,28],[179,49,398,32],[179,51,398,34,"_this"],[179,56,398,34],[179,57,398,39,"props"],[179,62,398,44],[179,63,398,45,"statusBarAnimation"],[179,81,398,63],[179,85,398,67],[179,92,398,74],[179,93,398,75],[180,10,399,6],[181,8,400,4],[182,6,401,2],[182,7,401,3],[183,6,401,3,"_this"],[183,11,401,3],[183,12,403,10,"onTapHandlerStateChange"],[183,35,403,33],[183,38,403,36,"_ref3"],[183,43,403,36],[183,47,405,64],[184,8,405,64],[184,12,404,4,"nativeEvent"],[184,23,404,15],[184,26,404,15,"_ref3"],[184,31,404,15],[184,32,404,4,"nativeEvent"],[184,43,404,15],[185,8,406,4],[185,12,407,6,"_this"],[185,17,407,6],[185,18,407,11,"drawerShown"],[185,29,407,22],[185,33,408,6,"nativeEvent"],[185,44,408,17],[185,45,408,18,"oldState"],[185,53,408,26],[185,58,408,31,"State"],[185,64,408,36],[185,65,408,36,"State"],[185,70,408,36],[185,71,408,37,"ACTIVE"],[185,77,408,43],[185,81,409,6,"_this"],[185,86,409,6],[185,87,409,11,"props"],[185,92,409,16],[185,93,409,17,"drawerLockMode"],[185,107,409,31],[185,112,409,36],[185,125,409,49],[185,127,410,6],[186,10,411,6,"_this"],[186,15,411,6],[186,16,411,11,"closeDrawer"],[186,27,411,22],[186,28,411,23],[186,29,411,24],[187,8,412,4],[188,6,413,2],[188,7,413,3],[189,6,413,3,"_this"],[189,11,413,3],[189,12,415,10,"handleRelease"],[189,25,415,23],[189,28,415,26,"_ref4"],[189,33,415,26],[189,37,417,64],[190,8,417,64],[190,12,416,4,"nativeEvent"],[190,23,416,15],[190,26,416,15,"_ref4"],[190,31,416,15],[190,32,416,4,"nativeEvent"],[190,43,416,15],[191,8,418,4],[191,12,418,4,"_this$props"],[191,23,418,4],[191,26,418,56,"_this"],[191,31,418,56],[191,32,418,61,"props"],[191,37,418,66],[192,10,418,12,"drawerWidth"],[192,21,418,23],[192,24,418,23,"_this$props"],[192,35,418,23],[192,36,418,12,"drawerWidth"],[192,47,418,23],[193,10,418,25,"drawerPosition"],[193,24,418,39],[193,27,418,39,"_this$props"],[193,38,418,39],[193,39,418,25,"drawerPosition"],[193,53,418,39],[194,10,418,41,"drawerType"],[194,20,418,51],[194,23,418,51,"_this$props"],[194,34,418,51],[194,35,418,41,"drawerType"],[194,45,418,51],[195,8,419,4],[195,12,419,12,"containerWidth"],[195,26,419,26],[195,29,419,31,"_this"],[195,34,419,31],[195,35,419,36,"state"],[195,40,419,41],[195,41,419,12,"containerWidth"],[195,55,419,26],[196,8,420,4],[196,12,420,24,"dragX"],[196,17,420,29],[196,20,420,56,"nativeEvent"],[196,31,420,67],[196,32,420,10,"translationX"],[196,44,420,22],[197,10,420,31,"velocityX"],[197,19,420,40],[197,22,420,56,"nativeEvent"],[197,33,420,67],[197,34,420,31,"velocityX"],[197,43,420,40],[198,10,420,45,"touchX"],[198,16,420,51],[198,19,420,56,"nativeEvent"],[198,30,420,67],[198,31,420,42,"x"],[198,32,420,43],[199,8,422,4],[199,12,422,8,"drawerPosition"],[199,26,422,22],[199,31,422,27],[199,37,422,33],[199,39,422,35],[200,10,423,6],[201,10,424,6],[202,10,425,6,"dragX"],[202,15,425,11],[202,18,425,14],[202,19,425,15,"dragX"],[202,24,425,20],[203,10,426,6,"touchX"],[203,16,426,12],[203,19,426,15,"containerWidth"],[203,33,426,29],[203,36,426,32,"touchX"],[203,42,426,38],[204,10,427,6,"velocityX"],[204,19,427,15],[204,22,427,18],[204,23,427,19,"velocityX"],[204,32,427,28],[205,8,428,4],[206,8,430,4],[206,12,430,10,"gestureStartX"],[206,25,430,23],[206,28,430,26,"touchX"],[206,34,430,32],[206,37,430,35,"dragX"],[206,42,430,40],[207,8,431,4],[207,12,431,8,"dragOffsetBasedOnStart"],[207,34,431,30],[207,37,431,33],[207,38,431,34],[208,8,433,4],[208,12,433,8,"drawerType"],[208,22,433,18],[208,27,433,23],[208,34,433,30],[208,36,433,32],[209,10,434,6,"dragOffsetBasedOnStart"],[209,32,434,28],[209,35,435,8,"gestureStartX"],[209,48,435,21],[209,51,435,24,"drawerWidth"],[209,62,435,36],[209,65,435,39,"gestureStartX"],[209,78,435,52],[209,81,435,55,"drawerWidth"],[209,92,435,67],[209,95,435,70],[209,96,435,71],[210,8,436,4],[211,8,438,4],[211,12,438,10,"startOffsetX"],[211,24,438,22],[211,27,439,6,"dragX"],[211,32,439,11],[211,35,439,14,"dragOffsetBasedOnStart"],[211,57,439,36],[211,61,439,40,"_this"],[211,66,439,40],[211,67,439,45,"drawerShown"],[211,78,439,56],[211,81,439,59,"drawerWidth"],[211,92,439,70],[211,95,439,74],[211,96,439,75],[211,97,439,76],[212,8,440,4],[212,12,440,10,"projOffsetX"],[212,23,440,21],[212,26,440,24,"startOffsetX"],[212,38,440,36],[212,41,440,39,"DRAG_TOSS"],[212,50,440,48],[212,53,440,51,"velocityX"],[212,62,440,60],[213,8,442,4],[213,12,442,10,"shouldOpen"],[213,22,442,20],[213,25,442,23,"projOffsetX"],[213,36,442,34],[213,39,442,37,"drawerWidth"],[213,50,442,48],[213,53,442,52],[213,54,442,53],[214,8,444,4],[214,12,444,8,"shouldOpen"],[214,22,444,18],[214,24,444,20],[215,10,445,6,"_this"],[215,15,445,6],[215,16,445,11,"animateDrawer"],[215,29,445,24],[215,30,445,25,"startOffsetX"],[215,42,445,37],[215,44,445,39,"drawerWidth"],[215,55,445,50],[215,57,445,53,"velocityX"],[215,66,445,62],[215,67,445,63],[216,8,446,4],[216,9,446,5],[216,15,446,11],[217,10,447,6,"_this"],[217,15,447,6],[217,16,447,11,"animateDrawer"],[217,29,447,24],[217,30,447,25,"startOffsetX"],[217,42,447,37],[217,44,447,39],[217,45,447,40],[217,47,447,42,"velocityX"],[217,56,447,51],[217,57,447,52],[218,8,448,4],[219,6,449,2],[219,7,449,3],[220,6,449,3,"_this"],[220,11,449,3],[220,12,451,10,"updateShowing"],[220,25,451,23],[220,28,451,27,"showing"],[220,35,451,43],[220,39,451,48],[221,8,452,4,"_this"],[221,13,452,4],[221,14,452,9,"drawerShown"],[221,25,452,20],[221,28,452,23,"showing"],[221,35,452,30],[222,8,453,4,"_this"],[222,13,453,4],[222,14,453,9,"accessibilityIsModalView"],[222,38,453,33],[222,39,453,34,"current"],[222,46,453,41],[222,48,453,43,"setNativeProps"],[222,62,453,57],[222,63,453,58],[223,10,454,6,"accessibilityViewIsModal"],[223,34,454,30],[223,36,454,32,"showing"],[224,8,455,4],[224,9,455,5],[224,10,455,6],[225,8,456,4,"_this"],[225,13,456,4],[225,14,456,9,"pointerEventsView"],[225,31,456,26],[225,32,456,27,"current"],[225,39,456,34],[225,41,456,36,"setNativeProps"],[225,55,456,50],[225,56,456,51],[226,10,457,6,"pointerEvents"],[226,23,457,19],[226,25,457,21,"showing"],[226,32,457,28],[226,35,457,31],[226,41,457,37],[226,44,457,40],[227,8,458,4],[227,9,458,5],[227,10,458,6],[228,8,459,4],[228,12,459,4,"_this$props2"],[228,24,459,4],[228,27,459,60,"_this"],[228,32,459,60],[228,33,459,65,"props"],[228,38,459,70],[229,10,459,12,"drawerPosition"],[229,24,459,26],[229,27,459,26,"_this$props2"],[229,39,459,26],[229,40,459,12,"drawerPosition"],[229,54,459,26],[230,10,459,28,"minSwipeDistance"],[230,26,459,44],[230,29,459,44,"_this$props2"],[230,41,459,44],[230,42,459,28,"minSwipeDistance"],[230,58,459,44],[231,10,459,46,"edgeWidth"],[231,19,459,55],[231,22,459,55,"_this$props2"],[231,34,459,55],[231,35,459,46,"edgeWidth"],[231,44,459,55],[232,8,460,4],[232,12,460,10,"fromLeft"],[232,20,460,18],[232,23,460,21,"drawerPosition"],[232,37,460,35],[232,42,460,40],[232,48,460,46],[233,8,461,4],[234,8,462,4],[235,8,463,4],[236,8,464,4],[236,12,464,10,"gestureOrientation"],[236,30,464,28],[236,33,465,6],[236,34,465,7,"fromLeft"],[236,42,465,15],[236,45,465,18],[236,46,465,19],[236,49,465,22],[236,50,465,23],[236,51,465,24],[236,56,465,29,"_this"],[236,61,465,29],[236,62,465,34,"drawerShown"],[236,73,465,45],[236,76,465,48],[236,77,465,49],[236,78,465,50],[236,81,465,53],[236,82,465,54],[236,83,465,55],[237,8,466,4],[238,8,467,4],[239,8,468,4],[240,8,469,4],[240,12,469,10,"hitSlop"],[240,19,469,17],[240,22,469,20,"fromLeft"],[240,30,469,28],[240,33,470,8],[241,10,470,10,"left"],[241,14,470,14],[241,16,470,16],[241,17,470,17],[242,10,470,19,"width"],[242,15,470,24],[242,17,470,26,"showing"],[242,24,470,33],[242,27,470,36,"undefined"],[242,36,470,45],[242,39,470,48,"edgeWidth"],[243,8,470,58],[243,9,470,59],[243,12,471,8],[244,10,471,10,"right"],[244,15,471,15],[244,17,471,17],[244,18,471,18],[245,10,471,20,"width"],[245,15,471,25],[245,17,471,27,"showing"],[245,24,471,34],[245,27,471,37,"undefined"],[245,36,471,46],[245,39,471,49,"edgeWidth"],[246,8,471,59],[246,9,471,60],[247,8,472,4],[248,8,473,4,"_this"],[248,13,473,4],[248,14,473,9,"panGestureHandler"],[248,31,473,26],[248,32,473,27,"current"],[248,39,473,34],[248,41,473,36,"setNativeProps"],[248,55,473,50],[248,56,473,51],[249,10,474,6,"hitSlop"],[249,17,474,13],[250,10,475,6,"activeOffsetX"],[250,23,475,19],[250,25,475,21,"gestureOrientation"],[250,43,475,39],[250,46,475,42,"minSwipeDistance"],[251,8,476,4],[251,9,476,5],[251,10,476,6],[252,6,477,2],[252,7,477,3],[253,6,477,3,"_this"],[253,11,477,3],[253,12,479,10,"animateDrawer"],[253,25,479,23],[253,28,479,26],[253,29,480,4,"fromValue"],[253,38,480,40],[253,40,481,4,"toValue"],[253,47,481,19],[253,49,482,4,"velocity"],[253,57,482,20],[253,59,483,4,"speed"],[253,64,483,18],[253,69,484,7],[254,8,485,4,"_this"],[254,13,485,4],[254,14,485,9,"state"],[254,19,485,14],[254,20,485,15,"dragX"],[254,25,485,20],[254,26,485,21,"setValue"],[254,34,485,29],[254,35,485,30],[254,36,485,31],[254,37,485,32],[255,8,486,4,"_this"],[255,13,486,4],[255,14,486,9,"state"],[255,19,486,14],[255,20,486,15,"touchX"],[255,26,486,21],[255,27,486,22,"setValue"],[255,35,486,30],[255,36,487,6,"_this"],[255,41,487,6],[255,42,487,11,"props"],[255,47,487,16],[255,48,487,17,"drawerPosition"],[255,62,487,31],[255,67,487,36],[255,73,487,42],[255,76,487,45],[255,77,487,46],[255,80,487,49,"_this"],[255,85,487,49],[255,86,487,54,"state"],[255,91,487,59],[255,92,487,60,"containerWidth"],[255,106,488,4],[255,107,488,5],[256,8,490,4],[256,12,490,8,"fromValue"],[256,21,490,17],[256,25,490,21],[256,29,490,25],[256,31,490,27],[257,10,491,6],[257,14,491,10,"nextFramePosition"],[257,31,491,27],[257,34,491,30,"fromValue"],[257,43,491,39],[258,10,492,6],[258,14,492,10,"_this"],[258,19,492,10],[258,20,492,15,"props"],[258,25,492,20],[258,26,492,21,"useNativeAnimations"],[258,45,492,40],[258,47,492,42],[259,12,493,8],[260,12,494,8],[261,12,495,8],[262,12,496,8],[263,12,497,8],[263,16,497,12,"fromValue"],[263,25,497,21],[263,28,497,24,"toValue"],[263,35,497,31],[263,39,497,35,"velocity"],[263,47,497,43],[263,50,497,46],[263,51,497,47],[263,53,497,49],[264,14,498,10,"nextFramePosition"],[264,31,498,27],[264,34,498,30,"Math"],[264,38,498,34],[264,39,498,35,"min"],[264,42,498,38],[264,43,498,39,"fromValue"],[264,52,498,48],[264,55,498,51,"velocity"],[264,63,498,59],[264,66,498,62],[264,70,498,66],[264,72,498,68,"toValue"],[264,79,498,75],[264,80,498,76],[265,12,499,8],[265,13,499,9],[265,19,499,15],[265,23,499,19,"fromValue"],[265,32,499,28],[265,35,499,31,"toValue"],[265,42,499,38],[265,46,499,42,"velocity"],[265,54,499,50],[265,57,499,53],[265,58,499,54],[265,60,499,56],[266,14,500,10,"nextFramePosition"],[266,31,500,27],[266,34,500,30,"Math"],[266,38,500,34],[266,39,500,35,"max"],[266,42,500,38],[266,43,500,39,"fromValue"],[266,52,500,48],[266,55,500,51,"velocity"],[266,63,500,59],[266,66,500,62],[266,70,500,66],[266,72,500,68,"toValue"],[266,79,500,75],[266,80,500,76],[267,12,501,8],[268,10,502,6],[269,10,503,6,"_this"],[269,15,503,6],[269,16,503,11,"state"],[269,21,503,16],[269,22,503,17,"drawerTranslation"],[269,39,503,34],[269,40,503,35,"setValue"],[269,48,503,43],[269,49,503,44,"nextFramePosition"],[269,66,503,61],[269,67,503,62],[270,8,504,4],[271,8,506,4],[271,12,506,10,"willShow"],[271,20,506,18],[271,23,506,21,"toValue"],[271,30,506,28],[271,35,506,33],[271,36,506,34],[272,8,507,4,"_this"],[272,13,507,4],[272,14,507,9,"updateShowing"],[272,27,507,22],[272,28,507,23,"willShow"],[272,36,507,31],[272,37,507,32],[273,8,508,4,"_this"],[273,13,508,4],[273,14,508,9,"emitStateChanged"],[273,30,508,25],[273,31,508,26,"SETTLING"],[273,39,508,34],[273,41,508,36,"willShow"],[273,49,508,44],[273,50,508,45],[274,8,509,4,"_this"],[274,13,509,4],[274,14,509,9,"setState"],[274,22,509,17],[274,23,509,18],[275,10,509,20,"drawerState"],[275,21,509,31],[275,23,509,33,"SETTLING"],[276,8,509,42],[276,9,509,43],[276,10,509,44],[277,8,510,4],[277,12,510,8,"_this"],[277,17,510,8],[277,18,510,13,"props"],[277,23,510,18],[277,24,510,19,"hideStatusBar"],[277,37,510,32],[277,39,510,34],[278,10,511,6,"StatusBar"],[278,22,511,15],[278,23,511,15,"StatusBar"],[278,32,511,15],[278,33,511,16,"setHidden"],[278,42,511,25],[278,43,511,26,"willShow"],[278,51,511,34],[278,53,511,36,"_this"],[278,58,511,36],[278,59,511,41,"props"],[278,64,511,46],[278,65,511,47,"statusBarAnimation"],[278,83,511,65],[278,87,511,69],[278,94,511,76],[278,95,511,77],[279,8,512,4],[280,8,513,4,"Animated"],[280,20,513,12],[280,21,513,12,"Animated"],[280,29,513,12],[280,30,513,13,"spring"],[280,36,513,19],[280,37,513,20,"_this"],[280,42,513,20],[280,43,513,25,"state"],[280,48,513,30],[280,49,513,31,"drawerTranslation"],[280,66,513,48],[280,68,513,50],[281,10,514,6,"velocity"],[281,18,514,14],[282,10,515,6,"bounciness"],[282,20,515,16],[282,22,515,18],[282,23,515,19],[283,10,516,6,"toValue"],[283,17,516,13],[284,10,517,6,"useNativeDriver"],[284,25,517,21],[284,27,517,23,"_this"],[284,32,517,23],[284,33,517,28,"props"],[284,38,517,33],[284,39,517,34,"useNativeAnimations"],[284,58,517,54],[285,10,518,6,"speed"],[285,15,518,11],[285,17,518,13,"speed"],[285,22,518,18],[285,26,518,22,"undefined"],[286,8,519,4],[286,9,519,5],[286,10,519,6],[286,11,519,7,"start"],[286,16,519,12],[286,17,519,13,"_ref5"],[286,22,519,13],[286,26,519,31],[287,10,519,31],[287,14,519,16,"finished"],[287,22,519,24],[287,25,519,24,"_ref5"],[287,30,519,24],[287,31,519,16,"finished"],[287,39,519,24],[288,10,520,6],[288,14,520,10,"finished"],[288,22,520,18],[288,24,520,20],[289,12,521,8,"_this"],[289,17,521,8],[289,18,521,13,"emitStateChanged"],[289,34,521,29],[289,35,521,30,"IDLE"],[289,39,521,34],[289,41,521,36,"willShow"],[289,49,521,44],[289,50,521,45],[290,12,522,8,"_this"],[290,17,522,8],[290,18,522,13,"setState"],[290,26,522,21],[290,27,522,22],[291,14,522,24,"drawerOpened"],[291,26,522,36],[291,28,522,38,"willShow"],[292,12,522,47],[292,13,522,48],[292,14,522,49],[293,12,523,8],[293,16,523,12,"_this"],[293,21,523,12],[293,22,523,17,"state"],[293,27,523,22],[293,28,523,23,"drawerState"],[293,39,523,34],[293,44,523,39,"DRAGGING"],[293,52,523,47],[293,54,523,49],[294,14,524,10],[295,14,525,10],[296,14,526,10,"_this"],[296,19,526,10],[296,20,526,15,"setState"],[296,28,526,23],[296,29,526,24],[297,16,526,26,"drawerState"],[297,27,526,37],[297,29,526,39,"IDLE"],[298,14,526,44],[298,15,526,45],[298,16,526,46],[299,12,527,8],[300,12,528,8],[300,16,528,12,"willShow"],[300,24,528,20],[300,26,528,22],[301,14,529,10,"_this"],[301,19,529,10],[301,20,529,15,"props"],[301,25,529,20],[301,26,529,21,"onDrawerOpen"],[301,38,529,33],[301,41,529,36],[301,42,529,37],[302,12,530,8],[302,13,530,9],[302,19,530,15],[303,14,531,10,"_this"],[303,19,531,10],[303,20,531,15,"props"],[303,25,531,20],[303,26,531,21,"onDrawerClose"],[303,39,531,34],[303,42,531,37],[303,43,531,38],[304,12,532,8],[305,10,533,6],[306,8,534,4],[306,9,534,5],[306,10,534,6],[307,6,535,2],[307,7,535,3],[308,6,535,3,"_this"],[308,11,535,3],[308,12,537,2,"openDrawer"],[308,22,537,12],[308,25,537,15],[308,37,537,55],[309,8,537,55],[309,12,537,16,"options"],[309,19,537,45],[309,22,537,45,"arguments"],[309,31,537,45],[309,32,537,45,"length"],[309,38,537,45],[309,46,537,45,"arguments"],[309,55,537,45],[309,63,537,45,"undefined"],[309,72,537,45],[309,75,537,45,"arguments"],[309,84,537,45],[309,90,537,48],[309,91,537,49],[309,92,537,50],[310,8,538,4,"_this"],[310,13,538,4],[310,14,538,9,"animateDrawer"],[310,27,538,22],[311,8,539,6],[312,8,540,6,"undefined"],[312,17,540,15],[312,19,541,6,"_this"],[312,24,541,6],[312,25,541,11,"props"],[312,30,541,16],[312,31,541,17,"drawerWidth"],[312,42,541,28],[312,44,542,6,"options"],[312,51,542,13],[312,52,542,14,"velocity"],[312,60,542,22],[312,63,542,25,"options"],[312,70,542,32],[312,71,542,33,"velocity"],[312,79,542,41],[312,82,542,44],[312,83,542,45],[312,85,543,6,"options"],[312,92,543,13],[312,93,543,14,"speed"],[312,98,544,4],[312,99,544,5],[314,8,546,4],[315,8,547,4],[316,8,548,4,"_this"],[316,13,548,4],[316,14,548,9,"forceUpdate"],[316,25,548,20],[316,26,548,21],[316,27,548,22],[317,6,549,2],[317,7,549,3],[318,6,549,3,"_this"],[318,11,549,3],[318,12,551,2,"closeDrawer"],[318,23,551,13],[318,26,551,16],[318,38,551,56],[319,8,551,56],[319,12,551,17,"options"],[319,19,551,46],[319,22,551,46,"arguments"],[319,31,551,46],[319,32,551,46,"length"],[319,38,551,46],[319,46,551,46,"arguments"],[319,55,551,46],[319,63,551,46,"undefined"],[319,72,551,46],[319,75,551,46,"arguments"],[319,84,551,46],[319,90,551,49],[319,91,551,50],[319,92,551,51],[320,8,552,4],[321,8,553,4,"_this"],[321,13,553,4],[321,14,553,9,"animateDrawer"],[321,27,553,22],[321,28,554,6,"undefined"],[321,37,554,15],[321,39,555,6],[321,40,555,7],[321,42,556,6,"options"],[321,49,556,13],[321,50,556,14,"velocity"],[321,58,556,22],[321,61,556,25,"options"],[321,68,556,32],[321,69,556,33,"velocity"],[321,77,556,41],[321,80,556,44],[321,81,556,45],[321,83,557,6,"options"],[321,90,557,13],[321,91,557,14,"speed"],[321,96,558,4],[321,97,558,5],[323,8,560,4],[324,8,561,4],[325,8,562,4,"_this"],[325,13,562,4],[325,14,562,9,"forceUpdate"],[325,25,562,20],[325,26,562,21],[325,27,562,22],[326,6,563,2],[326,7,563,3],[327,6,563,3,"_this"],[327,11,563,3],[327,12,565,10,"renderOverlay"],[327,25,565,23],[327,28,565,26],[327,34,565,32],[328,8,566,4],[329,8,567,4],[329,12,567,4,"invariant"],[329,21,567,13],[329,22,567,13,"default"],[329,29,567,13],[329,31,567,14,"_this"],[329,36,567,14],[329,37,567,19,"openValue"],[329,46,567,28],[329,48,567,30],[329,63,567,45],[329,64,567,46],[330,8,568,4],[330,12,568,8,"overlayOpacity"],[330,26,568,22],[331,8,570,4],[331,12,570,8,"_this"],[331,17,570,8],[331,18,570,13,"state"],[331,23,570,18],[331,24,570,19,"drawerState"],[331,35,570,30],[331,40,570,35,"IDLE"],[331,44,570,39],[331,46,570,41],[332,10,571,6,"overlayOpacity"],[332,24,571,20],[332,27,571,23,"_this"],[332,32,571,23],[332,33,571,28,"openValue"],[332,42,571,37],[333,8,572,4],[333,9,572,5],[333,15,572,11],[334,10,573,6,"overlayOpacity"],[334,24,573,20],[334,27,573,23,"_this"],[334,32,573,23],[334,33,573,28,"state"],[334,38,573,33],[334,39,573,34,"drawerOpened"],[334,51,573,46],[334,54,573,49],[334,55,573,50],[334,58,573,53],[334,59,573,54],[335,8,574,4],[336,8,576,4],[336,12,576,10,"dynamicOverlayStyles"],[336,32,576,30],[336,35,576,33],[337,10,577,6,"opacity"],[337,17,577,13],[337,19,577,15,"overlayOpacity"],[337,33,577,29],[338,10,578,6,"backgroundColor"],[338,25,578,21],[338,27,578,23,"_this"],[338,32,578,23],[338,33,578,28,"props"],[338,38,578,33],[338,39,578,34,"overlayColor"],[339,8,579,4],[339,9,579,5],[340,8,581,4],[340,28,582,6],[340,32,582,6,"_reactJsxDevRuntime"],[340,51,582,6],[340,52,582,6,"jsxDEV"],[340,58,582,6],[340,60,582,7,"_handlersTapGestureHandler"],[340,86,582,24],[340,87,582,24,"TapGestureHandler"],[340,104,582,24],[341,10,582,25,"onHandlerStateChange"],[341,30,582,45],[341,32,582,47,"_this"],[341,37,582,47],[341,38,582,52,"onTapHandlerStateChange"],[341,61,582,76],[342,10,582,76,"children"],[342,18,582,76],[342,33,583,8],[342,37,583,8,"_reactJsxDevRuntime"],[342,56,583,8],[342,57,583,8,"jsxDEV"],[342,63,583,8],[342,65,583,9,"_reactNative"],[342,77,583,17],[342,78,583,17,"Animated"],[342,86,583,17],[342,87,583,18,"View"],[342,91,583,22],[343,12,584,10,"pointerEvents"],[343,25,584,23],[343,27,584,25,"_this"],[343,32,584,25],[343,33,584,30,"drawerShown"],[343,44,584,41],[343,47,584,44],[343,53,584,50],[343,56,584,53],[343,62,584,60],[344,12,585,10,"ref"],[344,15,585,13],[344,17,585,15,"_this"],[344,22,585,15],[344,23,585,20,"pointerEventsView"],[344,40,585,38],[345,12,586,10,"style"],[345,17,586,15],[345,19,586,17],[345,20,586,18,"styles"],[345,26,586,24],[345,27,586,25,"overlay"],[345,34,586,32],[345,36,586,34,"dynamicOverlayStyles"],[345,56,586,54],[346,10,586,56],[347,12,586,56,"fileName"],[347,20,586,56],[347,22,586,56,"_jsxFileName"],[347,34,586,56],[348,12,586,56,"lineNumber"],[348,22,586,56],[349,12,586,56,"columnNumber"],[349,24,586,56],[350,10,586,56],[350,13,586,56,"_this"],[350,18,587,9],[351,8,587,10],[352,10,587,10,"fileName"],[352,18,587,10],[352,20,587,10,"_jsxFileName"],[352,32,587,10],[353,10,587,10,"lineNumber"],[353,20,587,10],[354,10,587,10,"columnNumber"],[354,22,587,10],[355,8,587,10],[355,11,587,10,"_this"],[355,16,588,25],[355,17,588,26],[356,6,590,2],[356,7,590,3],[357,6,590,3,"_this"],[357,11,590,3],[357,12,592,10,"renderDrawer"],[357,24,592,22],[357,27,592,25],[357,33,592,31],[358,8,593,4],[358,12,593,4,"_this$props3"],[358,24,593,4],[358,27,600,8,"_this"],[358,32,600,8],[358,33,600,13,"props"],[358,38,600,18],[359,10,594,6,"drawerBackgroundColor"],[359,31,594,27],[359,34,594,27,"_this$props3"],[359,46,594,27],[359,47,594,6,"drawerBackgroundColor"],[359,68,594,27],[360,10,595,6,"drawerWidth"],[360,21,595,17],[360,24,595,17,"_this$props3"],[360,36,595,17],[360,37,595,6,"drawerWidth"],[360,48,595,17],[361,10,596,6,"drawerPosition"],[361,24,596,20],[361,27,596,20,"_this$props3"],[361,39,596,20],[361,40,596,6,"drawerPosition"],[361,54,596,20],[362,10,597,6,"drawerType"],[362,20,597,16],[362,23,597,16,"_this$props3"],[362,35,597,16],[362,36,597,6,"drawerType"],[362,46,597,16],[363,10,598,6,"drawerContainerStyle"],[363,30,598,26],[363,33,598,26,"_this$props3"],[363,45,598,26],[363,46,598,6,"drawerContainerStyle"],[363,66,598,26],[364,10,599,6,"contentContainerStyle"],[364,31,599,27],[364,34,599,27,"_this$props3"],[364,46,599,27],[364,47,599,6,"contentContainerStyle"],[364,68,599,27],[365,8,602,4],[365,12,602,10,"fromLeft"],[365,20,602,18],[365,23,602,21,"drawerPosition"],[365,37,602,35],[365,42,602,40],[365,48,602,46],[366,8,603,4],[366,12,603,10,"drawerSlide"],[366,23,603,21],[366,26,603,24,"drawerType"],[366,36,603,34],[366,41,603,39],[366,47,603,45],[367,8,604,4],[367,12,604,10,"containerSlide"],[367,26,604,24],[367,29,604,27,"drawerType"],[367,39,604,37],[367,44,604,42],[367,51,604,49],[369,8,606,4],[370,8,607,4],[371,8,608,4],[372,8,609,4],[373,8,610,4],[373,12,610,10,"reverseContentDirection"],[373,35,610,33],[373,38,610,36,"I18nManager"],[373,50,610,47],[373,51,610,47,"I18nManager"],[373,62,610,47],[373,63,610,48,"isRTL"],[373,68,610,53],[373,71,610,56,"fromLeft"],[373,79,610,64],[373,82,610,67],[373,83,610,68,"fromLeft"],[373,91,610,76],[374,8,612,4],[374,12,612,10,"dynamicDrawerStyles"],[374,31,612,29],[374,34,612,32],[375,10,613,6,"backgroundColor"],[375,25,613,21],[375,27,613,23,"drawerBackgroundColor"],[375,48,613,44],[376,10,614,6,"width"],[376,15,614,11],[376,17,614,13,"drawerWidth"],[377,8,615,4],[377,9,615,5],[378,8,616,4],[378,12,616,10,"openValue"],[378,21,616,19],[378,24,616,22,"_this"],[378,29,616,22],[378,30,616,27,"openValue"],[378,39,616,36],[379,8,617,4],[379,12,617,4,"invariant"],[379,21,617,13],[379,22,617,13,"default"],[379,29,617,13],[379,31,617,14,"openValue"],[379,40,617,23],[379,42,617,25],[379,57,617,40],[379,58,617,41],[380,8,619,4],[380,12,619,8,"containerStyles"],[380,27,619,23],[381,8,620,4],[381,12,620,8,"containerSlide"],[381,26,620,22],[381,28,620,24],[382,10,621,6],[382,14,621,12,"containerTranslateX"],[382,33,621,31],[382,36,621,34,"openValue"],[382,45,621,43],[382,46,621,44,"interpolate"],[382,57,621,55],[382,58,621,56],[383,12,622,8,"inputRange"],[383,22,622,18],[383,24,622,20],[383,25,622,21],[383,26,622,22],[383,28,622,24],[383,29,622,25],[383,30,622,26],[384,12,623,8,"outputRange"],[384,23,623,19],[384,25,623,21,"fromLeft"],[384,33,623,29],[384,36,623,32],[384,37,623,33],[384,38,623,34],[384,40,623,36,"drawerWidth"],[384,51,623,47],[384,52,623,49],[384,55,623,52],[384,56,623,53],[384,57,623,54],[384,59,623,56],[384,60,623,57,"drawerWidth"],[384,71,623,69],[384,72,623,70],[385,12,624,8,"extrapolate"],[385,23,624,19],[385,25,624,21],[386,10,625,6],[386,11,625,7],[386,12,625,8],[387,10,626,6,"containerStyles"],[387,25,626,21],[387,28,626,24],[388,12,627,8,"transform"],[388,21,627,17],[388,23,627,19],[388,24,627,20],[389,14,627,22,"translateX"],[389,24,627,32],[389,26,627,34,"containerTranslateX"],[390,12,627,54],[390,13,627,55],[391,10,628,6],[391,11,628,7],[392,8,629,4],[393,8,631,4],[393,12,631,8,"drawerTranslateX"],[393,28,631,56],[393,31,631,59],[393,32,631,60],[394,8,632,4],[394,12,632,8,"drawerSlide"],[394,23,632,19],[394,25,632,21],[395,10,633,6],[395,14,633,12,"closedDrawerOffset"],[395,32,633,30],[395,35,633,33,"fromLeft"],[395,43,633,41],[395,46,633,44],[395,47,633,45,"drawerWidth"],[395,58,633,57],[395,61,633,60,"drawerWidth"],[395,72,633,72],[396,10,634,6],[396,14,634,10,"_this"],[396,19,634,10],[396,20,634,15,"state"],[396,25,634,20],[396,26,634,21,"drawerState"],[396,37,634,32],[396,42,634,37,"IDLE"],[396,46,634,41],[396,48,634,43],[397,12,635,8,"drawerTranslateX"],[397,28,635,24],[397,31,635,27,"openValue"],[397,40,635,36],[397,41,635,37,"interpolate"],[397,52,635,48],[397,53,635,49],[398,14,636,10,"inputRange"],[398,24,636,20],[398,26,636,22],[398,27,636,23],[398,28,636,24],[398,30,636,26],[398,31,636,27],[398,32,636,28],[399,14,637,10,"outputRange"],[399,25,637,21],[399,27,637,23],[399,28,637,24,"closedDrawerOffset"],[399,46,637,42],[399,48,637,44],[399,49,637,45],[399,50,637,46],[400,14,638,10,"extrapolate"],[400,25,638,21],[400,27,638,23],[401,12,639,8],[401,13,639,9],[401,14,639,10],[402,10,640,6],[402,11,640,7],[402,17,640,13],[403,12,641,8,"drawerTranslateX"],[403,28,641,24],[403,31,641,27,"_this"],[403,36,641,27],[403,37,641,32,"state"],[403,42,641,37],[403,43,641,38,"drawerOpened"],[403,55,641,50],[403,58,641,53],[403,59,641,54],[403,62,641,57,"closedDrawerOffset"],[403,80,641,75],[404,10,642,6],[405,8,643,4],[406,8,644,4],[406,12,644,10,"drawerStyles"],[406,24,647,5],[406,27,647,8],[407,10,648,6,"transform"],[407,19,648,15],[407,21,648,17],[407,22,648,18],[408,12,648,20,"translateX"],[408,22,648,30],[408,24,648,32,"drawerTranslateX"],[409,10,648,49],[409,11,648,50],[409,12,648,51],[410,10,649,6,"flexDirection"],[410,23,649,19],[410,25,649,21,"reverseContentDirection"],[410,48,649,44],[410,51,649,47],[410,64,649,60],[410,67,649,63],[411,8,650,4],[411,9,650,5],[412,8,652,4],[412,28,653,6],[412,32,653,6,"_reactJsxDevRuntime"],[412,51,653,6],[412,52,653,6,"jsxDEV"],[412,58,653,6],[412,60,653,7,"_reactNative"],[412,72,653,15],[412,73,653,15,"Animated"],[412,81,653,15],[412,82,653,16,"View"],[412,86,653,20],[413,10,653,21,"style"],[413,15,653,26],[413,17,653,28,"styles"],[413,23,653,34],[413,24,653,35,"main"],[413,28,653,40],[414,10,653,41,"onLayout"],[414,18,653,49],[414,20,653,51,"_this"],[414,25,653,51],[414,26,653,56,"handleContainerLayout"],[414,47,653,78],[415,10,653,78,"children"],[415,18,653,78],[415,34,654,8],[415,38,654,8,"_reactJsxDevRuntime"],[415,57,654,8],[415,58,654,8,"jsxDEV"],[415,64,654,8],[415,66,654,9,"_reactNative"],[415,78,654,17],[415,79,654,17,"Animated"],[415,87,654,17],[415,88,654,18,"View"],[415,92,654,22],[416,12,655,10,"style"],[416,17,655,15],[416,19,655,17],[416,20,656,12,"drawerType"],[416,30,656,22],[416,35,656,27],[416,42,656,34],[416,45,657,16,"styles"],[416,51,657,22],[416,52,657,23,"containerOnBack"],[416,67,657,38],[416,70,658,16,"styles"],[416,76,658,22],[416,77,658,23,"containerInFront"],[416,93,658,39],[416,95,659,12,"containerStyles"],[416,110,659,27],[416,112,660,12,"contentContainerStyle"],[416,133,660,33],[416,134,661,12],[417,12,662,10,"importantForAccessibility"],[417,37,662,35],[417,39,663,12,"_this"],[417,44,663,12],[417,45,663,17,"drawerShown"],[417,56,663,28],[417,59,663,31],[417,80,663,52],[417,83,663,55],[417,88,664,11],[418,12,664,11,"children"],[418,20,664,11],[418,23,665,11],[418,30,665,18,"_this"],[418,35,665,18],[418,36,665,23,"props"],[418,41,665,28],[418,42,665,29,"children"],[418,50,665,37],[418,55,665,42],[418,65,665,52],[418,68,666,14,"_this"],[418,73,666,14],[418,74,666,19,"props"],[418,79,666,24],[418,80,666,25,"children"],[418,88,666,33],[418,89,666,34,"_this"],[418,94,666,34],[418,95,666,39,"openValue"],[418,104,666,48],[418,105,666,49],[418,108,667,14,"_this"],[418,113,667,14],[418,114,667,19,"props"],[418,119,667,24],[418,120,667,25,"children"],[418,128,667,33],[418,130,668,11,"_this"],[418,135,668,11],[418,136,668,16,"renderOverlay"],[418,149,668,29],[418,150,668,30],[418,151,668,31],[419,10,668,31],[420,12,668,31,"fileName"],[420,20,668,31],[420,22,668,31,"_jsxFileName"],[420,34,668,31],[421,12,668,31,"lineNumber"],[421,22,668,31],[422,12,668,31,"columnNumber"],[422,24,668,31],[423,10,668,31],[423,13,668,31,"_this"],[423,18,669,23],[423,19,669,24],[423,34,670,8],[423,38,670,8,"_reactJsxDevRuntime"],[423,57,670,8],[423,58,670,8,"jsxDEV"],[423,64,670,8],[423,66,670,9,"_reactNative"],[423,78,670,17],[423,79,670,17,"Animated"],[423,87,670,17],[423,88,670,18,"View"],[423,92,670,22],[424,12,671,10,"pointerEvents"],[424,25,671,23],[424,27,671,24],[424,37,671,34],[425,12,672,10,"ref"],[425,15,672,13],[425,17,672,15,"_this"],[425,22,672,15],[425,23,672,20,"accessibilityIsModalView"],[425,47,672,45],[426,12,673,10,"accessibilityViewIsModal"],[426,36,673,34],[426,38,673,36,"_this"],[426,43,673,36],[426,44,673,41,"drawerShown"],[426,55,673,53],[427,12,674,10,"style"],[427,17,674,15],[427,19,674,17],[427,20,674,18,"styles"],[427,26,674,24],[427,27,674,25,"drawerContainer"],[427,42,674,40],[427,44,674,42,"drawerStyles"],[427,56,674,54],[427,58,674,56,"drawerContainerStyle"],[427,78,674,76],[427,79,674,78],[428,12,674,78,"children"],[428,20,674,78],[428,35,675,10],[428,39,675,10,"_reactJsxDevRuntime"],[428,58,675,10],[428,59,675,10,"jsxDEV"],[428,65,675,10],[428,67,675,11,"_reactNative"],[428,79,675,15],[428,80,675,15,"View"],[428,84,675,15],[429,14,675,16,"style"],[429,19,675,21],[429,21,675,23,"dynamicDrawerStyles"],[429,40,675,43],[430,14,675,43,"children"],[430,22,675,43],[430,24,676,13,"_this"],[430,29,676,13],[430,30,676,18,"props"],[430,35,676,23],[430,36,676,24,"renderNavigationView"],[430,56,676,44],[430,57,676,45,"_this"],[430,62,676,45],[430,63,676,50,"openValue"],[430,72,676,77],[431,12,676,78],[432,14,676,78,"fileName"],[432,22,676,78],[432,24,676,78,"_jsxFileName"],[432,36,676,78],[433,14,676,78,"lineNumber"],[433,24,676,78],[434,14,676,78,"columnNumber"],[434,26,676,78],[435,12,676,78],[435,15,676,78,"_this"],[435,20,677,16],[436,10,677,17],[437,12,677,17,"fileName"],[437,20,677,17],[437,22,677,17,"_jsxFileName"],[437,34,677,17],[438,12,677,17,"lineNumber"],[438,22,677,17],[439,12,677,17,"columnNumber"],[439,24,677,17],[440,10,677,17],[440,13,677,17,"_this"],[440,18,678,23],[440,19,678,24],[441,8,678,24],[442,10,678,24,"fileName"],[442,18,678,24],[442,20,678,24,"_jsxFileName"],[442,32,678,24],[443,10,678,24,"lineNumber"],[443,20,678,24],[444,10,678,24,"columnNumber"],[444,22,678,24],[445,8,678,24],[445,11,678,24,"_this"],[445,16,679,21],[445,17,679,22],[446,6,681,2],[446,7,681,3],[447,6,681,3,"_this"],[447,11,681,3],[447,12,683,10,"setPanGestureRef"],[447,28,683,26],[447,31,683,30,"ref"],[447,34,683,52],[447,38,683,57],[448,8,684,4],[449,8,685,4],[450,8,687,6,"_this"],[450,13,687,6],[450,14,687,11,"panGestureHandler"],[450,31,687,28],[450,32,688,6,"current"],[450,39,688,13],[450,42,688,16,"ref"],[450,45,688,19],[451,8,689,4,"_this"],[451,13,689,4],[451,14,689,9,"props"],[451,19,689,14],[451,20,689,15,"onGestureRef"],[451,32,689,27],[451,35,689,30,"ref"],[451,38,689,33],[451,39,689,34],[452,6,690,2],[452,7,690,3],[453,6,223,4],[453,10,223,10,"dragX"],[453,16,223,15],[453,19,223,18],[453,23,223,22,"Animated"],[453,35,223,30],[453,36,223,30,"Animated"],[453,44,223,30],[453,45,223,31,"Value"],[453,50,223,36],[453,51,223,37],[453,52,223,38],[453,53,223,39],[454,6,224,4],[454,10,224,10,"touchX"],[454,17,224,16],[454,20,224,19],[454,24,224,23,"Animated"],[454,36,224,31],[454,37,224,31,"Animated"],[454,45,224,31],[454,46,224,32,"Value"],[454,51,224,37],[454,52,224,38],[454,53,224,39],[454,54,224,40],[455,6,225,4],[455,10,225,10,"drawerTranslation"],[455,28,225,27],[455,31,225,30],[455,35,225,34,"Animated"],[455,47,225,42],[455,48,225,42,"Animated"],[455,56,225,42],[455,57,225,43,"Value"],[455,62,225,48],[455,63,225,49],[455,64,225,50],[455,65,225,51],[456,6,227,4,"_this"],[456,11,227,4],[456,12,227,9,"state"],[456,17,227,14],[456,20,227,17],[457,8,228,6,"dragX"],[457,13,228,11],[457,15,228,6,"dragX"],[457,21,228,11],[458,8,229,6,"touchX"],[458,14,229,12],[458,16,229,6,"touchX"],[458,23,229,12],[459,8,230,6,"drawerTranslation"],[459,25,230,23],[459,27,230,6,"drawerTranslation"],[459,45,230,23],[460,8,231,6,"containerWidth"],[460,22,231,20],[460,24,231,22],[460,25,231,23],[461,8,232,6,"drawerState"],[461,19,232,17],[461,21,232,19,"IDLE"],[461,25,232,23],[462,8,233,6,"drawerOpened"],[462,20,233,18],[462,22,233,20],[463,6,234,4],[463,7,234,5],[464,6,236,4,"_this"],[464,11,236,4],[464,12,236,9,"updateAnimatedEvent"],[464,31,236,28],[464,32,236,29,"props"],[464,38,236,34],[464,40,236,36,"_this"],[464,45,236,36],[464,46,236,41,"state"],[464,51,236,46],[464,52,236,47],[465,6,236,48],[465,13,236,48,"_this"],[465,18,236,48],[466,4,237,2],[467,4,237,3],[467,8,237,3,"_inherits"],[467,17,237,3],[467,18,237,3,"default"],[467,25,237,3],[467,27,237,3,"DrawerLayout"],[467,39,237,3],[467,41,237,3,"_Component"],[467,51,237,3],[468,4,237,3],[468,15,237,3,"_createClass"],[468,27,237,3],[468,28,237,3,"default"],[468,35,237,3],[468,37,237,3,"DrawerLayout"],[468,49,237,3],[469,6,237,3,"key"],[469,9,237,3],[470,6,237,3,"value"],[470,11,237,3],[470,13,239,2],[470,22,239,2,"shouldComponentUpdate"],[470,43,239,23,"shouldComponentUpdate"],[470,44,239,24,"props"],[470,49,239,48],[470,51,239,50,"state"],[470,56,239,74],[470,58,239,76],[471,8,240,4],[471,12,241,6],[471,16,241,10],[471,17,241,11,"props"],[471,22,241,16],[471,23,241,17,"drawerPosition"],[471,37,241,31],[471,42,241,36,"props"],[471,47,241,41],[471,48,241,42,"drawerPosition"],[471,62,241,56],[471,66,242,6],[471,70,242,10],[471,71,242,11,"props"],[471,76,242,16],[471,77,242,17,"drawerWidth"],[471,88,242,28],[471,93,242,33,"props"],[471,98,242,38],[471,99,242,39,"drawerWidth"],[471,110,242,50],[471,114,243,6],[471,118,243,10],[471,119,243,11,"props"],[471,124,243,16],[471,125,243,17,"drawerType"],[471,135,243,27],[471,140,243,32,"props"],[471,145,243,37],[471,146,243,38,"drawerType"],[471,156,243,48],[471,160,244,6],[471,164,244,10],[471,165,244,11,"state"],[471,170,244,16],[471,171,244,17,"containerWidth"],[471,185,244,31],[471,190,244,36,"state"],[471,195,244,41],[471,196,244,42,"containerWidth"],[471,210,244,56],[471,212,245,6],[472,10,246,6],[472,14,246,10],[472,15,246,11,"updateAnimatedEvent"],[472,34,246,30],[472,35,246,31,"props"],[472,40,246,36],[472,42,246,38,"state"],[472,47,246,43],[472,48,246,44],[473,8,247,4],[474,8,249,4],[474,15,249,11],[474,19,249,15],[475,6,250,2],[476,4,250,3],[477,6,250,3,"key"],[477,9,250,3],[478,6,250,3,"value"],[478,11,250,3],[478,13,692,2],[478,22,692,2,"render"],[478,28,692,8,"render"],[478,29,692,8],[478,31,692,11],[479,8,693,4],[479,12,693,4,"_this$props4"],[479,24,693,4],[479,27,694,6],[479,31,694,10],[479,32,694,11,"props"],[479,37,694,16],[480,10,693,12,"drawerPosition"],[480,24,693,26],[480,27,693,26,"_this$props4"],[480,39,693,26],[480,40,693,12,"drawerPosition"],[480,54,693,26],[481,10,693,28,"drawerLockMode"],[481,24,693,42],[481,27,693,42,"_this$props4"],[481,39,693,42],[481,40,693,28,"drawerLockMode"],[481,54,693,42],[482,10,693,44,"edgeWidth"],[482,19,693,53],[482,22,693,53,"_this$props4"],[482,34,693,53],[482,35,693,44,"edgeWidth"],[482,44,693,53],[483,10,693,55,"minSwipeDistance"],[483,26,693,71],[483,29,693,71,"_this$props4"],[483,41,693,71],[483,42,693,55,"minSwipeDistance"],[483,58,693,71],[484,8,696,4],[484,12,696,10,"fromLeft"],[484,20,696,18],[484,23,696,21,"drawerPosition"],[484,37,696,35],[484,42,696,40],[484,48,696,46],[486,8,698,4],[487,8,699,4],[488,8,700,4],[489,8,701,4],[489,12,701,10,"gestureOrientation"],[489,30,701,28],[489,33,702,6],[489,34,702,7,"fromLeft"],[489,42,702,15],[489,45,702,18],[489,46,702,19],[489,49,702,22],[489,50,702,23],[489,51,702,24],[489,56,702,29],[489,60,702,33],[489,61,702,34,"drawerShown"],[489,72,702,45],[489,75,702,48],[489,76,702,49],[489,77,702,50],[489,80,702,53],[489,81,702,54],[489,82,702,55],[491,8,704,4],[492,8,705,4],[493,8,706,4],[494,8,707,4],[494,12,707,10,"hitSlop"],[494,19,707,17],[494,22,707,20,"fromLeft"],[494,30,707,28],[494,33,708,8],[495,10,708,10,"left"],[495,14,708,14],[495,16,708,16],[495,17,708,17],[496,10,708,19,"width"],[496,15,708,24],[496,17,708,26],[496,21,708,30],[496,22,708,31,"drawerShown"],[496,33,708,42],[496,36,708,45,"undefined"],[496,45,708,54],[496,48,708,57,"edgeWidth"],[497,8,708,67],[497,9,708,68],[497,12,709,8],[498,10,709,10,"right"],[498,15,709,15],[498,17,709,17],[498,18,709,18],[499,10,709,20,"width"],[499,15,709,25],[499,17,709,27],[499,21,709,31],[499,22,709,32,"drawerShown"],[499,33,709,43],[499,36,709,46,"undefined"],[499,45,709,55],[499,48,709,58,"edgeWidth"],[500,8,709,68],[500,9,709,69],[501,8,711,4],[501,28,712,6],[501,32,712,6,"_reactJsxDevRuntime"],[501,51,712,6],[501,52,712,6,"jsxDEV"],[501,58,712,6],[501,60,712,7,"_handlersPanGestureHandler"],[501,86,712,24],[501,87,712,24,"PanGestureHandler"],[501,104,712,24],[501,105,713,8],[502,8,713,8],[503,10,714,8,"userSelect"],[503,20,714,18],[503,22,714,20],[503,26,714,24],[503,27,714,25,"props"],[503,32,714,30],[503,33,714,31,"userSelect"],[503,43,714,42],[504,10,715,8,"activeCursor"],[504,22,715,20],[504,24,715,22],[504,28,715,26],[504,29,715,27,"props"],[504,34,715,32],[504,35,715,33,"activeCursor"],[504,47,715,46],[505,10,716,8,"mouseButton"],[505,21,716,19],[505,23,716,21],[505,27,716,25],[505,28,716,26,"props"],[505,33,716,31],[505,34,716,32,"mouseButton"],[505,45,716,44],[506,10,717,8,"enableContextMenu"],[506,27,717,25],[506,29,717,27],[506,33,717,31],[506,34,717,32,"props"],[506,39,717,37],[506,40,717,38,"enableContextMenu"],[506,57,717,56],[507,10,718,8,"ref"],[507,13,718,11],[507,15,718,13],[507,19,718,17],[507,20,718,18,"setPanGestureRef"],[507,36,718,35],[508,10,719,8,"hitSlop"],[508,17,719,15],[508,19,719,17,"hitSlop"],[508,26,719,25],[509,10,720,8,"activeOffsetX"],[509,23,720,21],[509,25,720,23,"gestureOrientation"],[509,43,720,41],[509,46,720,44,"minSwipeDistance"],[509,62,720,62],[510,10,721,8,"failOffsetY"],[510,21,721,19],[510,23,721,21],[510,24,721,22],[510,25,721,23],[510,27,721,25],[510,29,721,27],[510,31,721,29],[510,32,721,31],[511,10,722,8,"onGestureEvent"],[511,24,722,22],[511,26,722,24],[511,30,722,28],[511,31,722,29,"onGestureEvent"],[511,45,722,44],[512,10,723,8,"onHandlerStateChange"],[512,30,723,28],[512,32,723,30],[512,36,723,34],[512,37,723,35,"openingHandlerStateChange"],[512,62,723,61],[513,10,724,8,"enableTrackpadTwoFingerGesture"],[513,40,724,38],[513,42,725,10],[513,46,725,14],[513,47,725,15,"props"],[513,52,725,20],[513,53,725,21,"enableTrackpadTwoFingerGesture"],[513,83,726,9],[514,10,727,8,"enabled"],[514,17,727,15],[514,19,728,10,"drawerLockMode"],[514,33,728,24],[514,38,728,29],[514,53,728,44],[514,57,728,48,"drawerLockMode"],[514,71,728,62],[514,76,728,67],[514,89,729,9],[515,10,729,9,"children"],[515,18,729,9],[515,20,730,9],[515,24,730,13],[515,25,730,14,"renderDrawer"],[515,37,730,26],[515,38,730,27],[516,8,730,28],[517,10,730,28,"fileName"],[517,18,730,28],[517,20,730,28,"_jsxFileName"],[517,32,730,28],[518,10,730,28,"lineNumber"],[518,20,730,28],[519,10,730,28,"columnNumber"],[519,22,730,28],[520,8,730,28],[520,15,731,25],[520,16,731,26],[521,6,733,2],[522,4,733,3],[523,2,733,3],[523,4,204,42,"Component"],[523,10,204,51],[523,11,204,51,"Component"],[523,20,204,51],[524,2,204,21,"DrawerLayout"],[524,14,204,33],[524,15,208,9,"defaultProps"],[524,27,208,21],[524,30,208,24],[525,4,209,4,"drawerWidth"],[525,15,209,15],[525,17,209,17],[525,20,209,20],[526,4,210,4,"drawerPosition"],[526,18,210,18],[526,20,210,20],[526,26,210,26],[527,4,211,4,"useNativeAnimations"],[527,23,211,23],[527,25,211,25],[527,29,211,29],[528,4,212,4,"drawerType"],[528,14,212,14],[528,16,212,16],[528,23,212,23],[529,4,213,4,"edgeWidth"],[529,13,213,13],[529,15,213,15],[529,17,213,17],[530,4,214,4,"minSwipeDistance"],[530,20,214,20],[530,22,214,22],[530,23,214,23],[531,4,215,4,"overlayColor"],[531,16,215,16],[531,18,215,18],[531,38,215,38],[532,4,216,4,"drawerLockMode"],[532,18,216,18],[532,20,216,20],[532,30,216,30],[533,4,217,4,"enableTrackpadTwoFingerGesture"],[533,34,217,34],[533,36,217,36],[534,2,218,2],[534,3,218,3],[535,2,204,21,"DrawerLayout"],[535,14,204,33],[535,15,261,9,"positions"],[535,24,261,18],[535,27,261,21],[536,4,262,4,"Left"],[536,8,262,8],[536,10,262,10],[536,16,262,16],[537,4,263,4,"Right"],[537,9,263,9],[537,11,263,11],[538,2,264,2],[538,3,264,3],[539,2,736,0],[539,6,736,6,"styles"],[539,12,736,12],[539,15,736,15,"StyleSheet"],[539,27,736,25],[539,28,736,25,"StyleSheet"],[539,38,736,25],[539,39,736,26,"create"],[539,45,736,32],[539,46,736,33],[540,4,737,2,"drawerContainer"],[540,19,737,17],[540,21,737,19],[541,6,738,4],[541,9,738,7,"StyleSheet"],[541,21,738,17],[541,22,738,17,"StyleSheet"],[541,32,738,17],[541,33,738,18,"absoluteFillObject"],[541,51,738,36],[542,6,739,4,"zIndex"],[542,12,739,10],[542,14,739,12],[542,18,739,16],[543,6,740,4,"flexDirection"],[543,19,740,17],[543,21,740,19],[544,4,741,2],[544,5,741,3],[545,4,742,2,"containerInFront"],[545,20,742,18],[545,22,742,20],[546,6,743,4],[546,9,743,7,"StyleSheet"],[546,21,743,17],[546,22,743,17,"StyleSheet"],[546,32,743,17],[546,33,743,18,"absoluteFillObject"],[546,51,743,36],[547,6,744,4,"zIndex"],[547,12,744,10],[547,14,744,12],[548,4,745,2],[548,5,745,3],[549,4,746,2,"containerOnBack"],[549,19,746,17],[549,21,746,19],[550,6,747,4],[550,9,747,7,"StyleSheet"],[550,21,747,17],[550,22,747,17,"StyleSheet"],[550,32,747,17],[550,33,747,18,"absoluteFillObject"],[551,4,748,2],[551,5,748,3],[552,4,749,2,"main"],[552,8,749,6],[552,10,749,8],[553,6,750,4,"flex"],[553,10,750,8],[553,12,750,10],[553,13,750,11],[554,6,751,4,"zIndex"],[554,12,751,10],[554,14,751,12],[554,15,751,13],[555,6,752,4,"overflow"],[555,14,752,12],[555,16,752,14],[556,4,753,2],[556,5,753,3],[557,4,754,2,"overlay"],[557,11,754,9],[557,13,754,11],[558,6,755,4],[558,9,755,7,"StyleSheet"],[558,21,755,17],[558,22,755,17,"StyleSheet"],[558,32,755,17],[558,33,755,18,"absoluteFillObject"],[558,51,755,36],[559,6,756,4,"zIndex"],[559,12,756,10],[559,14,756,12],[560,4,757,2],[561,2,758,0],[561,3,758,1],[561,4,758,2],[562,0,758,3],[562,3]],"functionMap":{"names":["<global>","DrawerLayout","constructor","shouldComponentUpdate","updateAnimatedEvent","gestureOptions.listener","handleContainerLayout","emitStateChanged","openingHandlerStateChange","onTapHandlerStateChange","handleRelease","updateShowing","animateDrawer","Animated.spring.start$argument_0","openDrawer","closeDrawer","renderOverlay","renderDrawer","setPanGestureRef","render"],"mappings":"AAA;eC2M;ECgB;GDiB;EEE;GFW;gCGgB;gCC+F;ODK;GHO;kCKE;GLE;6BME;GNK;sCOE;GPe;oCQE;GRU;0BSE;GTkC;0BUE;GV0B;0BWE;aCwC;KDe;GXC;eaE;GbY;gBcE;GdY;0BeE;GfyB;yBgBE;GhByF;6BiBE;GjBO;EkBE;GlByC;CDC"},"hasCjsExports":false},"type":"js/module"}]}