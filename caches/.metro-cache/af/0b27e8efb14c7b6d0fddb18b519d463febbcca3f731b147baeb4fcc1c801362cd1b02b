{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"../../Network/RCTNetworking","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0},"end":{"line":12,"column":53}}],"key":"IjQZJFiRZ8/W2RgBFjTf2RYlTtU=","exportNames":["*"],"imports":1}},{"name":"../../Utilities/HMRClient","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0},"end":{"line":13,"column":50}}],"key":"dMYf3QJK2QvBY8pRVXYjPVp86Sk=","exportNames":["*"],"imports":1}},{"name":"../../Utilities/LoadingView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0},"end":{"line":14,"column":54}}],"key":"ZYfNQ3rNLk3nLRPWZftd/+FHrpc=","exportNames":["*"],"imports":1}},{"name":"./getDevServer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":42}}],"key":"WKfBgnKYQ+362ADqmV6Rh2L8YC4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _NetworkRCTNetworking = require(_dependencyMap[1], \"../../Network/RCTNetworking\");\n  var Networking = _interopDefault(_NetworkRCTNetworking);\n  var _UtilitiesHMRClient = require(_dependencyMap[2], \"../../Utilities/HMRClient\");\n  var HMRClient = _interopDefault(_UtilitiesHMRClient);\n  var _UtilitiesLoadingView = require(_dependencyMap[3], \"../../Utilities/LoadingView\");\n  var LoadingView = _interopDefault(_UtilitiesLoadingView);\n  var _getDevServer2 = require(_dependencyMap[4], \"./getDevServer\");\n  var getDevServer = _interopDefault(_getDevServer2);\n  var pendingRequests = 0;\n  var cachedPromisesByUrl = new Map();\n  function asyncRequest(url) {\n    var id = null;\n    var responseText = null;\n    var headers = null;\n    var dataListener;\n    var completeListener;\n    var responseListener;\n    var incrementalDataListener;\n    return new Promise((resolve, reject) => {\n      dataListener = Networking.default.addListener('didReceiveNetworkData', _ref => {\n        var _ref2 = (0, _slicedToArray.default)(_ref, 2),\n          requestId = _ref2[0],\n          response = _ref2[1];\n        if (requestId === id) {\n          responseText = response;\n        }\n      });\n      incrementalDataListener = Networking.default.addListener('didReceiveNetworkIncrementalData', _ref3 => {\n        var _ref4 = (0, _slicedToArray.default)(_ref3, 2),\n          requestId = _ref4[0],\n          data = _ref4[1];\n        if (requestId === id) {\n          if (responseText != null) {\n            responseText += data;\n          } else {\n            responseText = data;\n          }\n        }\n      });\n      responseListener = Networking.default.addListener('didReceiveNetworkResponse', _ref5 => {\n        var _ref6 = (0, _slicedToArray.default)(_ref5, 3),\n          requestId = _ref6[0],\n          status = _ref6[1],\n          responseHeaders = _ref6[2];\n        if (requestId === id) {\n          headers = responseHeaders;\n        }\n      });\n      completeListener = Networking.default.addListener('didCompleteNetworkResponse', _ref7 => {\n        var _ref8 = (0, _slicedToArray.default)(_ref7, 2),\n          requestId = _ref8[0],\n          error = _ref8[1];\n        if (requestId === id) {\n          if (error) {\n            reject(error);\n          } else {\n            resolve({\n              body: responseText,\n              headers\n            });\n          }\n        }\n      });\n      Networking.default.sendRequest('GET', 'asyncRequest', url, {}, '', 'text', true, 0, requestId => {\n        id = requestId;\n      }, true);\n    }).finally(() => {\n      dataListener?.remove();\n      completeListener?.remove();\n      responseListener?.remove();\n      incrementalDataListener?.remove();\n    });\n  }\n  function buildUrlForBundle(bundlePathAndQuery) {\n    var _getDevServer = (0, getDevServer.default)(),\n      serverUrl = _getDevServer.url;\n    return serverUrl.replace(/\\/+$/, '') + '/' + bundlePathAndQuery.replace(/^\\/+/, '');\n  }\n  module.exports = function (bundlePathAndQuery) {\n    var requestUrl = buildUrlForBundle(bundlePathAndQuery);\n    var loadPromise = cachedPromisesByUrl.get(requestUrl);\n    if (loadPromise) {\n      return loadPromise;\n    }\n    LoadingView.default.showMessage('Downloading...', 'load');\n    ++pendingRequests;\n    loadPromise = asyncRequest(requestUrl).then(_ref9 => {\n      var body = _ref9.body,\n        headers = _ref9.headers;\n      if (headers['Content-Type'] != null && headers['Content-Type'].indexOf('application/json') >= 0) {\n        throw new Error(JSON.parse(body).message || `Unknown error fetching '${bundlePathAndQuery}'`);\n      }\n      HMRClient.default.registerBundle(requestUrl);\n      if (global.globalEvalWithSourceUrl) {\n        global.globalEvalWithSourceUrl(body, requestUrl);\n      } else {\n        eval(body);\n      }\n    }).catch(e => {\n      cachedPromisesByUrl.delete(requestUrl);\n      throw e;\n    }).finally(() => {\n      if (! --pendingRequests) {\n        LoadingView.default.hide();\n      }\n    });\n    cachedPromisesByUrl.set(requestUrl, loadPromise);\n    return loadPromise;\n  };\n});","lineCount":120,"map":[[11,2,12,0],[11,6,12,0,"_NetworkRCTNetworking"],[11,27,12,0],[11,30,12,0,"require"],[11,37,12,0],[11,38,12,0,"_dependencyMap"],[11,52,12,0],[12,2,12,0],[12,6,12,0,"Networking"],[12,16,12,0],[12,19,12,0,"_interopDefault"],[12,34,12,0],[12,35,12,0,"_NetworkRCTNetworking"],[12,56,12,0],[13,2,13,0],[13,6,13,0,"_UtilitiesHMRClient"],[13,25,13,0],[13,28,13,0,"require"],[13,35,13,0],[13,36,13,0,"_dependencyMap"],[13,50,13,0],[14,2,13,0],[14,6,13,0,"HMRClient"],[14,15,13,0],[14,18,13,0,"_interopDefault"],[14,33,13,0],[14,34,13,0,"_UtilitiesHMRClient"],[14,53,13,0],[15,2,14,0],[15,6,14,0,"_UtilitiesLoadingView"],[15,27,14,0],[15,30,14,0,"require"],[15,37,14,0],[15,38,14,0,"_dependencyMap"],[15,52,14,0],[16,2,14,0],[16,6,14,0,"LoadingView"],[16,17,14,0],[16,20,14,0,"_interopDefault"],[16,35,14,0],[16,36,14,0,"_UtilitiesLoadingView"],[16,57,14,0],[17,2,15,0],[17,6,15,0,"_getDevServer2"],[17,20,15,0],[17,23,15,0,"require"],[17,30,15,0],[17,31,15,0,"_dependencyMap"],[17,45,15,0],[18,2,15,0],[18,6,15,0,"getDevServer"],[18,18,15,0],[18,21,15,0,"_interopDefault"],[18,36,15,0],[18,37,15,0,"_getDevServer2"],[18,51,15,0],[19,2,19,0],[19,6,19,4,"pendingRequests"],[19,21,19,19],[19,24,19,22],[19,25,19,23],[20,2,21,0],[20,6,21,6,"cachedPromisesByUrl"],[20,25,21,25],[20,28,21,28],[20,32,21,32,"Map"],[20,35,21,35],[20,36,21,59],[20,37,21,60],[21,2,23,0],[21,11,23,9,"asyncRequest"],[21,23,23,21,"asyncRequest"],[21,24,24,2,"url"],[21,27,24,13],[21,29,25,56],[22,4,26,2],[22,8,26,6,"id"],[22,10,26,8],[22,13,26,11],[22,17,26,15],[23,4,27,2],[23,8,27,6,"responseText"],[23,20,27,18],[23,23,27,21],[23,27,27,25],[24,4,28,2],[24,8,28,6,"headers"],[24,15,28,13],[24,18,28,16],[24,22,28,20],[25,4,29,2],[25,8,29,6,"dataListener"],[25,20,29,18],[26,4,30,2],[26,8,30,6,"completeListener"],[26,24,30,22],[27,4,31,2],[27,8,31,6,"responseListener"],[27,24,31,22],[28,4,32,2],[28,8,32,6,"incrementalDataListener"],[28,31,32,29],[29,4,33,2],[29,11,33,9],[29,15,33,13,"Promise"],[29,22,33,20],[29,23,34,4],[29,24,34,5,"resolve"],[29,31,34,12],[29,33,34,14,"reject"],[29,39,34,20],[29,44,34,25],[30,6,35,6,"dataListener"],[30,18,35,18],[30,21,35,21,"Networking"],[30,31,35,31],[30,32,35,31,"default"],[30,39,35,31],[30,40,35,32,"addListener"],[30,51,35,43],[30,52,36,8],[30,75,36,31],[30,77,37,8,"_ref"],[30,81,37,8],[30,85,37,35],[31,8,37,35],[31,12,37,35,"_ref2"],[31,17,37,35],[31,24,37,35,"_slicedToArray"],[31,38,37,35],[31,39,37,35,"default"],[31,46,37,35],[31,48,37,35,"_ref"],[31,52,37,35],[32,10,37,10,"requestId"],[32,19,37,19],[32,22,37,19,"_ref2"],[32,27,37,19],[33,10,37,21,"response"],[33,18,37,29],[33,21,37,29,"_ref2"],[33,26,37,29],[34,8,38,10],[34,12,38,14,"requestId"],[34,21,38,23],[34,26,38,28,"id"],[34,28,38,30],[34,30,38,32],[35,10,39,12,"responseText"],[35,22,39,24],[35,25,39,27,"response"],[35,33,39,35],[36,8,40,10],[37,6,41,8],[37,7,42,6],[37,8,42,7],[38,6,43,6,"incrementalDataListener"],[38,29,43,29],[38,32,43,32,"Networking"],[38,42,43,42],[38,43,43,42,"default"],[38,50,43,42],[38,51,43,43,"addListener"],[38,62,43,54],[38,63,44,8],[38,97,44,42],[38,99,45,8,"_ref3"],[38,104,45,8],[38,108,45,31],[39,8,45,31],[39,12,45,31,"_ref4"],[39,17,45,31],[39,24,45,31,"_slicedToArray"],[39,38,45,31],[39,39,45,31,"default"],[39,46,45,31],[39,48,45,31,"_ref3"],[39,53,45,31],[40,10,45,10,"requestId"],[40,19,45,19],[40,22,45,19,"_ref4"],[40,27,45,19],[41,10,45,21,"data"],[41,14,45,25],[41,17,45,25,"_ref4"],[41,22,45,25],[42,8,46,10],[42,12,46,14,"requestId"],[42,21,46,23],[42,26,46,28,"id"],[42,28,46,30],[42,30,46,32],[43,10,47,12],[43,14,47,16,"responseText"],[43,26,47,28],[43,30,47,32],[43,34,47,36],[43,36,47,38],[44,12,48,14,"responseText"],[44,24,48,26],[44,28,48,30,"data"],[44,32,48,34],[45,10,49,12],[45,11,49,13],[45,17,49,19],[46,12,50,14,"responseText"],[46,24,50,26],[46,27,50,29,"data"],[46,31,50,33],[47,10,51,12],[48,8,52,10],[49,6,53,8],[49,7,54,6],[49,8,54,7],[50,6,55,6,"responseListener"],[50,22,55,22],[50,25,55,25,"Networking"],[50,35,55,35],[50,36,55,35,"default"],[50,43,55,35],[50,44,55,36,"addListener"],[50,55,55,47],[50,56,56,8],[50,83,56,35],[50,85,57,8,"_ref5"],[50,90,57,8],[50,94,57,50],[51,8,57,50],[51,12,57,50,"_ref6"],[51,17,57,50],[51,24,57,50,"_slicedToArray"],[51,38,57,50],[51,39,57,50,"default"],[51,46,57,50],[51,48,57,50,"_ref5"],[51,53,57,50],[52,10,57,10,"requestId"],[52,19,57,19],[52,22,57,19,"_ref6"],[52,27,57,19],[53,10,57,21,"status"],[53,16,57,27],[53,19,57,27,"_ref6"],[53,24,57,27],[54,10,57,29,"responseHeaders"],[54,25,57,44],[54,28,57,44,"_ref6"],[54,33,57,44],[55,8,58,10],[55,12,58,14,"requestId"],[55,21,58,23],[55,26,58,28,"id"],[55,28,58,30],[55,30,58,32],[56,10,59,12,"headers"],[56,17,59,19],[56,20,59,22,"responseHeaders"],[56,35,59,37],[57,8,60,10],[58,6,61,8],[58,7,62,6],[58,8,62,7],[59,6,63,6,"completeListener"],[59,22,63,22],[59,25,63,25,"Networking"],[59,35,63,35],[59,36,63,35,"default"],[59,43,63,35],[59,44,63,36,"addListener"],[59,55,63,47],[59,56,64,8],[59,84,64,36],[59,86,65,8,"_ref7"],[59,91,65,8],[59,95,65,32],[60,8,65,32],[60,12,65,32,"_ref8"],[60,17,65,32],[60,24,65,32,"_slicedToArray"],[60,38,65,32],[60,39,65,32,"default"],[60,46,65,32],[60,48,65,32,"_ref7"],[60,53,65,32],[61,10,65,10,"requestId"],[61,19,65,19],[61,22,65,19,"_ref8"],[61,27,65,19],[62,10,65,21,"error"],[62,15,65,26],[62,18,65,26,"_ref8"],[62,23,65,26],[63,8,66,10],[63,12,66,14,"requestId"],[63,21,66,23],[63,26,66,28,"id"],[63,28,66,30],[63,30,66,32],[64,10,67,12],[64,14,67,16,"error"],[64,19,67,21],[64,21,67,23],[65,12,68,14,"reject"],[65,18,68,20],[65,19,68,21,"error"],[65,24,68,26],[65,25,68,27],[66,10,69,12],[66,11,69,13],[66,17,69,19],[67,12,71,14,"resolve"],[67,19,71,21],[67,20,71,22],[68,14,71,23,"body"],[68,18,71,27],[68,20,71,29,"responseText"],[68,32,71,41],[69,14,71,43,"headers"],[70,12,71,50],[70,13,71,51],[70,14,71,52],[71,10,72,12],[72,8,73,10],[73,6,74,8],[73,7,75,6],[73,8,75,7],[74,6,76,6,"Networking"],[74,16,76,16],[74,17,76,16,"default"],[74,24,76,16],[74,25,76,17,"sendRequest"],[74,36,76,28],[74,37,77,8],[74,42,77,13],[74,44,78,8],[74,58,78,22],[74,60,79,8,"url"],[74,63,79,11],[74,65,80,8],[74,66,80,9],[74,67,80,10],[74,69,81,8],[74,71,81,10],[74,73,82,8],[74,79,82,14],[74,81,83,8],[74,85,83,12],[74,87,84,8],[74,88,84,9],[74,90,85,8,"requestId"],[74,99,85,17],[74,103,85,21],[75,8,86,10,"id"],[75,10,86,12],[75,13,86,15,"requestId"],[75,22,86,24],[76,6,87,8],[76,7,87,9],[76,9,88,8],[76,13,89,6],[76,14,89,7],[77,4,90,4],[77,5,91,2],[77,6,91,3],[77,7,91,4,"finally"],[77,14,91,11],[77,15,91,12],[77,21,91,18],[78,6,92,4,"dataListener"],[78,18,92,16],[78,20,92,18,"remove"],[78,26,92,24],[78,27,92,25],[78,28,92,26],[79,6,93,4,"completeListener"],[79,22,93,20],[79,24,93,22,"remove"],[79,30,93,28],[79,31,93,29],[79,32,93,30],[80,6,94,4,"responseListener"],[80,22,94,20],[80,24,94,22,"remove"],[80,30,94,28],[80,31,94,29],[80,32,94,30],[81,6,95,4,"incrementalDataListener"],[81,29,95,27],[81,31,95,29,"remove"],[81,37,95,35],[81,38,95,36],[81,39,95,37],[82,4,96,2],[82,5,96,3],[82,6,96,4],[83,2,97,0],[84,2,99,0],[84,11,99,9,"buildUrlForBundle"],[84,28,99,26,"buildUrlForBundle"],[84,29,99,27,"bundlePathAndQuery"],[84,47,99,53],[84,49,99,55],[85,4,100,2],[85,8,100,2,"_getDevServer"],[85,21,100,2],[85,24,100,27],[85,28,100,27,"getDevServer"],[85,40,100,39],[85,41,100,39,"default"],[85,48,100,39],[85,50,100,40],[85,51,100,41],[86,6,100,14,"serverUrl"],[86,15,100,23],[86,18,100,23,"_getDevServer"],[86,31,100,23],[86,32,100,9,"url"],[86,35,100,12],[87,4,101,2],[87,11,102,4,"serverUrl"],[87,20,102,13],[87,21,102,14,"replace"],[87,28,102,21],[87,29,102,22],[87,35,102,28],[87,37,102,30],[87,39,102,32],[87,40,102,33],[87,43,102,36],[87,46,102,39],[87,49,102,42,"bundlePathAndQuery"],[87,67,102,60],[87,68,102,61,"replace"],[87,75,102,68],[87,76,102,69],[87,82,102,75],[87,84,102,77],[87,86,102,79],[87,87,102,80],[88,2,104,0],[89,2,106,0,"module"],[89,8,106,6],[89,9,106,7,"exports"],[89,16,106,14],[89,19,106,17],[89,29,106,27,"bundlePathAndQuery"],[89,47,106,53],[89,49,106,70],[90,4,107,2],[90,8,107,8,"requestUrl"],[90,18,107,18],[90,21,107,21,"buildUrlForBundle"],[90,38,107,38],[90,39,107,39,"bundlePathAndQuery"],[90,57,107,57],[90,58,107,58],[91,4,108,2],[91,8,108,6,"loadPromise"],[91,19,108,17],[91,22,108,20,"cachedPromisesByUrl"],[91,41,108,39],[91,42,108,40,"get"],[91,45,108,43],[91,46,108,44,"requestUrl"],[91,56,108,54],[91,57,108,55],[92,4,110,2],[92,8,110,6,"loadPromise"],[92,19,110,17],[92,21,110,19],[93,6,111,4],[93,13,111,11,"loadPromise"],[93,24,111,22],[94,4,112,2],[95,4,113,2,"LoadingView"],[95,15,113,13],[95,16,113,13,"default"],[95,23,113,13],[95,24,113,14,"showMessage"],[95,35,113,25],[95,36,113,26],[95,52,113,42],[95,54,113,44],[95,60,113,50],[95,61,113,51],[96,4,114,2],[96,6,114,4,"pendingRequests"],[96,21,114,19],[97,4,116,2,"loadPromise"],[97,15,116,13],[97,18,116,16,"asyncRequest"],[97,30,116,28],[97,31,116,29,"requestUrl"],[97,41,116,39],[97,42,116,40],[97,43,117,5,"then"],[97,47,117,9],[97,48,117,16,"_ref9"],[97,53,117,16],[97,57,117,37],[98,6,117,37],[98,10,117,18,"body"],[98,14,117,22],[98,17,117,22,"_ref9"],[98,22,117,22],[98,23,117,18,"body"],[98,27,117,22],[99,8,117,24,"headers"],[99,15,117,31],[99,18,117,31,"_ref9"],[99,23,117,31],[99,24,117,24,"headers"],[99,31,117,31],[100,6,118,6],[100,10,119,8,"headers"],[100,17,119,15],[100,18,119,16],[100,32,119,30],[100,33,119,31],[100,37,119,35],[100,41,119,39],[100,45,120,8,"headers"],[100,52,120,15],[100,53,120,16],[100,67,120,30],[100,68,120,31],[100,69,120,32,"indexOf"],[100,76,120,39],[100,77,120,40],[100,95,120,58],[100,96,120,59],[100,100,120,63],[100,101,120,64],[100,103,121,8],[101,8,123,8],[101,14,123,14],[101,18,123,18,"Error"],[101,23,123,23],[101,24,124,10,"JSON"],[101,28,124,14],[101,29,124,15,"parse"],[101,34,124,20],[101,35,124,21,"body"],[101,39,124,25],[101,40,124,26],[101,41,124,27,"message"],[101,48,124,34],[101,52,125,12],[101,79,125,39,"bundlePathAndQuery"],[101,97,125,57],[101,100,126,8],[101,101,126,9],[102,6,127,6],[103,6,129,6,"HMRClient"],[103,15,129,15],[103,16,129,15,"default"],[103,23,129,15],[103,24,129,16,"registerBundle"],[103,38,129,30],[103,39,129,31,"requestUrl"],[103,49,129,41],[103,50,129,42],[104,6,133,6],[104,10,133,10,"global"],[104,16,133,16],[104,17,133,17,"globalEvalWithSourceUrl"],[104,40,133,40],[104,42,133,42],[105,8,134,8,"global"],[105,14,134,14],[105,15,134,15,"globalEvalWithSourceUrl"],[105,38,134,38],[105,39,134,39,"body"],[105,43,134,43],[105,45,134,45,"requestUrl"],[105,55,134,55],[105,56,134,56],[106,6,135,6],[106,7,135,7],[106,13,135,13],[107,8,137,8,"eval"],[107,12,137,12],[107,13,137,13,"body"],[107,17,137,17],[107,18,137,18],[108,6,138,6],[109,4,139,4],[109,5,139,5],[109,6,139,6],[109,7,140,5,"catch"],[109,12,140,10],[109,13,140,17,"e"],[109,14,140,18],[109,18,140,22],[110,6,141,6,"cachedPromisesByUrl"],[110,25,141,25],[110,26,141,26,"delete"],[110,32,141,32],[110,33,141,33,"requestUrl"],[110,43,141,43],[110,44,141,44],[111,6,142,6],[111,12,142,12,"e"],[111,13,142,13],[112,4,143,4],[112,5,143,5],[112,6,143,6],[112,7,144,5,"finally"],[112,14,144,12],[112,15,144,13],[112,21,144,19],[113,6,145,6],[113,10,145,10],[113,11,145,11],[113,14,145,13,"pendingRequests"],[113,29,145,28],[113,31,145,30],[114,8,146,8,"LoadingView"],[114,19,146,19],[114,20,146,19,"default"],[114,27,146,19],[114,28,146,20,"hide"],[114,32,146,24],[114,33,146,25],[114,34,146,26],[115,6,147,6],[116,4,148,4],[116,5,148,5],[116,6,148,6],[117,4,150,2,"cachedPromisesByUrl"],[117,23,150,21],[117,24,150,22,"set"],[117,27,150,25],[117,28,150,26,"requestUrl"],[117,38,150,36],[117,40,150,38,"loadPromise"],[117,51,150,49],[117,52,150,50],[118,4,151,2],[118,11,151,9,"loadPromise"],[118,22,151,20],[119,2,152,0],[119,3,152,1],[120,0,152,2],[120,3]],"functionMap":{"names":["<global>","asyncRequest","Promise$argument_0","Networking.addListener$argument_1","Networking.sendRequest$argument_8","Promise._finally$argument_0","buildUrlForBundle","module.exports","asyncRequest.then$argument_0","asyncRequest.then._catch$argument_0","asyncRequest.then._catch._finally$argument_0"],"mappings":"AAA;ACsB;ICW;QCG;SDI;QCI;SDQ;QCI;SDI;QCI;SDS;QEW;SFE;KDG;YIC;GJK;CDC;AME;CNK;iBOE;gBCW;KDsB;iBEC;KFG;aGC;KHI;CPI"},"hasCjsExports":true},"type":"js/module"}]}