{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":47,"index":47}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./ExpoUpdates","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":40,"index":88}}],"key":"xvfiwKXsFVvB05bziLrxffeS3bo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _excluded = [\"manifestString\"],\n    _excluded2 = [\"manifestString\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"isEnabled\", {\n    enumerable: true,\n    get: function () {\n      return isEnabled;\n    }\n  });\n  Object.defineProperty(exports, \"updateId\", {\n    enumerable: true,\n    get: function () {\n      return updateId;\n    }\n  });\n  Object.defineProperty(exports, \"channel\", {\n    enumerable: true,\n    get: function () {\n      return channel;\n    }\n  });\n  Object.defineProperty(exports, \"runtimeVersion\", {\n    enumerable: true,\n    get: function () {\n      return runtimeVersion;\n    }\n  });\n  Object.defineProperty(exports, \"checkAutomatically\", {\n    enumerable: true,\n    get: function () {\n      return checkAutomatically;\n    }\n  });\n  Object.defineProperty(exports, \"localAssets\", {\n    enumerable: true,\n    get: function () {\n      return localAssets;\n    }\n  });\n  Object.defineProperty(exports, \"isEmergencyLaunch\", {\n    enumerable: true,\n    get: function () {\n      return isEmergencyLaunch;\n    }\n  });\n  Object.defineProperty(exports, \"emergencyLaunchReason\", {\n    enumerable: true,\n    get: function () {\n      return emergencyLaunchReason;\n    }\n  });\n  Object.defineProperty(exports, \"isEmbeddedLaunch\", {\n    enumerable: true,\n    get: function () {\n      return isEmbeddedLaunch;\n    }\n  });\n  Object.defineProperty(exports, \"isUsingEmbeddedAssets\", {\n    enumerable: true,\n    get: function () {\n      return isUsingEmbeddedAssets;\n    }\n  });\n  Object.defineProperty(exports, \"manifest\", {\n    enumerable: true,\n    get: function () {\n      return manifest;\n    }\n  });\n  Object.defineProperty(exports, \"createdAt\", {\n    enumerable: true,\n    get: function () {\n      return createdAt;\n    }\n  });\n  exports.reloadAsync = reloadAsync;\n  exports.checkForUpdateAsync = checkForUpdateAsync;\n  exports.getExtraParamsAsync = getExtraParamsAsync;\n  exports.setExtraParamAsync = setExtraParamAsync;\n  exports.readLogEntriesAsync = readLogEntriesAsync;\n  exports.clearLogEntriesAsync = clearLogEntriesAsync;\n  exports.fetchUpdateAsync = fetchUpdateAsync;\n  exports.clearUpdateCacheExperimentalAsync = clearUpdateCacheExperimentalAsync;\n  exports.transformNativeStateMachineContext = transformNativeStateMachineContext;\n  exports.getNativeStateMachineContextAsync = getNativeStateMachineContextAsync;\n  var _babelRuntimeHelpersObjectWithoutProperties = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutProperties\");\n  var _objectWithoutProperties = _interopDefault(_babelRuntimeHelpersObjectWithoutProperties);\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoModulesCore = require(_dependencyMap[2], \"expo-modules-core\");\n  var _ExpoUpdates = require(_dependencyMap[3], \"./ExpoUpdates\");\n  var ExpoUpdates = _interopDefault(_ExpoUpdates);\n  /**\n   * Whether `expo-updates` is enabled. This may be false in a variety of cases including:\n   * - enabled set to false in configuration\n   * - missing or invalid URL in configuration\n   * - missing runtime version or SDK version in configuration\n   * - error accessing storage on device during initialization\n   *\n   * When false, the embedded update is loaded.\n   */\n  var isEnabled = !!ExpoUpdates.default.isEnabled;\n  /**\n   * The UUID that uniquely identifies the currently running update. The\n   * UUID is represented in its canonical string form and will always use lowercase letters.\n   * This value is `null` when running in a local development environment or any other environment where `expo-updates` is disabled.\n   * @example\n   * `\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"`\n   */\n  var updateId = ExpoUpdates.default.updateId && typeof ExpoUpdates.default.updateId === 'string' ? ExpoUpdates.default.updateId.toLowerCase() : null;\n  /**\n   * The channel name of the current build, if configured for use with EAS Update. `null` otherwise.\n   *\n   * Expo Go and development builds are not set to a specific channel and can run any updates compatible with their native runtime. Therefore, this value will always be `null` when running an update on Expo Go or a development build.\n   */\n  var channel = ExpoUpdates.default.channel ?? null;\n  /**\n   * The runtime version of the current build.\n   */\n  var runtimeVersion = ExpoUpdates.default.runtimeVersion ?? null;\n  var _checkAutomaticallyMapNativeToJS = {\n    ALWAYS: 'ON_LOAD',\n    ERROR_RECOVERY_ONLY: 'ON_ERROR_RECOVERY',\n    NEVER: 'NEVER',\n    WIFI_ONLY: 'WIFI_ONLY'\n  };\n  /**\n   * Determines if and when `expo-updates` checks for and downloads updates automatically on startup.\n   */\n  var checkAutomatically = _checkAutomaticallyMapNativeToJS[ExpoUpdates.default.checkAutomatically] ?? null;\n  // @docsMissing\n  /**\n   * @hidden\n   */\n  var localAssets = ExpoUpdates.default.localAssets ?? {};\n  /**\n   * `expo-updates` does its very best to always launch monotonically newer versions of your app so\n   * you don't need to worry about backwards compatibility when you put out an update. In very rare\n   * cases, it's possible that `expo-updates` may need to fall back to the update that's embedded in\n   * the app binary, even after newer updates have been downloaded and run (an \"emergency launch\").\n   * This boolean will be `true` if the app is launching under this fallback mechanism and `false`\n   * otherwise. If you are concerned about backwards compatibility of future updates to your app, you\n   * can use this constant to provide special behavior for this rare case.\n   */\n  var isEmergencyLaunch = ExpoUpdates.default.isEmergencyLaunch;\n  /**\n   * If `isEmergencyLaunch` is set to true, this will contain a string error message describing\n   * what failed during initialization.\n   */\n  var emergencyLaunchReason = ExpoUpdates.default.emergencyLaunchReason;\n  /**\n   * This will be true if the currently running update is the one embedded in the build,\n   * and not one downloaded from the updates server.\n   */\n  var isEmbeddedLaunch = ExpoUpdates.default.isEmbeddedLaunch || false;\n  // @docsMissing\n  /**\n   * @hidden\n   */\n  var isUsingEmbeddedAssets = ExpoUpdates.default.isUsingEmbeddedAssets || false;\n  /**\n   * If `expo-updates` is enabled, this is the\n   * [manifest](/versions/latest/sdk/constants/#manifest) (or\n   * [classic manifest](/versions/latest/sdk/constants/#appmanifest))\n   * object for the update that's currently running.\n   *\n   * In development mode, or any other environment in which `expo-updates` is disabled, this object is\n   * empty.\n   */\n  var manifest = (ExpoUpdates.default.manifestString ? JSON.parse(ExpoUpdates.default.manifestString) : ExpoUpdates.default.manifest) ?? {};\n  /**\n   * If `expo-updates` is enabled, this is a `Date` object representing the creation time of the update that's currently running (whether it was embedded or downloaded at runtime).\n   *\n   * In development mode, or any other environment in which `expo-updates` is disabled, this value is\n   * null.\n   */\n  var createdAt = ExpoUpdates.default.commitTime ? new Date(ExpoUpdates.default.commitTime) : null;\n  /**\n   * During non-expo development we block accessing the updates API methods on the JS side, but when developing in\n   * Expo Go or a development client build, the controllers should have control over which API methods should\n   * be allowed.\n   */\n  var shouldDeferToNativeForAPIMethodAvailabilityInDevelopment = !!ExpoUpdates.default.shouldDeferToNativeForAPIMethodAvailabilityInDevelopment;\n  /**\n   * Developer tool is set when a project is served by `expo start`.\n   */\n  var isUsingDeveloperTool = 'extra' in manifest ? !!manifest.extra?.expoGo?.developer?.tool : false;\n  var manualUpdatesInstructions = 'To test usage of the expo-updates JS API in your app, make a release build with `npx expo run:ios --configuration Release` or ' + '`npx expo run:android --variant Release`.';\n  /**\n   * Instructs the app to reload using the most recently downloaded version. This is useful for\n   * triggering a newly downloaded update to launch without the user needing to manually restart the\n   * app.\n   * Unlike `Expo.reloadAppAsync()` provided by the `expo` package,\n   * this function not only reloads the app but also changes the loaded JavaScript bundle to that of the most recently downloaded update.\n   *\n   * It is not recommended to place any meaningful logic after a call to `await\n   * Updates.reloadAsync()`. This is because the promise is resolved after verifying that the app can\n   * be reloaded, and immediately before posting an asynchronous task to the main thread to actually\n   * reload the app. It is unsafe to make any assumptions about whether any more JS code will be\n   * executed after the `Updates.reloadAsync` method call resolves, since that depends on the OS and\n   * the state of the native module and main threads.\n   *\n   * This method cannot be used in Expo Go or development mode, and the returned promise will be rejected if you\n   * try to do so. It also rejects when `expo-updates` is not enabled.\n   *\n   * @return A promise that fulfills right before the reload instruction is sent to the JS runtime, or\n   * rejects if it cannot find a reference to the JS runtime. If the promise is rejected in production\n   * mode, it most likely means you have installed the module incorrectly. Double check you've\n   * followed the installation instructions. In particular, on iOS ensure that you set the `bridge`\n   * property on `EXUpdatesAppController` with a pointer to the `RCTBridge` you want to reload, and on\n   * Android ensure you either call `UpdatesController.initialize` with the instance of\n   * `ReactApplication` you want to reload, or call `UpdatesController.setReactNativeHost` with the\n   * proper instance of `ReactNativeHost`.\n   */\n  function reloadAsync() {\n    return _reloadAsync.apply(this, arguments);\n  }\n  /**\n   * Checks the server to see if a newly deployed update to your project is available. Does not\n   * actually download the update. This method cannot be used in development mode, and the returned\n   * promise will be rejected if you try to do so.\n   *\n   * Checking for an update uses a device's bandwidth and battery life like any network call.\n   * Additionally, updates served by Expo may be rate limited. A good rule of thumb to check for\n   * updates judiciously is to check when the user launches or foregrounds the app. Avoid polling for\n   * updates in a frequent loop.\n   *\n   * @return A promise that fulfills with an [`UpdateCheckResult`](#updatecheckresult) object.\n   *\n   * The promise rejects in Expo Go or if the app is in development mode, or if there is an unexpected error or\n   * timeout communicating with the server. It also rejects when `expo-updates` is not enabled.\n   */\n  function _reloadAsync() {\n    _reloadAsync = (0, _asyncToGenerator.default)(function* () {\n      if ((__DEV__ || isUsingDeveloperTool) && !shouldDeferToNativeForAPIMethodAvailabilityInDevelopment) {\n        throw new _expoModulesCore.CodedError('ERR_UPDATES_DISABLED', `You cannot use the Updates module in development mode in a production app. ${manualUpdatesInstructions}`);\n      }\n      yield ExpoUpdates.default.reload();\n    });\n    return _reloadAsync.apply(this, arguments);\n  }\n  function checkForUpdateAsync() {\n    return _checkForUpdateAsync.apply(this, arguments);\n  }\n  /**\n   * Retrieves the current extra params.\n   *\n   * This method cannot be used in Expo Go or development mode. It also rejects when `expo-updates` is not enabled.\n   */\n  function _checkForUpdateAsync() {\n    _checkForUpdateAsync = (0, _asyncToGenerator.default)(function* () {\n      if ((__DEV__ || isUsingDeveloperTool) && !shouldDeferToNativeForAPIMethodAvailabilityInDevelopment) {\n        throw new _expoModulesCore.CodedError('ERR_UPDATES_DISABLED', `You cannot check for updates in development mode. ${manualUpdatesInstructions}`);\n      }\n      var result = yield ExpoUpdates.default.checkForUpdateAsync();\n      if ('manifestString' in result) {\n        var manifestString = result.manifestString,\n          rest = (0, _objectWithoutProperties.default)(result, _excluded);\n        return {\n          ...rest,\n          manifest: JSON.parse(manifestString)\n        };\n      }\n      return result;\n    });\n    return _checkForUpdateAsync.apply(this, arguments);\n  }\n  function getExtraParamsAsync() {\n    return _getExtraParamsAsync.apply(this, arguments);\n  }\n  /**\n   * Sets an extra param if value is non-null, otherwise unsets the param.\n   * Extra params are sent as an [Expo Structured Field Value Dictionary](/technical-specs/expo-sfv-0/)\n   * in the `Expo-Extra-Params` header of update requests. A compliant update server may use these params when selecting an update to serve.\n   *\n   * This method cannot be used in Expo Go or development mode. It also rejects when `expo-updates` is not enabled.\n   */\n  function _getExtraParamsAsync() {\n    _getExtraParamsAsync = (0, _asyncToGenerator.default)(function* () {\n      return yield ExpoUpdates.default.getExtraParamsAsync();\n    });\n    return _getExtraParamsAsync.apply(this, arguments);\n  }\n  function setExtraParamAsync(_x, _x2) {\n    return _setExtraParamAsync.apply(this, arguments);\n  }\n  /**\n   * Retrieves the most recent `expo-updates` log entries.\n   *\n   * @param maxAge Sets the max age of retrieved log entries in milliseconds. Default to `3600000` ms (1 hour).\n   *\n   * @return A promise that fulfills with an array of [`UpdatesLogEntry`](#updateslogentry) objects;\n   *\n   * The promise rejects if there is an unexpected error in retrieving the logs.\n   */\n  function _setExtraParamAsync() {\n    _setExtraParamAsync = (0, _asyncToGenerator.default)(function* (key, value) {\n      return yield ExpoUpdates.default.setExtraParamAsync(key, value ?? null);\n    });\n    return _setExtraParamAsync.apply(this, arguments);\n  }\n  function readLogEntriesAsync() {\n    return _readLogEntriesAsync.apply(this, arguments);\n  }\n  /**\n   * Clears existing `expo-updates` log entries.\n   *\n   * > For now, this operation does nothing on the client.  Once log persistence has been\n   * > implemented, this operation will actually remove existing logs.\n   *\n   * @return A promise that fulfills if the clear operation was successful.\n   *\n   * The promise rejects if there is an unexpected error in clearing the logs.\n   *\n   */\n  function _readLogEntriesAsync() {\n    _readLogEntriesAsync = (0, _asyncToGenerator.default)(function* () {\n      var maxAge = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3600000;\n      return yield ExpoUpdates.default.readLogEntriesAsync(maxAge);\n    });\n    return _readLogEntriesAsync.apply(this, arguments);\n  }\n  function clearLogEntriesAsync() {\n    return _clearLogEntriesAsync.apply(this, arguments);\n  }\n  /**\n   * Downloads the most recently deployed update to your project from server to the device's local\n   * storage. This method cannot be used in development mode, and the returned promise will be\n   * rejected if you try to do so.\n   *\n   > **Note:** [`reloadAsync()`](#updatesreloadasync) can be called after promise resolution to\n   * reload the app using the most recently downloaded version. Otherwise, the update will be applied\n   * on the next app cold start.\n   *\n   * @return A promise that fulfills with an [`UpdateFetchResult`](#updatefetchresult) object.\n   *\n   * The promise rejects in Expo Go or if the app is in development mode, or if there is an unexpected error or\n   * timeout communicating with the server. It also rejects when `expo-updates` is not enabled.\n   */\n  function _clearLogEntriesAsync() {\n    _clearLogEntriesAsync = (0, _asyncToGenerator.default)(function* () {\n      yield ExpoUpdates.default.clearLogEntriesAsync();\n    });\n    return _clearLogEntriesAsync.apply(this, arguments);\n  }\n  function fetchUpdateAsync() {\n    return _fetchUpdateAsync.apply(this, arguments);\n  }\n  /**\n   * @hidden\n   */\n  function _fetchUpdateAsync() {\n    _fetchUpdateAsync = (0, _asyncToGenerator.default)(function* () {\n      if ((__DEV__ || isUsingDeveloperTool) && !shouldDeferToNativeForAPIMethodAvailabilityInDevelopment) {\n        throw new _expoModulesCore.CodedError('ERR_UPDATES_DISABLED', `You cannot fetch updates in development mode. ${manualUpdatesInstructions}`);\n      }\n      var result = yield ExpoUpdates.default.fetchUpdateAsync();\n      if ('manifestString' in result) {\n        var manifestString = result.manifestString,\n          rest = (0, _objectWithoutProperties.default)(result, _excluded2);\n        return {\n          ...rest,\n          manifest: JSON.parse(manifestString)\n        };\n      }\n      return result;\n    });\n    return _fetchUpdateAsync.apply(this, arguments);\n  }\n  function clearUpdateCacheExperimentalAsync(_sdkVersion) {\n    console.warn(\"This method is no longer necessary. `expo-updates` now automatically deletes your app's old bundle files!\");\n  }\n  /**\n   * @hidden\n   */\n  function transformNativeStateMachineContext(originalNativeContext) {\n    var nativeContext = {\n      ...originalNativeContext\n    };\n    if (nativeContext.latestManifestString) {\n      nativeContext.latestManifest = JSON.parse(nativeContext.latestManifestString);\n      delete nativeContext.latestManifestString;\n    }\n    if (nativeContext.downloadedManifestString) {\n      nativeContext.downloadedManifest = JSON.parse(nativeContext.downloadedManifestString);\n      delete nativeContext.downloadedManifestString;\n    }\n    if (nativeContext.lastCheckForUpdateTimeString) {\n      nativeContext.lastCheckForUpdateTime = new Date(nativeContext.lastCheckForUpdateTimeString);\n      delete nativeContext.lastCheckForUpdateTimeString;\n    }\n    if (nativeContext.rollbackString) {\n      nativeContext.rollback = JSON.parse(nativeContext.rollbackString);\n      delete nativeContext.rollbackString;\n    }\n    return nativeContext;\n  }\n  /**\n   * @hidden\n   */\n  function getNativeStateMachineContextAsync() {\n    return _getNativeStateMachineContextAsync.apply(this, arguments);\n  }\n  function _getNativeStateMachineContextAsync() {\n    _getNativeStateMachineContextAsync = (0, _asyncToGenerator.default)(function* () {\n      var nativeContext = yield ExpoUpdates.default.getNativeStateMachineContextAsync();\n      return transformNativeStateMachineContext(nativeContext);\n    });\n    return _getNativeStateMachineContextAsync.apply(this, arguments);\n  }\n});","lineCount":421,"map":[[14,2,12,0,"Object"],[14,8,12,0],[14,9,12,0,"defineProperty"],[14,23,12,0],[14,24,12,0,"exports"],[14,31,12,0],[15,4,12,0,"enumerable"],[15,14,12,0],[16,4,12,0,"get"],[16,7,12,0],[16,18,12,0,"get"],[16,19,12,0],[17,6,12,0],[17,13,12,0,"isEnabled"],[17,22,12,0],[18,4,12,0],[19,2,12,0],[20,2,20,0,"Object"],[20,8,20,0],[20,9,20,0,"defineProperty"],[20,23,20,0],[20,24,20,0,"exports"],[20,31,20,0],[21,4,20,0,"enumerable"],[21,14,20,0],[22,4,20,0,"get"],[22,7,20,0],[22,18,20,0,"get"],[22,19,20,0],[23,6,20,0],[23,13,20,0,"updateId"],[23,21,20,0],[24,4,20,0],[25,2,20,0],[26,2,28,0,"Object"],[26,8,28,0],[26,9,28,0,"defineProperty"],[26,23,28,0],[26,24,28,0,"exports"],[26,31,28,0],[27,4,28,0,"enumerable"],[27,14,28,0],[28,4,28,0,"get"],[28,7,28,0],[28,18,28,0,"get"],[28,19,28,0],[29,6,28,0],[29,13,28,0,"channel"],[29,20,28,0],[30,4,28,0],[31,2,28,0],[32,2,32,0,"Object"],[32,8,32,0],[32,9,32,0,"defineProperty"],[32,23,32,0],[32,24,32,0,"exports"],[32,31,32,0],[33,4,32,0,"enumerable"],[33,14,32,0],[34,4,32,0,"get"],[34,7,32,0],[34,18,32,0,"get"],[34,19,32,0],[35,6,32,0],[35,13,32,0,"runtimeVersion"],[35,27,32,0],[36,4,32,0],[37,2,32,0],[38,2,42,0,"Object"],[38,8,42,0],[38,9,42,0,"defineProperty"],[38,23,42,0],[38,24,42,0,"exports"],[38,31,42,0],[39,4,42,0,"enumerable"],[39,14,42,0],[40,4,42,0,"get"],[40,7,42,0],[40,18,42,0,"get"],[40,19,42,0],[41,6,42,0],[41,13,42,0,"checkAutomatically"],[41,31,42,0],[42,4,42,0],[43,2,42,0],[44,2,47,0,"Object"],[44,8,47,0],[44,9,47,0,"defineProperty"],[44,23,47,0],[44,24,47,0,"exports"],[44,31,47,0],[45,4,47,0,"enumerable"],[45,14,47,0],[46,4,47,0,"get"],[46,7,47,0],[46,18,47,0,"get"],[46,19,47,0],[47,6,47,0],[47,13,47,0,"localAssets"],[47,24,47,0],[48,4,47,0],[49,2,47,0],[50,2,57,0,"Object"],[50,8,57,0],[50,9,57,0,"defineProperty"],[50,23,57,0],[50,24,57,0,"exports"],[50,31,57,0],[51,4,57,0,"enumerable"],[51,14,57,0],[52,4,57,0,"get"],[52,7,57,0],[52,18,57,0,"get"],[52,19,57,0],[53,6,57,0],[53,13,57,0,"isEmergencyLaunch"],[53,30,57,0],[54,4,57,0],[55,2,57,0],[56,2,62,0,"Object"],[56,8,62,0],[56,9,62,0,"defineProperty"],[56,23,62,0],[56,24,62,0,"exports"],[56,31,62,0],[57,4,62,0,"enumerable"],[57,14,62,0],[58,4,62,0,"get"],[58,7,62,0],[58,18,62,0,"get"],[58,19,62,0],[59,6,62,0],[59,13,62,0,"emergencyLaunchReason"],[59,34,62,0],[60,4,62,0],[61,2,62,0],[62,2,67,0,"Object"],[62,8,67,0],[62,9,67,0,"defineProperty"],[62,23,67,0],[62,24,67,0,"exports"],[62,31,67,0],[63,4,67,0,"enumerable"],[63,14,67,0],[64,4,67,0,"get"],[64,7,67,0],[64,18,67,0,"get"],[64,19,67,0],[65,6,67,0],[65,13,67,0,"isEmbeddedLaunch"],[65,29,67,0],[66,4,67,0],[67,2,67,0],[68,2,72,0,"Object"],[68,8,72,0],[68,9,72,0,"defineProperty"],[68,23,72,0],[68,24,72,0,"exports"],[68,31,72,0],[69,4,72,0,"enumerable"],[69,14,72,0],[70,4,72,0,"get"],[70,7,72,0],[70,18,72,0,"get"],[70,19,72,0],[71,6,72,0],[71,13,72,0,"isUsingEmbeddedAssets"],[71,34,72,0],[72,4,72,0],[73,2,72,0],[74,2,82,0,"Object"],[74,8,82,0],[74,9,82,0,"defineProperty"],[74,23,82,0],[74,24,82,0,"exports"],[74,31,82,0],[75,4,82,0,"enumerable"],[75,14,82,0],[76,4,82,0,"get"],[76,7,82,0],[76,18,82,0,"get"],[76,19,82,0],[77,6,82,0],[77,13,82,0,"manifest"],[77,21,82,0],[78,4,82,0],[79,2,82,0],[80,2,90,0,"Object"],[80,8,90,0],[80,9,90,0,"defineProperty"],[80,23,90,0],[80,24,90,0,"exports"],[80,31,90,0],[81,4,90,0,"enumerable"],[81,14,90,0],[82,4,90,0,"get"],[82,7,90,0],[82,18,90,0,"get"],[82,19,90,0],[83,6,90,0],[83,13,90,0,"createdAt"],[83,22,90,0],[84,4,90,0],[85,2,90,0],[86,2,131,0,"exports"],[86,9,131,0],[86,10,131,0,"reloadAsync"],[86,21,131,0],[86,24,131,0,"reloadAsync"],[86,35,131,0],[87,2,153,0,"exports"],[87,9,153,0],[87,10,153,0,"checkForUpdateAsync"],[87,29,153,0],[87,32,153,0,"checkForUpdateAsync"],[87,51,153,0],[88,2,173,0,"exports"],[88,9,173,0],[88,10,173,0,"getExtraParamsAsync"],[88,29,173,0],[88,32,173,0,"getExtraParamsAsync"],[88,51,173,0],[89,2,183,0,"exports"],[89,9,183,0],[89,10,183,0,"setExtraParamAsync"],[89,28,183,0],[89,31,183,0,"setExtraParamAsync"],[89,49,183,0],[90,2,195,0,"exports"],[90,9,195,0],[90,10,195,0,"readLogEntriesAsync"],[90,29,195,0],[90,32,195,0,"readLogEntriesAsync"],[90,51,195,0],[91,2,209,0,"exports"],[91,9,209,0],[91,10,209,0,"clearLogEntriesAsync"],[91,30,209,0],[91,33,209,0,"clearLogEntriesAsync"],[91,53,209,0],[92,2,226,0,"exports"],[92,9,226,0],[92,10,226,0,"fetchUpdateAsync"],[92,26,226,0],[92,29,226,0,"fetchUpdateAsync"],[92,45,226,0],[93,2,244,0,"exports"],[93,9,244,0],[93,10,244,0,"clearUpdateCacheExperimentalAsync"],[93,43,244,0],[93,46,244,0,"clearUpdateCacheExperimentalAsync"],[93,79,244,0],[94,2,250,0,"exports"],[94,9,250,0],[94,10,250,0,"transformNativeStateMachineContext"],[94,44,250,0],[94,47,250,0,"transformNativeStateMachineContext"],[94,81,250,0],[95,2,273,0,"exports"],[95,9,273,0],[95,10,273,0,"getNativeStateMachineContextAsync"],[95,43,273,0],[95,46,273,0,"getNativeStateMachineContextAsync"],[95,79,273,0],[96,2,276,1],[96,6,276,1,"_babelRuntimeHelpersObjectWithoutProperties"],[96,49,276,1],[96,52,276,1,"require"],[96,59,276,1],[96,60,276,1,"_dependencyMap"],[96,74,276,1],[97,2,276,1],[97,6,276,1,"_objectWithoutProperties"],[97,30,276,1],[97,33,276,1,"_interopDefault"],[97,48,276,1],[97,49,276,1,"_babelRuntimeHelpersObjectWithoutProperties"],[97,92,276,1],[98,2,276,1],[98,6,276,1,"_babelRuntimeHelpersAsyncToGenerator"],[98,42,276,1],[98,45,276,1,"require"],[98,52,276,1],[98,53,276,1,"_dependencyMap"],[98,67,276,1],[99,2,276,1],[99,6,276,1,"_asyncToGenerator"],[99,23,276,1],[99,26,276,1,"_interopDefault"],[99,41,276,1],[99,42,276,1,"_babelRuntimeHelpersAsyncToGenerator"],[99,78,276,1],[100,2,1,0],[100,6,1,0,"_expoModulesCore"],[100,22,1,0],[100,25,1,0,"require"],[100,32,1,0],[100,33,1,0,"_dependencyMap"],[100,47,1,0],[101,2,2,0],[101,6,2,0,"_ExpoUpdates"],[101,18,2,0],[101,21,2,0,"require"],[101,28,2,0],[101,29,2,0,"_dependencyMap"],[101,43,2,0],[102,2,2,0],[102,6,2,0,"ExpoUpdates"],[102,17,2,0],[102,20,2,0,"_interopDefault"],[102,35,2,0],[102,36,2,0,"_ExpoUpdates"],[102,48,2,0],[103,2,3,0],[104,0,4,0],[105,0,5,0],[106,0,6,0],[107,0,7,0],[108,0,8,0],[109,0,9,0],[110,0,10,0],[111,0,11,0],[112,2,12,7],[112,6,12,13,"isEnabled"],[112,15,12,22],[112,18,12,25],[112,19,12,26],[112,20,12,27,"ExpoUpdates"],[112,31,12,38],[112,32,12,38,"default"],[112,39,12,38],[112,40,12,39,"isEnabled"],[112,49,12,48],[113,2,13,0],[114,0,14,0],[115,0,15,0],[116,0,16,0],[117,0,17,0],[118,0,18,0],[119,0,19,0],[120,2,20,7],[120,6,20,13,"updateId"],[120,14,20,21],[120,17,20,24,"ExpoUpdates"],[120,28,20,35],[120,29,20,35,"default"],[120,36,20,35],[120,37,20,36,"updateId"],[120,45,20,44],[120,49,20,48],[120,56,20,55,"ExpoUpdates"],[120,67,20,66],[120,68,20,66,"default"],[120,75,20,66],[120,76,20,67,"updateId"],[120,84,20,75],[120,89,20,80],[120,97,20,88],[120,100,21,6,"ExpoUpdates"],[120,111,21,17],[120,112,21,17,"default"],[120,119,21,17],[120,120,21,18,"updateId"],[120,128,21,26],[120,129,21,27,"toLowerCase"],[120,140,21,38],[120,141,21,39],[120,142,21,40],[120,145,22,6],[120,149,22,10],[121,2,23,0],[122,0,24,0],[123,0,25,0],[124,0,26,0],[125,0,27,0],[126,2,28,7],[126,6,28,13,"channel"],[126,13,28,20],[126,16,28,23,"ExpoUpdates"],[126,27,28,34],[126,28,28,34,"default"],[126,35,28,34],[126,36,28,35,"channel"],[126,43,28,42],[126,47,28,46],[126,51,28,50],[127,2,29,0],[128,0,30,0],[129,0,31,0],[130,2,32,7],[130,6,32,13,"runtimeVersion"],[130,20,32,27],[130,23,32,30,"ExpoUpdates"],[130,34,32,41],[130,35,32,41,"default"],[130,42,32,41],[130,43,32,42,"runtimeVersion"],[130,57,32,56],[130,61,32,60],[130,65,32,64],[131,2,33,0],[131,6,33,6,"_checkAutomaticallyMapNativeToJS"],[131,38,33,38],[131,41,33,41],[132,4,34,4,"ALWAYS"],[132,10,34,10],[132,12,34,12],[132,21,34,21],[133,4,35,4,"ERROR_RECOVERY_ONLY"],[133,23,35,23],[133,25,35,25],[133,44,35,44],[134,4,36,4,"NEVER"],[134,9,36,9],[134,11,36,11],[134,18,36,18],[135,4,37,4,"WIFI_ONLY"],[135,13,37,13],[135,15,37,15],[136,2,38,0],[136,3,38,1],[137,2,39,0],[138,0,40,0],[139,0,41,0],[140,2,42,7],[140,6,42,13,"checkAutomatically"],[140,24,42,31],[140,27,42,34,"_checkAutomaticallyMapNativeToJS"],[140,59,42,66],[140,60,42,67,"ExpoUpdates"],[140,71,42,78],[140,72,42,78,"default"],[140,79,42,78],[140,80,42,79,"checkAutomatically"],[140,98,42,97],[140,99,42,98],[140,103,42,102],[140,107,42,106],[141,2,43,0],[142,2,44,0],[143,0,45,0],[144,0,46,0],[145,2,47,7],[145,6,47,13,"localAssets"],[145,17,47,24],[145,20,47,27,"ExpoUpdates"],[145,31,47,38],[145,32,47,38,"default"],[145,39,47,38],[145,40,47,39,"localAssets"],[145,51,47,50],[145,55,47,54],[145,56,47,55],[145,57,47,56],[146,2,48,0],[147,0,49,0],[148,0,50,0],[149,0,51,0],[150,0,52,0],[151,0,53,0],[152,0,54,0],[153,0,55,0],[154,0,56,0],[155,2,57,7],[155,6,57,13,"isEmergencyLaunch"],[155,23,57,30],[155,26,57,33,"ExpoUpdates"],[155,37,57,44],[155,38,57,44,"default"],[155,45,57,44],[155,46,57,45,"isEmergencyLaunch"],[155,63,57,62],[156,2,58,0],[157,0,59,0],[158,0,60,0],[159,0,61,0],[160,2,62,7],[160,6,62,13,"emergencyLaunchReason"],[160,27,62,34],[160,30,62,37,"ExpoUpdates"],[160,41,62,48],[160,42,62,48,"default"],[160,49,62,48],[160,50,62,49,"emergencyLaunchReason"],[160,71,62,70],[161,2,63,0],[162,0,64,0],[163,0,65,0],[164,0,66,0],[165,2,67,7],[165,6,67,13,"isEmbeddedLaunch"],[165,22,67,29],[165,25,67,32,"ExpoUpdates"],[165,36,67,43],[165,37,67,43,"default"],[165,44,67,43],[165,45,67,44,"isEmbeddedLaunch"],[165,61,67,60],[165,65,67,64],[165,70,67,69],[166,2,68,0],[167,2,69,0],[168,0,70,0],[169,0,71,0],[170,2,72,7],[170,6,72,13,"isUsingEmbeddedAssets"],[170,27,72,34],[170,30,72,37,"ExpoUpdates"],[170,41,72,48],[170,42,72,48,"default"],[170,49,72,48],[170,50,72,49,"isUsingEmbeddedAssets"],[170,71,72,70],[170,75,72,74],[170,80,72,79],[171,2,73,0],[172,0,74,0],[173,0,75,0],[174,0,76,0],[175,0,77,0],[176,0,78,0],[177,0,79,0],[178,0,80,0],[179,0,81,0],[180,2,82,7],[180,6,82,13,"manifest"],[180,14,82,21],[180,17,82,24],[180,18,82,25,"ExpoUpdates"],[180,29,82,36],[180,30,82,36,"default"],[180,37,82,36],[180,38,82,37,"manifestString"],[180,52,82,51],[180,55,82,54,"JSON"],[180,59,82,58],[180,60,82,59,"parse"],[180,65,82,64],[180,66,82,65,"ExpoUpdates"],[180,77,82,76],[180,78,82,76,"default"],[180,85,82,76],[180,86,82,77,"manifestString"],[180,100,82,91],[180,101,82,92],[180,104,82,95,"ExpoUpdates"],[180,115,82,106],[180,116,82,106,"default"],[180,123,82,106],[180,124,82,107,"manifest"],[180,132,82,115],[180,137,83,4],[180,138,83,5],[180,139,83,6],[181,2,84,0],[182,0,85,0],[183,0,86,0],[184,0,87,0],[185,0,88,0],[186,0,89,0],[187,2,90,7],[187,6,90,13,"createdAt"],[187,15,90,22],[187,18,90,25,"ExpoUpdates"],[187,29,90,36],[187,30,90,36,"default"],[187,37,90,36],[187,38,90,37,"commitTime"],[187,48,90,47],[187,51,91,6],[187,55,91,10,"Date"],[187,59,91,14],[187,60,91,15,"ExpoUpdates"],[187,71,91,26],[187,72,91,26,"default"],[187,79,91,26],[187,80,91,27,"commitTime"],[187,90,91,37],[187,91,91,38],[187,94,92,6],[187,98,92,10],[188,2,93,0],[189,0,94,0],[190,0,95,0],[191,0,96,0],[192,0,97,0],[193,2,98,0],[193,6,98,6,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[193,62,98,62],[193,65,98,65],[193,66,98,66],[193,67,98,67,"ExpoUpdates"],[193,78,98,78],[193,79,98,78,"default"],[193,86,98,78],[193,87,98,79,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[193,143,98,135],[194,2,99,0],[195,0,100,0],[196,0,101,0],[197,2,102,0],[197,6,102,6,"isUsingDeveloperTool"],[197,26,102,26],[197,29,102,29],[197,36,102,36],[197,40,102,40,"manifest"],[197,48,102,48],[197,51,102,51],[197,52,102,52],[197,53,102,53,"manifest"],[197,61,102,61],[197,62,102,62,"extra"],[197,67,102,67],[197,69,102,69,"expoGo"],[197,75,102,75],[197,77,102,77,"developer"],[197,86,102,86],[197,88,102,88,"tool"],[197,92,102,92],[197,95,102,95],[197,100,102,100],[198,2,103,0],[198,6,103,6,"manualUpdatesInstructions"],[198,31,103,31],[198,34,103,34],[198,162,103,162],[198,165,104,4],[198,208,104,47],[199,2,105,0],[200,0,106,0],[201,0,107,0],[202,0,108,0],[203,0,109,0],[204,0,110,0],[205,0,111,0],[206,0,112,0],[207,0,113,0],[208,0,114,0],[209,0,115,0],[210,0,116,0],[211,0,117,0],[212,0,118,0],[213,0,119,0],[214,0,120,0],[215,0,121,0],[216,0,122,0],[217,0,123,0],[218,0,124,0],[219,0,125,0],[220,0,126,0],[221,0,127,0],[222,0,128,0],[223,0,129,0],[224,0,130,0],[225,2,105,0],[225,11,131,22,"reloadAsync"],[225,22,131,33,"reloadAsync"],[225,23,131,33],[226,4,131,33],[226,11,131,33,"_reloadAsync"],[226,23,131,33],[226,24,131,33,"apply"],[226,29,131,33],[226,36,131,33,"arguments"],[226,45,131,33],[227,2,131,33],[228,2,138,0],[229,0,139,0],[230,0,140,0],[231,0,141,0],[232,0,142,0],[233,0,143,0],[234,0,144,0],[235,0,145,0],[236,0,146,0],[237,0,147,0],[238,0,148,0],[239,0,149,0],[240,0,150,0],[241,0,151,0],[242,0,152,0],[243,2,138,0],[243,11,138,0,"_reloadAsync"],[243,24,138,0],[244,4,138,0,"_reloadAsync"],[244,16,138,0],[244,23,138,0,"_asyncToGenerator"],[244,40,138,0],[244,41,138,0,"default"],[244,48,138,0],[244,50,131,7],[244,63,131,36],[245,6,132,4],[245,10,132,8],[245,11,132,9,"__DEV__"],[245,18,132,16],[245,22,132,20,"isUsingDeveloperTool"],[245,42,132,40],[245,47,133,8],[245,48,133,9,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[245,104,133,65],[245,106,133,67],[246,8,134,8],[246,14,134,14],[246,18,134,18,"CodedError"],[246,34,134,28],[246,35,134,28,"CodedError"],[246,45,134,28],[246,46,134,29],[246,68,134,51],[246,70,134,53],[246,148,134,131,"manualUpdatesInstructions"],[246,173,134,156],[246,175,134,158],[246,176,134,159],[247,6,135,4],[248,6,136,4],[248,12,136,10,"ExpoUpdates"],[248,23,136,21],[248,24,136,21,"default"],[248,31,136,21],[248,32,136,22,"reload"],[248,38,136,28],[248,39,136,29],[248,40,136,30],[249,4,137,0],[249,5,137,1],[250,4,137,1],[250,11,137,1,"_reloadAsync"],[250,23,137,1],[250,24,137,1,"apply"],[250,29,137,1],[250,36,137,1,"arguments"],[250,45,137,1],[251,2,137,1],[252,2,137,1],[252,11,153,22,"checkForUpdateAsync"],[252,30,153,41,"checkForUpdateAsync"],[252,31,153,41],[253,4,153,41],[253,11,153,41,"_checkForUpdateAsync"],[253,31,153,41],[253,32,153,41,"apply"],[253,37,153,41],[253,44,153,41,"arguments"],[253,53,153,41],[254,2,153,41],[255,2,168,0],[256,0,169,0],[257,0,170,0],[258,0,171,0],[259,0,172,0],[260,2,168,0],[260,11,168,0,"_checkForUpdateAsync"],[260,32,168,0],[261,4,168,0,"_checkForUpdateAsync"],[261,24,168,0],[261,31,168,0,"_asyncToGenerator"],[261,48,168,0],[261,49,168,0,"default"],[261,56,168,0],[261,58,153,7],[261,71,153,44],[262,6,154,4],[262,10,154,8],[262,11,154,9,"__DEV__"],[262,18,154,16],[262,22,154,20,"isUsingDeveloperTool"],[262,42,154,40],[262,47,155,8],[262,48,155,9,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[262,104,155,65],[262,106,155,67],[263,8,156,8],[263,14,156,14],[263,18,156,18,"CodedError"],[263,34,156,28],[263,35,156,28,"CodedError"],[263,45,156,28],[263,46,156,29],[263,68,156,51],[263,70,156,53],[263,123,156,106,"manualUpdatesInstructions"],[263,148,156,131],[263,150,156,133],[263,151,156,134],[264,6,157,4],[265,6,158,4],[265,10,158,10,"result"],[265,16,158,16],[265,25,158,25,"ExpoUpdates"],[265,36,158,36],[265,37,158,36,"default"],[265,44,158,36],[265,45,158,37,"checkForUpdateAsync"],[265,64,158,56],[265,65,158,57],[265,66,158,58],[266,6,159,4],[266,10,159,8],[266,26,159,24],[266,30,159,28,"result"],[266,36,159,34],[266,38,159,36],[267,8,160,8],[267,12,160,16,"manifestString"],[267,26,160,30],[267,29,160,44,"result"],[267,35,160,50],[267,36,160,16,"manifestString"],[267,50,160,30],[268,10,160,35,"rest"],[268,14,160,39],[268,21,160,39,"_objectWithoutProperties"],[268,45,160,39],[268,46,160,39,"default"],[268,53,160,39],[268,55,160,44,"result"],[268,61,160,50],[268,63,160,50,"_excluded"],[268,72,160,50],[269,8,161,8],[269,15,161,15],[270,10,162,12],[270,13,162,15,"rest"],[270,17,162,19],[271,10,163,12,"manifest"],[271,18,163,20],[271,20,163,22,"JSON"],[271,24,163,26],[271,25,163,27,"parse"],[271,30,163,32],[271,31,163,33,"manifestString"],[271,45,163,47],[272,8,164,8],[272,9,164,9],[273,6,165,4],[274,6,166,4],[274,13,166,11,"result"],[274,19,166,17],[275,4,167,0],[275,5,167,1],[276,4,167,1],[276,11,167,1,"_checkForUpdateAsync"],[276,31,167,1],[276,32,167,1,"apply"],[276,37,167,1],[276,44,167,1,"arguments"],[276,53,167,1],[277,2,167,1],[278,2,167,1],[278,11,173,22,"getExtraParamsAsync"],[278,30,173,41,"getExtraParamsAsync"],[278,31,173,41],[279,4,173,41],[279,11,173,41,"_getExtraParamsAsync"],[279,31,173,41],[279,32,173,41,"apply"],[279,37,173,41],[279,44,173,41,"arguments"],[279,53,173,41],[280,2,173,41],[281,2,176,0],[282,0,177,0],[283,0,178,0],[284,0,179,0],[285,0,180,0],[286,0,181,0],[287,0,182,0],[288,2,176,0],[288,11,176,0,"_getExtraParamsAsync"],[288,32,176,0],[289,4,176,0,"_getExtraParamsAsync"],[289,24,176,0],[289,31,176,0,"_asyncToGenerator"],[289,48,176,0],[289,49,176,0,"default"],[289,56,176,0],[289,58,173,7],[289,71,173,44],[290,6,174,4],[290,19,174,17,"ExpoUpdates"],[290,30,174,28],[290,31,174,28,"default"],[290,38,174,28],[290,39,174,29,"getExtraParamsAsync"],[290,58,174,48],[290,59,174,49],[290,60,174,50],[291,4,175,0],[291,5,175,1],[292,4,175,1],[292,11,175,1,"_getExtraParamsAsync"],[292,31,175,1],[292,32,175,1,"apply"],[292,37,175,1],[292,44,175,1,"arguments"],[292,53,175,1],[293,2,175,1],[294,2,175,1],[294,11,183,22,"setExtraParamAsync"],[294,29,183,40,"setExtraParamAsync"],[294,30,183,40,"_x"],[294,32,183,40],[294,34,183,40,"_x2"],[294,37,183,40],[295,4,183,40],[295,11,183,40,"_setExtraParamAsync"],[295,30,183,40],[295,31,183,40,"apply"],[295,36,183,40],[295,43,183,40,"arguments"],[295,52,183,40],[296,2,183,40],[297,2,186,0],[298,0,187,0],[299,0,188,0],[300,0,189,0],[301,0,190,0],[302,0,191,0],[303,0,192,0],[304,0,193,0],[305,0,194,0],[306,2,186,0],[306,11,186,0,"_setExtraParamAsync"],[306,31,186,0],[307,4,186,0,"_setExtraParamAsync"],[307,23,186,0],[307,30,186,0,"_asyncToGenerator"],[307,47,186,0],[307,48,186,0,"default"],[307,55,186,0],[307,57,183,7],[307,68,183,41,"key"],[307,71,183,44],[307,73,183,46,"value"],[307,78,183,51],[307,80,183,53],[308,6,184,4],[308,19,184,17,"ExpoUpdates"],[308,30,184,28],[308,31,184,28,"default"],[308,38,184,28],[308,39,184,29,"setExtraParamAsync"],[308,57,184,47],[308,58,184,48,"key"],[308,61,184,51],[308,63,184,53,"value"],[308,68,184,58],[308,72,184,62],[308,76,184,66],[308,77,184,67],[309,4,185,0],[309,5,185,1],[310,4,185,1],[310,11,185,1,"_setExtraParamAsync"],[310,30,185,1],[310,31,185,1,"apply"],[310,36,185,1],[310,43,185,1,"arguments"],[310,52,185,1],[311,2,185,1],[312,2,185,1],[312,11,195,22,"readLogEntriesAsync"],[312,30,195,41,"readLogEntriesAsync"],[312,31,195,41],[313,4,195,41],[313,11,195,41,"_readLogEntriesAsync"],[313,31,195,41],[313,32,195,41,"apply"],[313,37,195,41],[313,44,195,41,"arguments"],[313,53,195,41],[314,2,195,41],[315,2,198,0],[316,0,199,0],[317,0,200,0],[318,0,201,0],[319,0,202,0],[320,0,203,0],[321,0,204,0],[322,0,205,0],[323,0,206,0],[324,0,207,0],[325,0,208,0],[326,2,198,0],[326,11,198,0,"_readLogEntriesAsync"],[326,32,198,0],[327,4,198,0,"_readLogEntriesAsync"],[327,24,198,0],[327,31,198,0,"_asyncToGenerator"],[327,48,198,0],[327,49,198,0,"default"],[327,56,198,0],[327,58,195,7],[327,71,195,60],[328,6,195,60],[328,10,195,42,"maxAge"],[328,16,195,48],[328,19,195,48,"arguments"],[328,28,195,48],[328,29,195,48,"length"],[328,35,195,48],[328,43,195,48,"arguments"],[328,52,195,48],[328,60,195,48,"undefined"],[328,69,195,48],[328,72,195,48,"arguments"],[328,81,195,48],[328,87,195,51],[328,94,195,58],[329,6,196,4],[329,19,196,17,"ExpoUpdates"],[329,30,196,28],[329,31,196,28,"default"],[329,38,196,28],[329,39,196,29,"readLogEntriesAsync"],[329,58,196,48],[329,59,196,49,"maxAge"],[329,65,196,55],[329,66,196,56],[330,4,197,0],[330,5,197,1],[331,4,197,1],[331,11,197,1,"_readLogEntriesAsync"],[331,31,197,1],[331,32,197,1,"apply"],[331,37,197,1],[331,44,197,1,"arguments"],[331,53,197,1],[332,2,197,1],[333,2,197,1],[333,11,209,22,"clearLogEntriesAsync"],[333,31,209,42,"clearLogEntriesAsync"],[333,32,209,42],[334,4,209,42],[334,11,209,42,"_clearLogEntriesAsync"],[334,32,209,42],[334,33,209,42,"apply"],[334,38,209,42],[334,45,209,42,"arguments"],[334,54,209,42],[335,2,209,42],[336,2,212,0],[337,0,213,0],[338,0,214,0],[339,0,215,0],[340,0,216,0],[341,0,217,0],[342,0,218,0],[343,0,219,0],[344,0,220,0],[345,0,221,0],[346,0,222,0],[347,0,223,0],[348,0,224,0],[349,0,225,0],[350,2,212,0],[350,11,212,0,"_clearLogEntriesAsync"],[350,33,212,0],[351,4,212,0,"_clearLogEntriesAsync"],[351,25,212,0],[351,32,212,0,"_asyncToGenerator"],[351,49,212,0],[351,50,212,0,"default"],[351,57,212,0],[351,59,209,7],[351,72,209,45],[352,6,210,4],[352,12,210,10,"ExpoUpdates"],[352,23,210,21],[352,24,210,21,"default"],[352,31,210,21],[352,32,210,22,"clearLogEntriesAsync"],[352,52,210,42],[352,53,210,43],[352,54,210,44],[353,4,211,0],[353,5,211,1],[354,4,211,1],[354,11,211,1,"_clearLogEntriesAsync"],[354,32,211,1],[354,33,211,1,"apply"],[354,38,211,1],[354,45,211,1,"arguments"],[354,54,211,1],[355,2,211,1],[356,2,211,1],[356,11,226,22,"fetchUpdateAsync"],[356,27,226,38,"fetchUpdateAsync"],[356,28,226,38],[357,4,226,38],[357,11,226,38,"_fetchUpdateAsync"],[357,28,226,38],[357,29,226,38,"apply"],[357,34,226,38],[357,41,226,38,"arguments"],[357,50,226,38],[358,2,226,38],[359,2,241,0],[360,0,242,0],[361,0,243,0],[362,2,241,0],[362,11,241,0,"_fetchUpdateAsync"],[362,29,241,0],[363,4,241,0,"_fetchUpdateAsync"],[363,21,241,0],[363,28,241,0,"_asyncToGenerator"],[363,45,241,0],[363,46,241,0,"default"],[363,53,241,0],[363,55,226,7],[363,68,226,41],[364,6,227,4],[364,10,227,8],[364,11,227,9,"__DEV__"],[364,18,227,16],[364,22,227,20,"isUsingDeveloperTool"],[364,42,227,40],[364,47,228,8],[364,48,228,9,"shouldDeferToNativeForAPIMethodAvailabilityInDevelopment"],[364,104,228,65],[364,106,228,67],[365,8,229,8],[365,14,229,14],[365,18,229,18,"CodedError"],[365,34,229,28],[365,35,229,28,"CodedError"],[365,45,229,28],[365,46,229,29],[365,68,229,51],[365,70,229,53],[365,119,229,102,"manualUpdatesInstructions"],[365,144,229,127],[365,146,229,129],[365,147,229,130],[366,6,230,4],[367,6,231,4],[367,10,231,10,"result"],[367,16,231,16],[367,25,231,25,"ExpoUpdates"],[367,36,231,36],[367,37,231,36,"default"],[367,44,231,36],[367,45,231,37,"fetchUpdateAsync"],[367,61,231,53],[367,62,231,54],[367,63,231,55],[368,6,232,4],[368,10,232,8],[368,26,232,24],[368,30,232,28,"result"],[368,36,232,34],[368,38,232,36],[369,8,233,8],[369,12,233,16,"manifestString"],[369,26,233,30],[369,29,233,44,"result"],[369,35,233,50],[369,36,233,16,"manifestString"],[369,50,233,30],[370,10,233,35,"rest"],[370,14,233,39],[370,21,233,39,"_objectWithoutProperties"],[370,45,233,39],[370,46,233,39,"default"],[370,53,233,39],[370,55,233,44,"result"],[370,61,233,50],[370,63,233,50,"_excluded2"],[370,73,233,50],[371,8,234,8],[371,15,234,15],[372,10,235,12],[372,13,235,15,"rest"],[372,17,235,19],[373,10,236,12,"manifest"],[373,18,236,20],[373,20,236,22,"JSON"],[373,24,236,26],[373,25,236,27,"parse"],[373,30,236,32],[373,31,236,33,"manifestString"],[373,45,236,47],[374,8,237,8],[374,9,237,9],[375,6,238,4],[376,6,239,4],[376,13,239,11,"result"],[376,19,239,17],[377,4,240,0],[377,5,240,1],[378,4,240,1],[378,11,240,1,"_fetchUpdateAsync"],[378,28,240,1],[378,29,240,1,"apply"],[378,34,240,1],[378,41,240,1,"arguments"],[378,50,240,1],[379,2,240,1],[380,2,244,7],[380,11,244,16,"clearUpdateCacheExperimentalAsync"],[380,44,244,49,"clearUpdateCacheExperimentalAsync"],[380,45,244,50,"_sdkVersion"],[380,56,244,61],[380,58,244,63],[381,4,245,4,"console"],[381,11,245,11],[381,12,245,12,"warn"],[381,16,245,16],[381,17,245,17],[381,124,245,124],[381,125,245,125],[382,2,246,0],[383,2,247,0],[384,0,248,0],[385,0,249,0],[386,2,250,7],[386,11,250,16,"transformNativeStateMachineContext"],[386,45,250,50,"transformNativeStateMachineContext"],[386,46,250,51,"originalNativeContext"],[386,67,250,72],[386,69,250,74],[387,4,251,4],[387,8,251,10,"nativeContext"],[387,21,251,23],[387,24,251,26],[388,6,251,28],[388,9,251,31,"originalNativeContext"],[389,4,251,53],[389,5,251,54],[390,4,252,4],[390,8,252,8,"nativeContext"],[390,21,252,21],[390,22,252,22,"latestManifestString"],[390,42,252,42],[390,44,252,44],[391,6,253,8,"nativeContext"],[391,19,253,21],[391,20,253,22,"latestManifest"],[391,34,253,36],[391,37,253,39,"JSON"],[391,41,253,43],[391,42,253,44,"parse"],[391,47,253,49],[391,48,253,50,"nativeContext"],[391,61,253,63],[391,62,253,64,"latestManifestString"],[391,82,253,84],[391,83,253,85],[392,6,254,8],[392,13,254,15,"nativeContext"],[392,26,254,28],[392,27,254,29,"latestManifestString"],[392,47,254,49],[393,4,255,4],[394,4,256,4],[394,8,256,8,"nativeContext"],[394,21,256,21],[394,22,256,22,"downloadedManifestString"],[394,46,256,46],[394,48,256,48],[395,6,257,8,"nativeContext"],[395,19,257,21],[395,20,257,22,"downloadedManifest"],[395,38,257,40],[395,41,257,43,"JSON"],[395,45,257,47],[395,46,257,48,"parse"],[395,51,257,53],[395,52,257,54,"nativeContext"],[395,65,257,67],[395,66,257,68,"downloadedManifestString"],[395,90,257,92],[395,91,257,93],[396,6,258,8],[396,13,258,15,"nativeContext"],[396,26,258,28],[396,27,258,29,"downloadedManifestString"],[396,51,258,53],[397,4,259,4],[398,4,260,4],[398,8,260,8,"nativeContext"],[398,21,260,21],[398,22,260,22,"lastCheckForUpdateTimeString"],[398,50,260,50],[398,52,260,52],[399,6,261,8,"nativeContext"],[399,19,261,21],[399,20,261,22,"lastCheckForUpdateTime"],[399,42,261,44],[399,45,261,47],[399,49,261,51,"Date"],[399,53,261,55],[399,54,261,56,"nativeContext"],[399,67,261,69],[399,68,261,70,"lastCheckForUpdateTimeString"],[399,96,261,98],[399,97,261,99],[400,6,262,8],[400,13,262,15,"nativeContext"],[400,26,262,28],[400,27,262,29,"lastCheckForUpdateTimeString"],[400,55,262,57],[401,4,263,4],[402,4,264,4],[402,8,264,8,"nativeContext"],[402,21,264,21],[402,22,264,22,"rollbackString"],[402,36,264,36],[402,38,264,38],[403,6,265,8,"nativeContext"],[403,19,265,21],[403,20,265,22,"rollback"],[403,28,265,30],[403,31,265,33,"JSON"],[403,35,265,37],[403,36,265,38,"parse"],[403,41,265,43],[403,42,265,44,"nativeContext"],[403,55,265,57],[403,56,265,58,"rollbackString"],[403,70,265,72],[403,71,265,73],[404,6,266,8],[404,13,266,15,"nativeContext"],[404,26,266,28],[404,27,266,29,"rollbackString"],[404,41,266,43],[405,4,267,4],[406,4,268,4],[406,11,268,11,"nativeContext"],[406,24,268,24],[407,2,269,0],[408,2,270,0],[409,0,271,0],[410,0,272,0],[411,2,270,0],[411,11,273,22,"getNativeStateMachineContextAsync"],[411,44,273,55,"getNativeStateMachineContextAsync"],[411,45,273,55],[412,4,273,55],[412,11,273,55,"_getNativeStateMachineContextAsync"],[412,45,273,55],[412,46,273,55,"apply"],[412,51,273,55],[412,58,273,55,"arguments"],[412,67,273,55],[413,2,273,55],[414,2,273,55],[414,11,273,55,"_getNativeStateMachineContextAsync"],[414,46,273,55],[415,4,273,55,"_getNativeStateMachineContextAsync"],[415,38,273,55],[415,45,273,55,"_asyncToGenerator"],[415,62,273,55],[415,63,273,55,"default"],[415,70,273,55],[415,72,273,7],[415,85,273,58],[416,6,274,4],[416,10,274,10,"nativeContext"],[416,23,274,23],[416,32,274,32,"ExpoUpdates"],[416,43,274,43],[416,44,274,43,"default"],[416,51,274,43],[416,52,274,44,"getNativeStateMachineContextAsync"],[416,85,274,77],[416,86,274,78],[416,87,274,79],[417,6,275,4],[417,13,275,11,"transformNativeStateMachineContext"],[417,47,275,45],[417,48,275,46,"nativeContext"],[417,61,275,59],[417,62,275,60],[418,4,276,0],[418,5,276,1],[419,4,276,1],[419,11,276,1,"_getNativeStateMachineContextAsync"],[419,45,276,1],[419,46,276,1,"apply"],[419,51,276,1],[419,58,276,1,"arguments"],[419,67,276,1],[420,2,276,1],[421,0,276,1],[421,3]],"functionMap":{"names":["<global>","reloadAsync","checkForUpdateAsync","getExtraParamsAsync","setExtraParamAsync","readLogEntriesAsync","clearLogEntriesAsync","fetchUpdateAsync","clearUpdateCacheExperimentalAsync","transformNativeStateMachineContext","getNativeStateMachineContextAsync"],"mappings":"AAA;OCkI;CDM;OEgB;CFc;OGM;CHE;OIQ;CJE;OKU;CLE;OMY;CNE;OOe;CPc;OQI;CRE;OSI;CTmB;OUI;CVG"},"hasCjsExports":false},"type":"js/module"}]}