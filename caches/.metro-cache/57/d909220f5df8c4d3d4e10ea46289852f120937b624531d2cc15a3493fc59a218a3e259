{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./useNavigation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":67},"end":{"line":4,"column":44,"index":111}}],"key":"6L4SFVR2tVRyIVbAZv8N2RYC398=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return useIsFocused;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopNamespace(_react);\n  var _useNavigation = require(_dependencyMap[2], \"./useNavigation\");\n  var useNavigation = _interopDefault(_useNavigation);\n  /**\n   * Hook to get the current focus state of the screen. Returns a `true` if screen is focused, otherwise `false`.\n   * This can be used if a component needs to render something based on the focus state.\n   */\n  function useIsFocused() {\n    var navigation = (0, useNavigation.default)();\n    var _useState = (0, _react.useState)(navigation.isFocused),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      isFocused = _useState2[0],\n      setIsFocused = _useState2[1];\n    var valueToReturn = navigation.isFocused();\n    if (isFocused !== valueToReturn) {\n      // If the value has changed since the last render, we need to update it.\n      // This could happen if we missed an update from the event listeners during re-render.\n      // React will process this update immediately, so the old subscription value won't be committed.\n      // It is still nice to avoid returning a mismatched value though, so let's override the return value.\n      // This is the same logic as in https://github.com/facebook/react/tree/master/packages/use-subscription\n      setIsFocused(valueToReturn);\n    }\n    React.useEffect(() => {\n      var unsubscribeFocus = navigation.addListener('focus', () => setIsFocused(true));\n      var unsubscribeBlur = navigation.addListener('blur', () => setIsFocused(false));\n      return () => {\n        unsubscribeFocus();\n        unsubscribeBlur();\n      };\n    }, [navigation]);\n    React.useDebugValue(valueToReturn);\n    return valueToReturn;\n  }\n});","lineCount":69,"map":[[27,2,10,15,"Object"],[27,8,10,15],[27,9,10,15,"defineProperty"],[27,23,10,15],[27,24,10,15,"exports"],[27,31,10,15],[28,4,10,15,"enumerable"],[28,14,10,15],[29,4,10,15,"get"],[29,7,10,15],[29,18,10,15,"get"],[29,19,10,15],[30,6,10,15],[30,13,10,15,"useIsFocused"],[30,25,10,15],[31,4,10,15],[32,2,10,15],[33,2,43,1],[33,6,43,1,"_babelRuntimeHelpersSlicedToArray"],[33,39,43,1],[33,42,43,1,"require"],[33,49,43,1],[33,50,43,1,"_dependencyMap"],[33,64,43,1],[34,2,43,1],[34,6,43,1,"_slicedToArray"],[34,20,43,1],[34,23,43,1,"_interopDefault"],[34,38,43,1],[34,39,43,1,"_babelRuntimeHelpersSlicedToArray"],[34,72,43,1],[35,2,1,0],[35,6,1,0,"_react"],[35,12,1,0],[35,15,1,0,"require"],[35,22,1,0],[35,23,1,0,"_dependencyMap"],[35,37,1,0],[36,2,1,0],[36,6,1,0,"React"],[36,11,1,0],[36,14,1,0,"_interopNamespace"],[36,31,1,0],[36,32,1,0,"_react"],[36,38,1,0],[37,2,4,0],[37,6,4,0,"_useNavigation"],[37,20,4,0],[37,23,4,0,"require"],[37,30,4,0],[37,31,4,0,"_dependencyMap"],[37,45,4,0],[38,2,4,0],[38,6,4,0,"useNavigation"],[38,19,4,0],[38,22,4,0,"_interopDefault"],[38,37,4,0],[38,38,4,0,"_useNavigation"],[38,52,4,0],[39,2,6,0],[40,0,7,0],[41,0,8,0],[42,0,9,0],[43,2,10,15],[43,11,10,24,"useIsFocused"],[43,23,10,36,"useIsFocused"],[43,24,10,36],[43,26,10,48],[44,4,11,2],[44,8,11,8,"navigation"],[44,18,11,18],[44,21,11,21],[44,25,11,21,"useNavigation"],[44,38,11,34],[44,39,11,34,"default"],[44,46,11,34],[44,48,11,35],[44,49,11,36],[45,4,12,2],[45,8,12,2,"_useState"],[45,17,12,2],[45,20,12,36],[45,24,12,36,"useState"],[45,30,12,44],[45,31,12,44,"useState"],[45,39,12,44],[45,41,12,45,"navigation"],[45,51,12,55],[45,52,12,56,"isFocused"],[45,61,12,65],[45,62,12,66],[46,6,12,66,"_useState2"],[46,16,12,66],[46,23,12,66,"_slicedToArray"],[46,37,12,66],[46,38,12,66,"default"],[46,45,12,66],[46,47,12,66,"_useState"],[46,56,12,66],[47,6,12,9,"isFocused"],[47,15,12,18],[47,18,12,18,"_useState2"],[47,28,12,18],[48,6,12,20,"setIsFocused"],[48,18,12,32],[48,21,12,32,"_useState2"],[48,31,12,32],[49,4,14,2],[49,8,14,8,"valueToReturn"],[49,21,14,21],[49,24,14,24,"navigation"],[49,34,14,34],[49,35,14,35,"isFocused"],[49,44,14,44],[49,45,14,45],[49,46,14,46],[50,4,16,2],[50,8,16,6,"isFocused"],[50,17,16,15],[50,22,16,20,"valueToReturn"],[50,35,16,33],[50,37,16,35],[51,6,17,4],[52,6,18,4],[53,6,19,4],[54,6,20,4],[55,6,21,4],[56,6,22,4,"setIsFocused"],[56,18,22,16],[56,19,22,17,"valueToReturn"],[56,32,22,30],[56,33,22,31],[57,4,23,2],[58,4,25,2,"React"],[58,9,25,7],[58,10,25,8,"useEffect"],[58,19,25,17],[58,20,25,18],[58,26,25,24],[59,6,26,4],[59,10,26,10,"unsubscribeFocus"],[59,26,26,26],[59,29,26,29,"navigation"],[59,39,26,39],[59,40,26,40,"addListener"],[59,51,26,51],[59,52,26,52],[59,59,26,59],[59,61,26,61],[59,67,27,6,"setIsFocused"],[59,79,27,18],[59,80,27,19],[59,84,27,23],[59,85,28,4],[59,86,28,5],[60,6,30,4],[60,10,30,10,"unsubscribeBlur"],[60,25,30,25],[60,28,30,28,"navigation"],[60,38,30,38],[60,39,30,39,"addListener"],[60,50,30,50],[60,51,30,51],[60,57,30,57],[60,59,30,59],[60,65,31,6,"setIsFocused"],[60,77,31,18],[60,78,31,19],[60,83,31,24],[60,84,32,4],[60,85,32,5],[61,6,34,4],[61,13,34,11],[61,19,34,17],[62,8,35,6,"unsubscribeFocus"],[62,24,35,22],[62,25,35,23],[62,26,35,24],[63,8,36,6,"unsubscribeBlur"],[63,23,36,21],[63,24,36,22],[63,25,36,23],[64,6,37,4],[64,7,37,5],[65,4,38,2],[65,5,38,3],[65,7,38,5],[65,8,38,6,"navigation"],[65,18,38,16],[65,19,38,17],[65,20,38,18],[66,4,40,2,"React"],[66,9,40,7],[66,10,40,8,"useDebugValue"],[66,23,40,21],[66,24,40,22,"valueToReturn"],[66,37,40,35],[66,38,40,36],[67,4,42,2],[67,11,42,9,"valueToReturn"],[67,24,42,22],[68,2,43,0],[69,0,43,1],[69,3]],"functionMap":{"names":["<global>","useIsFocused","React.useEffect$argument_0","navigation.addListener$argument_1","<anonymous>"],"mappings":"AAA;eCS;kBCe;6DCC;wBDC;2DCG;yBDC;WEG;KFG;GDC;CDK"},"hasCjsExports":false},"type":"js/module"}]}