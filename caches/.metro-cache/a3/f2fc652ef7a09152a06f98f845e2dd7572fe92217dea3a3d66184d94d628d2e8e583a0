{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.elementsThatOverlapOffsets = elementsThatOverlapOffsets;\n  exports.newRangeCount = newRangeCount;\n  exports.computeWindowedRenderLimits = computeWindowedRenderLimits;\n  exports.keyExtractor = keyExtractor;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  function elementsThatOverlapOffsets(offsets, props, listMetrics) {\n    var zoomScale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    var itemCount = props.getItemCount(props.data);\n    var result = [];\n    for (var offsetIndex = 0; offsetIndex < offsets.length; offsetIndex++) {\n      var currentOffset = offsets[offsetIndex];\n      var left = 0;\n      var right = itemCount - 1;\n      while (left <= right) {\n        var mid = left + Math.floor((right - left) / 2);\n        var frame = listMetrics.getCellMetricsApprox(mid, props);\n        var scaledOffsetStart = frame.offset * zoomScale;\n        var scaledOffsetEnd = (frame.offset + frame.length) * zoomScale;\n        if (mid === 0 && currentOffset < scaledOffsetStart || mid !== 0 && currentOffset <= scaledOffsetStart) {\n          right = mid - 1;\n        } else if (currentOffset > scaledOffsetEnd) {\n          left = mid + 1;\n        } else {\n          result[offsetIndex] = mid;\n          break;\n        }\n      }\n    }\n    return result;\n  }\n  function newRangeCount(prev, next) {\n    return next.last - next.first + 1 - Math.max(0, 1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first));\n  }\n  function computeWindowedRenderLimits(props, maxToRenderPerBatch, windowSize, prev, listMetrics, scrollMetrics) {\n    var itemCount = props.getItemCount(props.data);\n    if (itemCount === 0) {\n      return {\n        first: 0,\n        last: -1\n      };\n    }\n    var offset = scrollMetrics.offset,\n      velocity = scrollMetrics.velocity,\n      visibleLength = scrollMetrics.visibleLength,\n      _scrollMetrics$zoomSc = scrollMetrics.zoomScale,\n      zoomScale = _scrollMetrics$zoomSc === void 0 ? 1 : _scrollMetrics$zoomSc;\n    var visibleBegin = Math.max(0, offset);\n    var visibleEnd = visibleBegin + visibleLength;\n    var overscanLength = (windowSize - 1) * visibleLength;\n    var leadFactor = 0.5;\n    var fillPreference = velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';\n    var overscanBegin = Math.max(0, visibleBegin - (1 - leadFactor) * overscanLength);\n    var overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);\n    var lastItemOffset = listMetrics.getCellMetricsApprox(itemCount - 1, props).offset * zoomScale;\n    if (lastItemOffset < overscanBegin) {\n      return {\n        first: Math.max(0, itemCount - 1 - maxToRenderPerBatch),\n        last: itemCount - 1\n      };\n    }\n    var _elementsThatOverlapO = elementsThatOverlapOffsets([overscanBegin, visibleBegin, visibleEnd, overscanEnd], props, listMetrics, zoomScale),\n      _elementsThatOverlapO2 = (0, _slicedToArray.default)(_elementsThatOverlapO, 4),\n      overscanFirst = _elementsThatOverlapO2[0],\n      first = _elementsThatOverlapO2[1],\n      last = _elementsThatOverlapO2[2],\n      overscanLast = _elementsThatOverlapO2[3];\n    overscanFirst = overscanFirst == null ? 0 : overscanFirst;\n    first = first == null ? Math.max(0, overscanFirst) : first;\n    overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;\n    last = last == null ? Math.min(overscanLast, first + maxToRenderPerBatch - 1) : last;\n    var visible = {\n      first,\n      last\n    };\n    var newCellCount = newRangeCount(prev, visible);\n    while (true) {\n      if (first <= overscanFirst && last >= overscanLast) {\n        break;\n      }\n      var maxNewCells = newCellCount >= maxToRenderPerBatch;\n      var firstWillAddMore = first <= prev.first || first > prev.last;\n      var firstShouldIncrement = first > overscanFirst && (!maxNewCells || !firstWillAddMore);\n      var lastWillAddMore = last >= prev.last || last < prev.first;\n      var lastShouldIncrement = last < overscanLast && (!maxNewCells || !lastWillAddMore);\n      if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {\n        break;\n      }\n      if (firstShouldIncrement && !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)) {\n        if (firstWillAddMore) {\n          newCellCount++;\n        }\n        first--;\n      }\n      if (lastShouldIncrement && !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)) {\n        if (lastWillAddMore) {\n          newCellCount++;\n        }\n        last++;\n      }\n    }\n    if (!(last >= first && first >= 0 && last < itemCount && first >= overscanFirst && last <= overscanLast && first <= visible.first && last >= visible.last)) {\n      throw new Error('Bad window calculation ' + JSON.stringify({\n        first,\n        last,\n        itemCount,\n        overscanFirst,\n        overscanLast,\n        visible\n      }));\n    }\n    return {\n      first,\n      last\n    };\n  }\n  function keyExtractor(item, index) {\n    if (typeof item === 'object' && item?.key != null) {\n      return item.key;\n    }\n    if (typeof item === 'object' && item?.id != null) {\n      return item.id;\n    }\n    return String(index);\n  }\n});","lineCount":137,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13,"Object"],[4,8,11,13],[4,9,11,13,"defineProperty"],[4,23,11,13],[4,24,11,13,"exports"],[4,31,11,13],[5,4,11,13,"value"],[5,9,11,13],[6,2,11,13],[7,2,11,13],[7,11,11,13,"_interopDefault"],[7,27,11,13,"e"],[7,28,11,13],[8,4,11,13],[8,11,11,13,"e"],[8,12,11,13],[8,16,11,13,"e"],[8,17,11,13],[8,18,11,13,"__esModule"],[8,28,11,13],[8,31,11,13,"e"],[8,32,11,13],[9,6,11,13,"default"],[9,13,11,13],[9,15,11,13,"e"],[10,4,11,13],[11,2,11,13],[12,2,22,0,"exports"],[12,9,22,0],[12,10,22,0,"elementsThatOverlapOffsets"],[12,36,22,0],[12,39,22,0,"elementsThatOverlapOffsets"],[12,65,22,0],[13,2,66,0,"exports"],[13,9,66,0],[13,10,66,0,"newRangeCount"],[13,23,66,0],[13,26,66,0,"newRangeCount"],[13,39,66,0],[14,2,95,0,"exports"],[14,9,95,0],[14,10,95,0,"computeWindowedRenderLimits"],[14,37,95,0],[14,40,95,0,"computeWindowedRenderLimits"],[14,67,95,0],[15,2,237,0,"exports"],[15,9,237,0],[15,10,237,0,"keyExtractor"],[15,22,237,0],[15,25,237,0,"keyExtractor"],[15,37,237,0],[16,2,245,1],[16,6,245,1,"_babelRuntimeHelpersSlicedToArray"],[16,39,245,1],[16,42,245,1,"require"],[16,49,245,1],[16,50,245,1,"_dependencyMap"],[16,64,245,1],[17,2,245,1],[17,6,245,1,"_slicedToArray"],[17,20,245,1],[17,23,245,1,"_interopDefault"],[17,38,245,1],[17,39,245,1,"_babelRuntimeHelpersSlicedToArray"],[17,72,245,1],[18,2,22,7],[18,11,22,16,"elementsThatOverlapOffsets"],[18,37,22,42,"elementsThatOverlapOffsets"],[18,38,23,2,"offsets"],[18,45,23,24],[18,47,24,2,"props"],[18,52,24,24],[18,54,25,2,"listMetrics"],[18,65,25,36],[18,67,27,17],[19,4,27,17],[19,8,26,2,"zoomScale"],[19,17,26,19],[19,20,26,19,"arguments"],[19,29,26,19],[19,30,26,19,"length"],[19,36,26,19],[19,44,26,19,"arguments"],[19,53,26,19],[19,61,26,19,"undefined"],[19,70,26,19],[19,73,26,19,"arguments"],[19,82,26,19],[19,88,26,22],[19,89,26,23],[20,4,28,2],[20,8,28,8,"itemCount"],[20,17,28,17],[20,20,28,20,"props"],[20,25,28,25],[20,26,28,26,"getItemCount"],[20,38,28,38],[20,39,28,39,"props"],[20,44,28,44],[20,45,28,45,"data"],[20,49,28,49],[20,50,28,50],[21,4,29,2],[21,8,29,8,"result"],[21,14,29,14],[21,17,29,17],[21,19,29,19],[22,4,30,2],[22,9,30,7],[22,13,30,11,"offsetIndex"],[22,24,30,22],[22,27,30,25],[22,28,30,26],[22,30,30,28,"offsetIndex"],[22,41,30,39],[22,44,30,42,"offsets"],[22,51,30,49],[22,52,30,50,"length"],[22,58,30,56],[22,60,30,58,"offsetIndex"],[22,71,30,69],[22,73,30,71],[22,75,30,73],[23,6,31,4],[23,10,31,10,"currentOffset"],[23,23,31,23],[23,26,31,26,"offsets"],[23,33,31,33],[23,34,31,34,"offsetIndex"],[23,45,31,45],[23,46,31,46],[24,6,32,4],[24,10,32,8,"left"],[24,14,32,12],[24,17,32,15],[24,18,32,16],[25,6,33,4],[25,10,33,8,"right"],[25,15,33,13],[25,18,33,16,"itemCount"],[25,27,33,25],[25,30,33,28],[25,31,33,29],[26,6,35,4],[26,13,35,11,"left"],[26,17,35,15],[26,21,35,19,"right"],[26,26,35,24],[26,28,35,26],[27,8,36,6],[27,12,36,12,"mid"],[27,15,36,15],[27,18,36,18,"left"],[27,22,36,22],[27,25,36,25,"Math"],[27,29,36,29],[27,30,36,30,"floor"],[27,35,36,35],[27,36,36,36],[27,37,36,37,"right"],[27,42,36,42],[27,45,36,45,"left"],[27,49,36,49],[27,53,36,53],[27,54,36,54],[27,55,36,55],[28,8,37,6],[28,12,37,12,"frame"],[28,17,37,17],[28,20,37,20,"listMetrics"],[28,31,37,31],[28,32,37,32,"getCellMetricsApprox"],[28,52,37,52],[28,53,37,53,"mid"],[28,56,37,56],[28,58,37,58,"props"],[28,63,37,63],[28,64,37,64],[29,8,38,6],[29,12,38,12,"scaledOffsetStart"],[29,29,38,29],[29,32,38,32,"frame"],[29,37,38,37],[29,38,38,38,"offset"],[29,44,38,44],[29,47,38,47,"zoomScale"],[29,56,38,56],[30,8,39,6],[30,12,39,12,"scaledOffsetEnd"],[30,27,39,27],[30,30,39,30],[30,31,39,31,"frame"],[30,36,39,36],[30,37,39,37,"offset"],[30,43,39,43],[30,46,39,46,"frame"],[30,51,39,51],[30,52,39,52,"length"],[30,58,39,58],[30,62,39,62,"zoomScale"],[30,71,39,71],[31,8,43,6],[31,12,44,9,"mid"],[31,15,44,12],[31,20,44,17],[31,21,44,18],[31,25,44,22,"currentOffset"],[31,38,44,35],[31,41,44,38,"scaledOffsetStart"],[31,58,44,55],[31,62,45,9,"mid"],[31,65,45,12],[31,70,45,17],[31,71,45,18],[31,75,45,22,"currentOffset"],[31,88,45,35],[31,92,45,39,"scaledOffsetStart"],[31,109,45,57],[31,111,46,8],[32,10,47,8,"right"],[32,15,47,13],[32,18,47,16,"mid"],[32,21,47,19],[32,24,47,22],[32,25,47,23],[33,8,48,6],[33,9,48,7],[33,15,48,13],[33,19,48,17,"currentOffset"],[33,32,48,30],[33,35,48,33,"scaledOffsetEnd"],[33,50,48,48],[33,52,48,50],[34,10,49,8,"left"],[34,14,49,12],[34,17,49,15,"mid"],[34,20,49,18],[34,23,49,21],[34,24,49,22],[35,8,50,6],[35,9,50,7],[35,15,50,13],[36,10,51,8,"result"],[36,16,51,14],[36,17,51,15,"offsetIndex"],[36,28,51,26],[36,29,51,27],[36,32,51,30,"mid"],[36,35,51,33],[37,10,52,8],[38,8,53,6],[39,6,54,4],[40,4,55,2],[41,4,57,2],[41,11,57,9,"result"],[41,17,57,15],[42,2,58,0],[43,2,66,7],[43,11,66,16,"newRangeCount"],[43,24,66,29,"newRangeCount"],[43,25,67,2,"prev"],[43,29,71,3],[43,31,72,2,"next"],[43,35,76,3],[43,37,77,10],[44,4,78,2],[44,11,79,4,"next"],[44,15,79,8],[44,16,79,9,"last"],[44,20,79,13],[44,23,80,4,"next"],[44,27,80,8],[44,28,80,9,"first"],[44,33,80,14],[44,36,81,4],[44,37,81,5],[44,40,82,4,"Math"],[44,44,82,8],[44,45,82,9,"max"],[44,48,82,12],[44,49,83,6],[44,50,83,7],[44,52,84,6],[44,53,84,7],[44,56,84,10,"Math"],[44,60,84,14],[44,61,84,15,"min"],[44,64,84,18],[44,65,84,19,"next"],[44,69,84,23],[44,70,84,24,"last"],[44,74,84,28],[44,76,84,30,"prev"],[44,80,84,34],[44,81,84,35,"last"],[44,85,84,39],[44,86,84,40],[44,89,84,43,"Math"],[44,93,84,47],[44,94,84,48,"max"],[44,97,84,51],[44,98,84,52,"next"],[44,102,84,56],[44,103,84,57,"first"],[44,108,84,62],[44,110,84,64,"prev"],[44,114,84,68],[44,115,84,69,"first"],[44,120,84,74],[44,121,85,4],[44,122,85,5],[45,2,87,0],[46,2,95,7],[46,11,95,16,"computeWindowedRenderLimits"],[46,38,95,43,"computeWindowedRenderLimits"],[46,39,96,2,"props"],[46,44,96,24],[46,46,97,2,"maxToRenderPerBatch"],[46,65,97,29],[46,67,98,2,"windowSize"],[46,77,98,20],[46,79,99,2,"prev"],[46,83,102,3],[46,85,103,2,"listMetrics"],[46,96,103,36],[46,98,104,2,"scrollMetrics"],[46,111,111,3],[46,113,115,2],[47,4,116,2],[47,8,116,8,"itemCount"],[47,17,116,17],[47,20,116,20,"props"],[47,25,116,25],[47,26,116,26,"getItemCount"],[47,38,116,38],[47,39,116,39,"props"],[47,44,116,44],[47,45,116,45,"data"],[47,49,116,49],[47,50,116,50],[48,4,117,2],[48,8,117,6,"itemCount"],[48,17,117,15],[48,22,117,20],[48,23,117,21],[48,25,117,23],[49,6,118,4],[49,13,118,11],[50,8,118,12,"first"],[50,13,118,17],[50,15,118,19],[50,16,118,20],[51,8,118,22,"last"],[51,12,118,26],[51,14,118,28],[51,15,118,29],[52,6,118,30],[52,7,118,31],[53,4,119,2],[54,4,120,2],[54,8,120,9,"offset"],[54,14,120,15],[54,17,120,59,"scrollMetrics"],[54,30,120,72],[54,31,120,9,"offset"],[54,37,120,15],[55,6,120,17,"velocity"],[55,14,120,25],[55,17,120,59,"scrollMetrics"],[55,30,120,72],[55,31,120,17,"velocity"],[55,39,120,25],[56,6,120,27,"visibleLength"],[56,19,120,40],[56,22,120,59,"scrollMetrics"],[56,35,120,72],[56,36,120,27,"visibleLength"],[56,49,120,40],[57,6,120,40,"_scrollMetrics$zoomSc"],[57,27,120,40],[57,30,120,59,"scrollMetrics"],[57,43,120,72],[57,44,120,42,"zoomScale"],[57,53,120,51],[58,6,120,42,"zoomScale"],[58,15,120,51],[58,18,120,51,"_scrollMetrics$zoomSc"],[58,39,120,51],[58,53,120,54],[58,54,120,55],[58,57,120,55,"_scrollMetrics$zoomSc"],[58,78,120,55],[59,4,125,2],[59,8,125,8,"visibleBegin"],[59,20,125,20],[59,23,125,23,"Math"],[59,27,125,27],[59,28,125,28,"max"],[59,31,125,31],[59,32,125,32],[59,33,125,33],[59,35,125,35,"offset"],[59,41,125,41],[59,42,125,42],[60,4,126,2],[60,8,126,8,"visibleEnd"],[60,18,126,18],[60,21,126,21,"visibleBegin"],[60,33,126,33],[60,36,126,36,"visibleLength"],[60,49,126,49],[61,4,127,2],[61,8,127,8,"overscanLength"],[61,22,127,22],[61,25,127,25],[61,26,127,26,"windowSize"],[61,36,127,36],[61,39,127,39],[61,40,127,40],[61,44,127,44,"visibleLength"],[61,57,127,57],[62,4,130,2],[62,8,130,8,"leadFactor"],[62,18,130,18],[62,21,130,21],[62,24,130,24],[63,4,132,2],[63,8,132,8,"fillPreference"],[63,22,132,22],[63,25,133,4,"velocity"],[63,33,133,12],[63,36,133,15],[63,37,133,16],[63,40,133,19],[63,47,133,26],[63,50,133,29,"velocity"],[63,58,133,37],[63,61,133,40],[63,62,133,41],[63,63,133,42],[63,66,133,45],[63,74,133,53],[63,77,133,56],[63,83,133,62],[64,4,135,2],[64,8,135,8,"overscanBegin"],[64,21,135,21],[64,24,135,24,"Math"],[64,28,135,28],[64,29,135,29,"max"],[64,32,135,32],[64,33,136,4],[64,34,136,5],[64,36,137,4,"visibleBegin"],[64,48,137,16],[64,51,137,19],[64,52,137,20],[64,53,137,21],[64,56,137,24,"leadFactor"],[64,66,137,34],[64,70,137,38,"overscanLength"],[64,84,138,2],[64,85,138,3],[65,4,139,2],[65,8,139,8,"overscanEnd"],[65,19,139,19],[65,22,139,22,"Math"],[65,26,139,26],[65,27,139,27,"max"],[65,30,139,30],[65,31,139,31],[65,32,139,32],[65,34,139,34,"visibleEnd"],[65,44,139,44],[65,47,139,47,"leadFactor"],[65,57,139,57],[65,60,139,60,"overscanLength"],[65,74,139,74],[65,75,139,75],[66,4,141,2],[66,8,141,8,"lastItemOffset"],[66,22,141,22],[66,25,142,4,"listMetrics"],[66,36,142,15],[66,37,142,16,"getCellMetricsApprox"],[66,57,142,36],[66,58,142,37,"itemCount"],[66,67,142,46],[66,70,142,49],[66,71,142,50],[66,73,142,52,"props"],[66,78,142,57],[66,79,142,58],[66,80,142,59,"offset"],[66,86,142,65],[66,89,142,68,"zoomScale"],[66,98,142,77],[67,4,143,2],[67,8,143,6,"lastItemOffset"],[67,22,143,20],[67,25,143,23,"overscanBegin"],[67,38,143,36],[67,40,143,38],[68,6,145,4],[68,13,145,11],[69,8,146,6,"first"],[69,13,146,11],[69,15,146,13,"Math"],[69,19,146,17],[69,20,146,18,"max"],[69,23,146,21],[69,24,146,22],[69,25,146,23],[69,27,146,25,"itemCount"],[69,36,146,34],[69,39,146,37],[69,40,146,38],[69,43,146,41,"maxToRenderPerBatch"],[69,62,146,60],[69,63,146,61],[70,8,147,6,"last"],[70,12,147,10],[70,14,147,12,"itemCount"],[70,23,147,21],[70,26,147,24],[71,6,148,4],[71,7,148,5],[72,4,149,2],[73,4,152,2],[73,8,152,2,"_elementsThatOverlapO"],[73,29,152,2],[73,32,152,51,"elementsThatOverlapOffsets"],[73,58,152,77],[73,59,153,4],[73,60,153,5,"overscanBegin"],[73,73,153,18],[73,75,153,20,"visibleBegin"],[73,87,153,32],[73,89,153,34,"visibleEnd"],[73,99,153,44],[73,101,153,46,"overscanEnd"],[73,112,153,57],[73,113,153,58],[73,115,154,4,"props"],[73,120,154,9],[73,122,155,4,"listMetrics"],[73,133,155,15],[73,135,156,4,"zoomScale"],[73,144,157,2],[73,145,157,3],[74,6,157,3,"_elementsThatOverlapO2"],[74,28,157,3],[74,35,157,3,"_slicedToArray"],[74,49,157,3],[74,50,157,3,"default"],[74,57,157,3],[74,59,157,3,"_elementsThatOverlapO"],[74,80,157,3],[75,6,152,7,"overscanFirst"],[75,19,152,20],[75,22,152,20,"_elementsThatOverlapO2"],[75,44,152,20],[76,6,152,22,"first"],[76,11,152,27],[76,14,152,27,"_elementsThatOverlapO2"],[76,36,152,27],[77,6,152,29,"last"],[77,10,152,33],[77,13,152,33,"_elementsThatOverlapO2"],[77,35,152,33],[78,6,152,35,"overscanLast"],[78,18,152,47],[78,21,152,47,"_elementsThatOverlapO2"],[78,43,152,47],[79,4,158,2,"overscanFirst"],[79,17,158,15],[79,20,158,18,"overscanFirst"],[79,33,158,31],[79,37,158,35],[79,41,158,39],[79,44,158,42],[79,45,158,43],[79,48,158,46,"overscanFirst"],[79,61,158,59],[80,4,159,2,"first"],[80,9,159,7],[80,12,159,10,"first"],[80,17,159,15],[80,21,159,19],[80,25,159,23],[80,28,159,26,"Math"],[80,32,159,30],[80,33,159,31,"max"],[80,36,159,34],[80,37,159,35],[80,38,159,36],[80,40,159,38,"overscanFirst"],[80,53,159,51],[80,54,159,52],[80,57,159,55,"first"],[80,62,159,60],[81,4,160,2,"overscanLast"],[81,16,160,14],[81,19,160,17,"overscanLast"],[81,31,160,29],[81,35,160,33],[81,39,160,37],[81,42,160,40,"itemCount"],[81,51,160,49],[81,54,160,52],[81,55,160,53],[81,58,160,56,"overscanLast"],[81,70,160,68],[82,4,161,2,"last"],[82,8,161,6],[82,11,162,4,"last"],[82,15,162,8],[82,19,162,12],[82,23,162,16],[82,26,163,8,"Math"],[82,30,163,12],[82,31,163,13,"min"],[82,34,163,16],[82,35,163,17,"overscanLast"],[82,47,163,29],[82,49,163,31,"first"],[82,54,163,36],[82,57,163,39,"maxToRenderPerBatch"],[82,76,163,58],[82,79,163,61],[82,80,163,62],[82,81,163,63],[82,84,164,8,"last"],[82,88,164,12],[83,4,165,2],[83,8,165,8,"visible"],[83,15,165,15],[83,18,165,18],[84,6,165,19,"first"],[84,11,165,24],[85,6,165,26,"last"],[86,4,165,30],[86,5,165,31],[87,4,171,2],[87,8,171,6,"newCellCount"],[87,20,171,18],[87,23,171,21,"newRangeCount"],[87,36,171,34],[87,37,171,35,"prev"],[87,41,171,39],[87,43,171,41,"visible"],[87,50,171,48],[87,51,171,49],[88,4,173,2],[88,11,173,9],[88,15,173,13],[88,17,173,15],[89,6,174,4],[89,10,174,8,"first"],[89,15,174,13],[89,19,174,17,"overscanFirst"],[89,32,174,30],[89,36,174,34,"last"],[89,40,174,38],[89,44,174,42,"overscanLast"],[89,56,174,54],[89,58,174,56],[90,8,176,6],[91,6,177,4],[92,6,178,4],[92,10,178,10,"maxNewCells"],[92,21,178,21],[92,24,178,24,"newCellCount"],[92,36,178,36],[92,40,178,40,"maxToRenderPerBatch"],[92,59,178,59],[93,6,179,4],[93,10,179,10,"firstWillAddMore"],[93,26,179,26],[93,29,179,29,"first"],[93,34,179,34],[93,38,179,38,"prev"],[93,42,179,42],[93,43,179,43,"first"],[93,48,179,48],[93,52,179,52,"first"],[93,57,179,57],[93,60,179,60,"prev"],[93,64,179,64],[93,65,179,65,"last"],[93,69,179,69],[94,6,180,4],[94,10,180,10,"firstShouldIncrement"],[94,30,180,30],[94,33,181,6,"first"],[94,38,181,11],[94,41,181,14,"overscanFirst"],[94,54,181,27],[94,59,181,32],[94,60,181,33,"maxNewCells"],[94,71,181,44],[94,75,181,48],[94,76,181,49,"firstWillAddMore"],[94,92,181,65],[94,93,181,66],[95,6,182,4],[95,10,182,10,"lastWillAddMore"],[95,25,182,25],[95,28,182,28,"last"],[95,32,182,32],[95,36,182,36,"prev"],[95,40,182,40],[95,41,182,41,"last"],[95,45,182,45],[95,49,182,49,"last"],[95,53,182,53],[95,56,182,56,"prev"],[95,60,182,60],[95,61,182,61,"first"],[95,66,182,66],[96,6,183,4],[96,10,183,10,"lastShouldIncrement"],[96,29,183,29],[96,32,184,6,"last"],[96,36,184,10],[96,39,184,13,"overscanLast"],[96,51,184,25],[96,56,184,30],[96,57,184,31,"maxNewCells"],[96,68,184,42],[96,72,184,46],[96,73,184,47,"lastWillAddMore"],[96,88,184,62],[96,89,184,63],[97,6,185,4],[97,10,185,8,"maxNewCells"],[97,21,185,19],[97,25,185,23],[97,26,185,24,"firstShouldIncrement"],[97,46,185,44],[97,50,185,48],[97,51,185,49,"lastShouldIncrement"],[97,70,185,68],[97,72,185,70],[98,8,190,6],[99,6,191,4],[100,6,192,4],[100,10,193,6,"firstShouldIncrement"],[100,30,193,26],[100,34,194,6],[100,36,194,8,"fillPreference"],[100,50,194,22],[100,55,194,27],[100,62,194,34],[100,66,194,38,"lastShouldIncrement"],[100,85,194,57],[100,89,194,61,"lastWillAddMore"],[100,104,194,76],[100,105,194,77],[100,107,195,6],[101,8,196,6],[101,12,196,10,"firstWillAddMore"],[101,28,196,26],[101,30,196,28],[102,10,197,8,"newCellCount"],[102,22,197,20],[102,24,197,22],[103,8,198,6],[104,8,199,6,"first"],[104,13,199,11],[104,15,199,13],[105,6,200,4],[106,6,201,4],[106,10,202,6,"lastShouldIncrement"],[106,29,202,25],[106,33,203,6],[106,35,203,8,"fillPreference"],[106,49,203,22],[106,54,203,27],[106,62,203,35],[106,66,203,39,"firstShouldIncrement"],[106,86,203,59],[106,90,203,63,"firstWillAddMore"],[106,106,203,79],[106,107,203,80],[106,109,204,6],[107,8,205,6],[107,12,205,10,"lastWillAddMore"],[107,27,205,25],[107,29,205,27],[108,10,206,8,"newCellCount"],[108,22,206,20],[108,24,206,22],[109,8,207,6],[110,8,208,6,"last"],[110,12,208,10],[110,14,208,12],[111,6,209,4],[112,4,210,2],[113,4,211,2],[113,8,212,4],[113,10,213,6,"last"],[113,14,213,10],[113,18,213,14,"first"],[113,23,213,19],[113,27,214,6,"first"],[113,32,214,11],[113,36,214,15],[113,37,214,16],[113,41,215,6,"last"],[113,45,215,10],[113,48,215,13,"itemCount"],[113,57,215,22],[113,61,216,6,"first"],[113,66,216,11],[113,70,216,15,"overscanFirst"],[113,83,216,28],[113,87,217,6,"last"],[113,91,217,10],[113,95,217,14,"overscanLast"],[113,107,217,26],[113,111,218,6,"first"],[113,116,218,11],[113,120,218,15,"visible"],[113,127,218,22],[113,128,218,23,"first"],[113,133,218,28],[113,137,219,6,"last"],[113,141,219,10],[113,145,219,14,"visible"],[113,152,219,21],[113,153,219,22,"last"],[113,157,219,26],[113,158,220,5],[113,160,221,4],[114,6,222,4],[114,12,222,10],[114,16,222,14,"Error"],[114,21,222,19],[114,22,223,6],[114,47,223,31],[114,50,224,8,"JSON"],[114,54,224,12],[114,55,224,13,"stringify"],[114,64,224,22],[114,65,224,23],[115,8,225,10,"first"],[115,13,225,15],[116,8,226,10,"last"],[116,12,226,14],[117,8,227,10,"itemCount"],[117,17,227,19],[118,8,228,10,"overscanFirst"],[118,21,228,23],[119,8,229,10,"overscanLast"],[119,20,229,22],[120,8,230,10,"visible"],[121,6,231,8],[121,7,231,9],[121,8,232,4],[121,9,232,5],[122,4,233,2],[123,4,234,2],[123,11,234,9],[124,6,234,10,"first"],[124,11,234,15],[125,6,234,17,"last"],[126,4,234,21],[126,5,234,22],[127,2,235,0],[128,2,237,7],[128,11,237,16,"keyExtractor"],[128,23,237,28,"keyExtractor"],[128,24,237,29,"item"],[128,28,237,38],[128,30,237,40,"index"],[128,35,237,53],[128,37,237,63],[129,4,238,2],[129,8,238,6],[129,15,238,13,"item"],[129,19,238,17],[129,24,238,22],[129,32,238,30],[129,36,238,34,"item"],[129,40,238,38],[129,42,238,40,"key"],[129,45,238,43],[129,49,238,47],[129,53,238,51],[129,55,238,53],[130,6,239,4],[130,13,239,11,"item"],[130,17,239,15],[130,18,239,16,"key"],[130,21,239,19],[131,4,240,2],[132,4,241,2],[132,8,241,6],[132,15,241,13,"item"],[132,19,241,17],[132,24,241,22],[132,32,241,30],[132,36,241,34,"item"],[132,40,241,38],[132,42,241,40,"id"],[132,44,241,42],[132,48,241,46],[132,52,241,50],[132,54,241,52],[133,6,242,4],[133,13,242,11,"item"],[133,17,242,15],[133,18,242,16,"id"],[133,20,242,18],[134,4,243,2],[135,4,244,2],[135,11,244,9,"String"],[135,17,244,15],[135,18,244,16,"index"],[135,23,244,21],[135,24,244,22],[136,2,245,0],[137,0,245,1],[137,3]],"functionMap":{"names":["<global>","elementsThatOverlapOffsets","newRangeCount","computeWindowedRenderLimits","keyExtractor"],"mappings":"AAA;OCqB;CDoC;OEQ;CFqB;OGQ;CH4I;OIE"},"hasCjsExports":false},"type":"js/module"}]}