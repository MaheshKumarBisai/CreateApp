{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var RE_FRAME = /^ {4}at (.+?)(?: \\((native)\\)?| \\((address at )?(.*?):(\\d+):(\\d+)\\))$/;\n  var RE_SKIPPED = /^ {4}... skipping (\\d+) frames$/;\n  function isInternalBytecodeSourceUrl(sourceUrl) {\n    return sourceUrl === 'InternalBytecode.js';\n  }\n  function parseLine(line) {\n    var asFrame = line.match(RE_FRAME);\n    if (asFrame) {\n      return {\n        type: 'FRAME',\n        functionName: asFrame[1],\n        location: asFrame[2] === 'native' ? {\n          type: 'NATIVE'\n        } : asFrame[3] === 'address at ' ? isInternalBytecodeSourceUrl(asFrame[4]) ? {\n          type: 'INTERNAL_BYTECODE',\n          sourceUrl: asFrame[4],\n          line1Based: Number.parseInt(asFrame[5], 10),\n          virtualOffset0Based: Number.parseInt(asFrame[6], 10)\n        } : {\n          type: 'BYTECODE',\n          sourceUrl: asFrame[4],\n          line1Based: Number.parseInt(asFrame[5], 10),\n          virtualOffset0Based: Number.parseInt(asFrame[6], 10)\n        } : {\n          type: 'SOURCE',\n          sourceUrl: asFrame[4],\n          line1Based: Number.parseInt(asFrame[5], 10),\n          column1Based: Number.parseInt(asFrame[6], 10)\n        }\n      };\n    }\n    var asSkipped = line.match(RE_SKIPPED);\n    if (asSkipped) {\n      return {\n        type: 'SKIPPED',\n        count: Number.parseInt(asSkipped[1], 10)\n      };\n    }\n  }\n  module.exports = function parseHermesStack(stack) {\n    var lines = stack.split(/\\n/);\n    var entries = [];\n    var lastMessageLine = -1;\n    for (var i = 0; i < lines.length; ++i) {\n      var line = lines[i];\n      if (!line) {\n        continue;\n      }\n      var entry = parseLine(line);\n      if (entry) {\n        entries.push(entry);\n        continue;\n      }\n      lastMessageLine = i;\n      entries = [];\n    }\n    var message = lines.slice(0, lastMessageLine + 1).join('\\n');\n    return {\n      message,\n      entries\n    };\n  };\n});","lineCount":66,"map":[[2,2,11,0],[2,14,11,12],[4,2,69,0],[4,6,69,6,"RE_FRAME"],[4,14,69,14],[4,17,70,2],[4,88,70,73],[5,2,74,0],[5,6,74,6,"RE_SKIPPED"],[5,16,74,16],[5,19,74,19],[5,52,74,52],[6,2,76,0],[6,11,76,9,"isInternalBytecodeSourceUrl"],[6,38,76,36,"isInternalBytecodeSourceUrl"],[6,39,76,37,"sourceUrl"],[6,48,76,54],[6,50,76,65],[7,4,78,2],[7,11,78,9,"sourceUrl"],[7,20,78,18],[7,25,78,23],[7,46,78,44],[8,2,79,0],[9,2,81,0],[9,11,81,9,"parseLine"],[9,20,81,18,"parseLine"],[9,21,81,19,"line"],[9,25,81,31],[9,27,81,52],[10,4,82,2],[10,8,82,8,"asFrame"],[10,15,82,15],[10,18,82,18,"line"],[10,22,82,22],[10,23,82,23,"match"],[10,28,82,28],[10,29,82,29,"RE_FRAME"],[10,37,82,37],[10,38,82,38],[11,4,83,2],[11,8,83,6,"asFrame"],[11,15,83,13],[11,17,83,15],[12,6,84,4],[12,13,84,11],[13,8,85,6,"type"],[13,12,85,10],[13,14,85,12],[13,21,85,19],[14,8,86,6,"functionName"],[14,20,86,18],[14,22,86,20,"asFrame"],[14,29,86,27],[14,30,86,28],[14,31,86,29],[14,32,86,30],[15,8,87,6,"location"],[15,16,87,14],[15,18,88,8,"asFrame"],[15,25,88,15],[15,26,88,16],[15,27,88,17],[15,28,88,18],[15,33,88,23],[15,41,88,31],[15,44,89,12],[16,10,89,13,"type"],[16,14,89,17],[16,16,89,19],[17,8,89,27],[17,9,89,28],[17,12,90,12,"asFrame"],[17,19,90,19],[17,20,90,20],[17,21,90,21],[17,22,90,22],[17,27,90,27],[17,40,90,40],[17,43,91,12,"isInternalBytecodeSourceUrl"],[17,70,91,39],[17,71,91,40,"asFrame"],[17,78,91,47],[17,79,91,48],[17,80,91,49],[17,81,91,50],[17,82,91,51],[17,85,92,14],[18,10,93,16,"type"],[18,14,93,20],[18,16,93,22],[18,35,93,41],[19,10,94,16,"sourceUrl"],[19,19,94,25],[19,21,94,27,"asFrame"],[19,28,94,34],[19,29,94,35],[19,30,94,36],[19,31,94,37],[20,10,95,16,"line1Based"],[20,20,95,26],[20,22,95,28,"Number"],[20,28,95,34],[20,29,95,35,"parseInt"],[20,37,95,43],[20,38,95,44,"asFrame"],[20,45,95,51],[20,46,95,52],[20,47,95,53],[20,48,95,54],[20,50,95,56],[20,52,95,58],[20,53,95,59],[21,10,96,16,"virtualOffset0Based"],[21,29,96,35],[21,31,96,37,"Number"],[21,37,96,43],[21,38,96,44,"parseInt"],[21,46,96,52],[21,47,96,53,"asFrame"],[21,54,96,60],[21,55,96,61],[21,56,96,62],[21,57,96,63],[21,59,96,65],[21,61,96,67],[22,8,97,14],[22,9,97,15],[22,12,98,14],[23,10,99,16,"type"],[23,14,99,20],[23,16,99,22],[23,26,99,32],[24,10,100,16,"sourceUrl"],[24,19,100,25],[24,21,100,27,"asFrame"],[24,28,100,34],[24,29,100,35],[24,30,100,36],[24,31,100,37],[25,10,101,16,"line1Based"],[25,20,101,26],[25,22,101,28,"Number"],[25,28,101,34],[25,29,101,35,"parseInt"],[25,37,101,43],[25,38,101,44,"asFrame"],[25,45,101,51],[25,46,101,52],[25,47,101,53],[25,48,101,54],[25,50,101,56],[25,52,101,58],[25,53,101,59],[26,10,102,16,"virtualOffset0Based"],[26,29,102,35],[26,31,102,37,"Number"],[26,37,102,43],[26,38,102,44,"parseInt"],[26,46,102,52],[26,47,102,53,"asFrame"],[26,54,102,60],[26,55,102,61],[26,56,102,62],[26,57,102,63],[26,59,102,65],[26,61,102,67],[27,8,103,14],[27,9,103,15],[27,12,104,12],[28,10,105,14,"type"],[28,14,105,18],[28,16,105,20],[28,24,105,28],[29,10,106,14,"sourceUrl"],[29,19,106,23],[29,21,106,25,"asFrame"],[29,28,106,32],[29,29,106,33],[29,30,106,34],[29,31,106,35],[30,10,107,14,"line1Based"],[30,20,107,24],[30,22,107,26,"Number"],[30,28,107,32],[30,29,107,33,"parseInt"],[30,37,107,41],[30,38,107,42,"asFrame"],[30,45,107,49],[30,46,107,50],[30,47,107,51],[30,48,107,52],[30,50,107,54],[30,52,107,56],[30,53,107,57],[31,10,108,14,"column1Based"],[31,22,108,26],[31,24,108,28,"Number"],[31,30,108,34],[31,31,108,35,"parseInt"],[31,39,108,43],[31,40,108,44,"asFrame"],[31,47,108,51],[31,48,108,52],[31,49,108,53],[31,50,108,54],[31,52,108,56],[31,54,108,58],[32,8,109,12],[33,6,110,4],[33,7,110,5],[34,4,111,2],[35,4,112,2],[35,8,112,8,"asSkipped"],[35,17,112,17],[35,20,112,20,"line"],[35,24,112,24],[35,25,112,25,"match"],[35,30,112,30],[35,31,112,31,"RE_SKIPPED"],[35,41,112,41],[35,42,112,42],[36,4,113,2],[36,8,113,6,"asSkipped"],[36,17,113,15],[36,19,113,17],[37,6,114,4],[37,13,114,11],[38,8,115,6,"type"],[38,12,115,10],[38,14,115,12],[38,23,115,21],[39,8,116,6,"count"],[39,13,116,11],[39,15,116,13,"Number"],[39,21,116,19],[39,22,116,20,"parseInt"],[39,30,116,28],[39,31,116,29,"asSkipped"],[39,40,116,38],[39,41,116,39],[39,42,116,40],[39,43,116,41],[39,45,116,43],[39,47,116,45],[40,6,117,4],[40,7,117,5],[41,4,118,2],[42,2,119,0],[43,2,121,0,"module"],[43,8,121,6],[43,9,121,7,"exports"],[43,16,121,14],[43,19,121,17],[43,28,121,26,"parseHermesStack"],[43,44,121,42,"parseHermesStack"],[43,45,121,43,"stack"],[43,50,121,56],[43,52,121,77],[44,4,122,2],[44,8,122,8,"lines"],[44,13,122,13],[44,16,122,16,"stack"],[44,21,122,21],[44,22,122,22,"split"],[44,27,122,27],[44,28,122,28],[44,32,122,32],[44,33,122,33],[45,4,123,2],[45,8,123,6,"entries"],[45,15,123,69],[45,18,123,72],[45,20,123,74],[46,4,124,2],[46,8,124,6,"lastMessageLine"],[46,23,124,21],[46,26,124,24],[46,27,124,25],[46,28,124,26],[47,4,125,2],[47,9,125,7],[47,13,125,11,"i"],[47,14,125,12],[47,17,125,15],[47,18,125,16],[47,20,125,18,"i"],[47,21,125,19],[47,24,125,22,"lines"],[47,29,125,27],[47,30,125,28,"length"],[47,36,125,34],[47,38,125,36],[47,40,125,38,"i"],[47,41,125,39],[47,43,125,41],[48,6,126,4],[48,10,126,10,"line"],[48,14,126,14],[48,17,126,17,"lines"],[48,22,126,22],[48,23,126,23,"i"],[48,24,126,24],[48,25,126,25],[49,6,127,4],[49,10,127,8],[49,11,127,9,"line"],[49,15,127,13],[49,17,127,15],[50,8,128,6],[51,6,129,4],[52,6,130,4],[52,10,130,10,"entry"],[52,15,130,15],[52,18,130,18,"parseLine"],[52,27,130,27],[52,28,130,28,"line"],[52,32,130,32],[52,33,130,33],[53,6,131,4],[53,10,131,8,"entry"],[53,15,131,13],[53,17,131,15],[54,8,132,6,"entries"],[54,15,132,13],[54,16,132,14,"push"],[54,20,132,18],[54,21,132,19,"entry"],[54,26,132,24],[54,27,132,25],[55,8,133,6],[56,6,134,4],[57,6,136,4,"lastMessageLine"],[57,21,136,19],[57,24,136,22,"i"],[57,25,136,23],[58,6,137,4,"entries"],[58,13,137,11],[58,16,137,14],[58,18,137,16],[59,4,138,2],[60,4,139,2],[60,8,139,8,"message"],[60,15,139,15],[60,18,139,18,"lines"],[60,23,139,23],[60,24,139,24,"slice"],[60,29,139,29],[60,30,139,30],[60,31,139,31],[60,33,139,33,"lastMessageLine"],[60,48,139,48],[60,51,139,51],[60,52,139,52],[60,53,139,53],[60,54,139,54,"join"],[60,58,139,58],[60,59,139,59],[60,63,139,63],[60,64,139,64],[61,4,140,2],[61,11,140,9],[62,6,140,10,"message"],[62,13,140,17],[63,6,140,19,"entries"],[64,4,140,26],[64,5,140,27],[65,2,141,0],[65,3,141,1],[66,0,141,2],[66,3]],"functionMap":{"names":["<global>","isInternalBytecodeSourceUrl","parseLine","parseHermesStack"],"mappings":"AAA;AC2E;CDG;AEE;CFsC;iBGE;CHoB"},"hasCjsExports":true},"type":"js/module"}]}