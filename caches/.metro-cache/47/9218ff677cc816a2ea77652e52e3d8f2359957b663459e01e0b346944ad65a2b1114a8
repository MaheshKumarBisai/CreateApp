{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"escape-string-regexp","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":54,"index":54}}],"key":"Opxn8Ttfh7QNGeF0y+BQ6rRbDGo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return extractPathFromURL;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _escapeStringRegexp = require(_dependencyMap[1], \"escape-string-regexp\");\n  var escapeStringRegexp = _interopDefault(_escapeStringRegexp);\n  function extractPathFromURL(prefixes, url) {\n    for (var prefix of prefixes) {\n      var protocol = prefix.match(/^[^:]+:/)?.[0] ?? '';\n      var host = prefix.replace(new RegExp(`^${(0, escapeStringRegexp.default)(protocol)}`), '').replace(/\\/+/g, '/') // Replace multiple slash (//) with single ones\n      .replace(/^\\//, ''); // Remove extra leading slash\n\n      var prefixRegex = new RegExp(`^${(0, escapeStringRegexp.default)(protocol)}(/)*${host.split('.').map(it => it === '*' ? '[^/]+' : (0, escapeStringRegexp.default)(it)).join('\\\\.')}`);\n      var _url$split = url.split('?'),\n        _url$split2 = (0, _slicedToArray.default)(_url$split, 2),\n        originAndPath = _url$split2[0],\n        searchParams = _url$split2[1];\n      var normalizedURL = originAndPath.replace(/\\/+/g, '/').concat(searchParams ? `?${searchParams}` : '');\n      if (prefixRegex.test(normalizedURL)) {\n        return normalizedURL.replace(prefixRegex, '');\n      }\n    }\n    return undefined;\n  }\n});","lineCount":40,"map":[[12,2,3,15,"Object"],[12,8,3,15],[12,9,3,15,"defineProperty"],[12,23,3,15],[12,24,3,15,"exports"],[12,31,3,15],[13,4,3,15,"enumerable"],[13,14,3,15],[14,4,3,15,"get"],[14,7,3,15],[14,18,3,15,"get"],[14,19,3,15],[15,6,3,15],[15,13,3,15,"extractPathFromURL"],[15,31,3,15],[16,4,3,15],[17,2,3,15],[18,2,29,1],[18,6,29,1,"_babelRuntimeHelpersSlicedToArray"],[18,39,29,1],[18,42,29,1,"require"],[18,49,29,1],[18,50,29,1,"_dependencyMap"],[18,64,29,1],[19,2,29,1],[19,6,29,1,"_slicedToArray"],[19,20,29,1],[19,23,29,1,"_interopDefault"],[19,38,29,1],[19,39,29,1,"_babelRuntimeHelpersSlicedToArray"],[19,72,29,1],[20,2,1,0],[20,6,1,0,"_escapeStringRegexp"],[20,25,1,0],[20,28,1,0,"require"],[20,35,1,0],[20,36,1,0,"_dependencyMap"],[20,50,1,0],[21,2,1,0],[21,6,1,0,"escapeStringRegexp"],[21,24,1,0],[21,27,1,0,"_interopDefault"],[21,42,1,0],[21,43,1,0,"_escapeStringRegexp"],[21,62,1,0],[22,2,3,15],[22,11,3,24,"extractPathFromURL"],[22,29,3,42,"extractPathFromURL"],[22,30,3,43,"prefixes"],[22,38,3,61],[22,40,3,63,"url"],[22,43,3,74],[22,45,3,76],[23,4,4,2],[23,9,4,7],[23,13,4,13,"prefix"],[23,19,4,19],[23,23,4,23,"prefixes"],[23,31,4,31],[23,33,4,33],[24,6,5,4],[24,10,5,10,"protocol"],[24,18,5,18],[24,21,5,21,"prefix"],[24,27,5,27],[24,28,5,28,"match"],[24,33,5,33],[24,34,5,34],[24,43,5,43],[24,44,5,44],[24,47,5,47],[24,48,5,48],[24,49,5,49],[24,53,5,53],[24,55,5,55],[25,6,6,4],[25,10,6,10,"host"],[25,14,6,14],[25,17,6,17,"prefix"],[25,23,6,23],[25,24,7,7,"replace"],[25,31,7,14],[25,32,7,15],[25,36,7,19,"RegExp"],[25,42,7,25],[25,43,7,26],[25,47,7,30],[25,51,7,30,"escapeStringRegexp"],[25,69,7,48],[25,70,7,48,"default"],[25,77,7,48],[25,79,7,49,"protocol"],[25,87,7,57],[25,88,7,58],[25,90,7,60],[25,91,7,61],[25,93,7,63],[25,95,7,65],[25,96,7,66],[25,97,8,7,"replace"],[25,104,8,14],[25,105,8,15],[25,111,8,21],[25,113,8,23],[25,116,8,26],[25,117,8,27],[25,118,8,28],[26,6,8,28],[26,7,9,7,"replace"],[26,14,9,14],[26,15,9,15],[26,20,9,20],[26,22,9,22],[26,24,9,24],[26,25,9,25],[26,26,9,26],[26,27,9,27],[28,6,11,4],[28,10,11,10,"prefixRegex"],[28,21,11,21],[28,24,11,24],[28,28,11,28,"RegExp"],[28,34,11,34],[28,35,12,6],[28,39,12,10],[28,43,12,10,"escapeStringRegexp"],[28,61,12,28],[28,62,12,28,"default"],[28,69,12,28],[28,71,12,29,"protocol"],[28,79,12,37],[28,80,12,38],[28,87,12,45,"host"],[28,91,12,49],[28,92,13,9,"split"],[28,97,13,14],[28,98,13,15],[28,101,13,18],[28,102,13,19],[28,103,14,9,"map"],[28,106,14,12],[28,107,14,14,"it"],[28,109,14,16],[28,113,14,22,"it"],[28,115,14,24],[28,120,14,29],[28,123,14,32],[28,126,14,35],[28,133,14,42],[28,136,14,45],[28,140,14,45,"escapeStringRegexp"],[28,158,14,63],[28,159,14,63,"default"],[28,166,14,63],[28,168,14,64,"it"],[28,170,14,66],[28,171,14,68],[28,172,14,69],[28,173,15,9,"join"],[28,177,15,13],[28,178,15,14],[28,183,15,19],[28,184,15,20],[28,186,16,4],[28,187,16,5],[29,6,18,4],[29,10,18,4,"_url$split"],[29,20,18,4],[29,23,18,42,"url"],[29,26,18,45],[29,27,18,46,"split"],[29,32,18,51],[29,33,18,52],[29,36,18,55],[29,37,18,56],[30,8,18,56,"_url$split2"],[30,19,18,56],[30,26,18,56,"_slicedToArray"],[30,40,18,56],[30,41,18,56,"default"],[30,48,18,56],[30,50,18,56,"_url$split"],[30,60,18,56],[31,8,18,11,"originAndPath"],[31,21,18,24],[31,24,18,24,"_url$split2"],[31,35,18,24],[32,8,18,26,"searchParams"],[32,20,18,38],[32,23,18,38,"_url$split2"],[32,34,18,38],[33,6,19,4],[33,10,19,10,"normalizedURL"],[33,23,19,23],[33,26,19,26,"originAndPath"],[33,39,19,39],[33,40,20,7,"replace"],[33,47,20,14],[33,48,20,15],[33,54,20,21],[33,56,20,23],[33,59,20,26],[33,60,20,27],[33,61,21,7,"concat"],[33,67,21,13],[33,68,21,14,"searchParams"],[33,80,21,26],[33,83,21,29],[33,87,21,33,"searchParams"],[33,99,21,45],[33,101,21,47],[33,104,21,50],[33,106,21,52],[33,107,21,53],[34,6,23,4],[34,10,23,8,"prefixRegex"],[34,21,23,19],[34,22,23,20,"test"],[34,26,23,24],[34,27,23,25,"normalizedURL"],[34,40,23,38],[34,41,23,39],[34,43,23,41],[35,8,24,6],[35,15,24,13,"normalizedURL"],[35,28,24,26],[35,29,24,27,"replace"],[35,36,24,34],[35,37,24,35,"prefixRegex"],[35,48,24,46],[35,50,24,48],[35,52,24,50],[35,53,24,51],[36,6,25,4],[37,4,26,2],[38,4,28,2],[38,11,28,9,"undefined"],[38,20,28,18],[39,2,29,0],[40,0,29,1],[40,3]],"functionMap":{"names":["<global>","extractPathFromURL","host.split.map$argument_0"],"mappings":"AAA;eCE;aCW,uDD;CDe"},"hasCjsExports":false},"type":"js/module"}]}