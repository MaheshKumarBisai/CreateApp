{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":66},"end":{"line":2,"column":31,"index":97}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./NavigationContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":99},"end":{"line":4,"column":52,"index":151}}],"key":"u9qAcSFr9bFa2cpyFF7vLtW9/VE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return useFocusEvents;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _NavigationContext = require(_dependencyMap[1], \"./NavigationContext\");\n  var NavigationContext = _interopDefault(_NavigationContext);\n  /**\n   * Hook to take care of emitting `focus` and `blur` events.\n   */\n  function useFocusEvents(_ref) {\n    var state = _ref.state,\n      emitter = _ref.emitter;\n    var navigation = React.useContext(NavigationContext.default);\n    var lastFocusedKeyRef = React.useRef();\n    var currentFocusedKey = state.routes[state.index].key;\n\n    // When the parent screen changes its focus state, we also need to change child's focus\n    // Coz the child screen can't be focused if the parent screen is out of focus\n    React.useEffect(() => navigation?.addListener('focus', () => {\n      lastFocusedKeyRef.current = currentFocusedKey;\n      emitter.emit({\n        type: 'focus',\n        target: currentFocusedKey\n      });\n    }), [currentFocusedKey, emitter, navigation]);\n    React.useEffect(() => navigation?.addListener('blur', () => {\n      lastFocusedKeyRef.current = undefined;\n      emitter.emit({\n        type: 'blur',\n        target: currentFocusedKey\n      });\n    }), [currentFocusedKey, emitter, navigation]);\n    React.useEffect(() => {\n      var lastFocusedKey = lastFocusedKeyRef.current;\n      lastFocusedKeyRef.current = currentFocusedKey;\n\n      // We wouldn't have `lastFocusedKey` on initial mount\n      // Fire focus event for the current route on mount if there's no parent navigator\n      if (lastFocusedKey === undefined && !navigation) {\n        emitter.emit({\n          type: 'focus',\n          target: currentFocusedKey\n        });\n      }\n\n      // We should only emit events when the focused key changed and navigator is focused\n      // When navigator is not focused, screens inside shouldn't receive focused status either\n      if (lastFocusedKey === currentFocusedKey || !(navigation ? navigation.isFocused() : true)) {\n        return;\n      }\n      if (lastFocusedKey === undefined) {\n        // Only fire events after initial mount\n        return;\n      }\n      emitter.emit({\n        type: 'blur',\n        target: lastFocusedKey\n      });\n      emitter.emit({\n        type: 'focus',\n        target: currentFocusedKey\n      });\n    }, [currentFocusedKey, emitter, navigation]);\n  }\n});","lineCount":95,"map":[[27,2,16,15,"Object"],[27,8,16,15],[27,9,16,15,"defineProperty"],[27,23,16,15],[27,24,16,15,"exports"],[27,31,16,15],[28,4,16,15,"enumerable"],[28,14,16,15],[29,4,16,15,"get"],[29,7,16,15],[29,18,16,15,"get"],[29,19,16,15],[30,6,16,15],[30,13,16,15,"useFocusEvents"],[30,27,16,15],[31,4,16,15],[32,2,16,15],[33,2,2,0],[33,6,2,0,"_react"],[33,12,2,0],[33,15,2,0,"require"],[33,22,2,0],[33,23,2,0,"_dependencyMap"],[33,37,2,0],[34,2,2,0],[34,6,2,0,"React"],[34,11,2,0],[34,14,2,0,"_interopNamespace"],[34,31,2,0],[34,32,2,0,"_react"],[34,38,2,0],[35,2,4,0],[35,6,4,0,"_NavigationContext"],[35,24,4,0],[35,27,4,0,"require"],[35,34,4,0],[35,35,4,0,"_dependencyMap"],[35,49,4,0],[36,2,4,0],[36,6,4,0,"NavigationContext"],[36,23,4,0],[36,26,4,0,"_interopDefault"],[36,41,4,0],[36,42,4,0,"_NavigationContext"],[36,60,4,0],[37,2,13,0],[38,0,14,0],[39,0,15,0],[40,2,16,15],[40,11,16,24,"useFocusEvents"],[40,25,16,38,"useFocusEvents"],[40,26,16,38,"_ref"],[40,30,16,38],[40,32,19,19],[41,4,19,19],[41,8,17,2,"state"],[41,13,17,7],[41,16,17,7,"_ref"],[41,20,17,7],[41,21,17,2,"state"],[41,26,17,7],[42,6,18,2,"emitter"],[42,13,18,9],[42,16,18,9,"_ref"],[42,20,18,9],[42,21,18,2,"emitter"],[42,28,18,9],[43,4,20,2],[43,8,20,8,"navigation"],[43,18,20,18],[43,21,20,21,"React"],[43,26,20,26],[43,27,20,27,"useContext"],[43,37,20,37],[43,38,20,38,"NavigationContext"],[43,55,20,55],[43,56,20,55,"default"],[43,63,20,55],[43,64,20,56],[44,4,21,2],[44,8,21,8,"lastFocusedKeyRef"],[44,25,21,25],[44,28,21,28,"React"],[44,33,21,33],[44,34,21,34,"useRef"],[44,40,21,40],[44,41,21,61],[44,42,21,62],[45,4,23,2],[45,8,23,8,"currentFocusedKey"],[45,25,23,25],[45,28,23,28,"state"],[45,33,23,33],[45,34,23,34,"routes"],[45,40,23,40],[45,41,23,41,"state"],[45,46,23,46],[45,47,23,47,"index"],[45,52,23,52],[45,53,23,53],[45,54,23,54,"key"],[45,57,23,57],[47,4,25,2],[48,4,26,2],[49,4,27,2,"React"],[49,9,27,7],[49,10,27,8,"useEffect"],[49,19,27,17],[49,20,28,4],[49,26,29,6,"navigation"],[49,36,29,16],[49,38,29,18,"addListener"],[49,49,29,29],[49,50,29,30],[49,57,29,37],[49,59,29,39],[49,65,29,45],[50,6,30,8,"lastFocusedKeyRef"],[50,23,30,25],[50,24,30,26,"current"],[50,31,30,33],[50,34,30,36,"currentFocusedKey"],[50,51,30,53],[51,6,31,8,"emitter"],[51,13,31,15],[51,14,31,16,"emit"],[51,18,31,20],[51,19,31,21],[52,8,31,23,"type"],[52,12,31,27],[52,14,31,29],[52,21,31,36],[53,8,31,38,"target"],[53,14,31,44],[53,16,31,46,"currentFocusedKey"],[54,6,31,64],[54,7,31,65],[54,8,31,66],[55,4,32,6],[55,5,32,7],[55,6,32,8],[55,8,33,4],[55,9,33,5,"currentFocusedKey"],[55,26,33,22],[55,28,33,24,"emitter"],[55,35,33,31],[55,37,33,33,"navigation"],[55,47,33,43],[55,48,34,2],[55,49,34,3],[56,4,36,2,"React"],[56,9,36,7],[56,10,36,8,"useEffect"],[56,19,36,17],[56,20,37,4],[56,26,38,6,"navigation"],[56,36,38,16],[56,38,38,18,"addListener"],[56,49,38,29],[56,50,38,30],[56,56,38,36],[56,58,38,38],[56,64,38,44],[57,6,39,8,"lastFocusedKeyRef"],[57,23,39,25],[57,24,39,26,"current"],[57,31,39,33],[57,34,39,36,"undefined"],[57,43,39,45],[58,6,40,8,"emitter"],[58,13,40,15],[58,14,40,16,"emit"],[58,18,40,20],[58,19,40,21],[59,8,40,23,"type"],[59,12,40,27],[59,14,40,29],[59,20,40,35],[60,8,40,37,"target"],[60,14,40,43],[60,16,40,45,"currentFocusedKey"],[61,6,40,63],[61,7,40,64],[61,8,40,65],[62,4,41,6],[62,5,41,7],[62,6,41,8],[62,8,42,4],[62,9,42,5,"currentFocusedKey"],[62,26,42,22],[62,28,42,24,"emitter"],[62,35,42,31],[62,37,42,33,"navigation"],[62,47,42,43],[62,48,43,2],[62,49,43,3],[63,4,45,2,"React"],[63,9,45,7],[63,10,45,8,"useEffect"],[63,19,45,17],[63,20,45,18],[63,26,45,24],[64,6,46,4],[64,10,46,10,"lastFocusedKey"],[64,24,46,24],[64,27,46,27,"lastFocusedKeyRef"],[64,44,46,44],[64,45,46,45,"current"],[64,52,46,52],[65,6,48,4,"lastFocusedKeyRef"],[65,23,48,21],[65,24,48,22,"current"],[65,31,48,29],[65,34,48,32,"currentFocusedKey"],[65,51,48,49],[67,6,50,4],[68,6,51,4],[69,6,52,4],[69,10,52,8,"lastFocusedKey"],[69,24,52,22],[69,29,52,27,"undefined"],[69,38,52,36],[69,42,52,40],[69,43,52,41,"navigation"],[69,53,52,51],[69,55,52,53],[70,8,53,6,"emitter"],[70,15,53,13],[70,16,53,14,"emit"],[70,20,53,18],[70,21,53,19],[71,10,53,21,"type"],[71,14,53,25],[71,16,53,27],[71,23,53,34],[72,10,53,36,"target"],[72,16,53,42],[72,18,53,44,"currentFocusedKey"],[73,8,53,62],[73,9,53,63],[73,10,53,64],[74,6,54,4],[76,6,56,4],[77,6,57,4],[78,6,58,4],[78,10,59,6,"lastFocusedKey"],[78,24,59,20],[78,29,59,25,"currentFocusedKey"],[78,46,59,42],[78,50,60,6],[78,52,60,8,"navigation"],[78,62,60,18],[78,65,60,21,"navigation"],[78,75,60,31],[78,76,60,32,"isFocused"],[78,85,60,41],[78,86,60,42],[78,87,60,43],[78,90,60,46],[78,94,60,50],[78,95,60,51],[78,97,61,6],[79,8,62,6],[80,6,63,4],[81,6,65,4],[81,10,65,8,"lastFocusedKey"],[81,24,65,22],[81,29,65,27,"undefined"],[81,38,65,36],[81,40,65,38],[82,8,66,6],[83,8,67,6],[84,6,68,4],[85,6,70,4,"emitter"],[85,13,70,11],[85,14,70,12,"emit"],[85,18,70,16],[85,19,70,17],[86,8,70,19,"type"],[86,12,70,23],[86,14,70,25],[86,20,70,31],[87,8,70,33,"target"],[87,14,70,39],[87,16,70,41,"lastFocusedKey"],[88,6,70,56],[88,7,70,57],[88,8,70,58],[89,6,71,4,"emitter"],[89,13,71,11],[89,14,71,12,"emit"],[89,18,71,16],[89,19,71,17],[90,8,71,19,"type"],[90,12,71,23],[90,14,71,25],[90,21,71,32],[91,8,71,34,"target"],[91,14,71,40],[91,16,71,42,"currentFocusedKey"],[92,6,71,60],[92,7,71,61],[92,8,71,62],[93,4,72,2],[93,5,72,3],[93,7,72,5],[93,8,72,6,"currentFocusedKey"],[93,25,72,23],[93,27,72,25,"emitter"],[93,34,72,32],[93,36,72,34,"navigation"],[93,46,72,44],[93,47,72,45],[93,48,72,46],[94,2,73,0],[95,0,73,1],[95,3]],"functionMap":{"names":["<global>","useFocusEvents","React.useEffect$argument_0","navigation.addListener$argument_1"],"mappings":"AAA;eCe;ICY;uCCC;ODG,CD;ICK;sCCC;ODG,CD;kBCI;GD2B;CDC"},"hasCjsExports":false},"type":"js/module"}]}