{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":14},"end":{"line":2,"column":42,"index":56}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../animation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":57},"end":{"line":3,"column":49,"index":106}}],"key":"a6n75g9KQy+KnMEjz15YzADQ7Hw=","exportNames":["*"],"imports":1}},{"name":"../core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":175},"end":{"line":5,"column":63,"index":238}}],"key":"OSA8xsmyvVLjxZOJ/QFvle2ua2I=","exportNames":["*"],"imports":1}},{"name":"../PlatformChecker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":292},"end":{"line":7,"column":52,"index":344}}],"key":"qXble9ybAlViAQKWCIOx+hfaZjE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useDerivedValue = useDerivedValue;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _animation = require(_dependencyMap[1], \"../animation\");\n  var _core = require(_dependencyMap[2], \"../core\");\n  var _PlatformChecker = require(_dependencyMap[3], \"../PlatformChecker\");\n  /**\n   * Lets you create new shared values based on existing ones while keeping them reactive.\n   *\n   * @param updater - A function called whenever at least one of the shared values or state used in the function body changes.\n   * @param dependencies - An optional array of dependencies. Only relevant when using Reanimated without the Babel plugin on the Web.\n   * @returns A new readonly shared value based on a value returned from the updater function\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useDerivedValue\n   */\n  // @ts-expect-error This overload is required by our API.\n  var _worklet_4899742148771_init_data = {\n    code: \"function anonymous(){const{sharedValue,updater}=this.__closure;sharedValue.value=updater();}\",\n    location: \"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-reanimated/src/reanimated2/hook/useDerivedValue.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"sharedValue\\\",\\\"updater\\\",\\\"__closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-reanimated/src/reanimated2/hook/useDerivedValue.ts\\\"],\\\"mappings\\\":\\\"AAmDgB,SAAAA,SAAMA,CAAA,QAAAC,WAAA,CAAAC,OAAA,OAAAC,SAAA,CAEhBF,WAAW,CAACG,KAAK,CAAGF,OAAO,CAAC,CAAC,CAC/B\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.10.1\"\n  };\n  function useDerivedValue(updater, dependencies) {\n    var initRef = (0, _react.useRef)(null);\n    var inputs = Object.values(updater.__closure ?? {});\n    if ((0, _PlatformChecker.shouldBeUseWeb)()) {\n      if (!inputs.length && dependencies?.length) {\n        // let web work without a Babel/SWC plugin\n        inputs = dependencies;\n      }\n    }\n\n    // build dependencies\n    if (dependencies === undefined) {\n      dependencies = [...inputs, updater.__workletHash];\n    } else {\n      dependencies.push(updater.__workletHash);\n    }\n    if (initRef.current === null) {\n      initRef.current = (0, _core.makeMutable)((0, _animation.initialUpdaterRun)(updater));\n    }\n    var sharedValue = initRef.current;\n    (0, _react.useEffect)(() => {\n      var fun = function () {\n        var _e = [new global.Error(), -3, -27];\n        var anonymous = function () {\n          sharedValue.value = updater();\n        };\n        anonymous.__closure = {\n          sharedValue,\n          updater\n        };\n        anonymous.__workletHash = 4899742148771;\n        anonymous.__initData = _worklet_4899742148771_init_data;\n        anonymous.__stackDetails = _e;\n        return anonymous;\n      }();\n      var mapperId = (0, _core.startMapper)(fun, inputs, [sharedValue]);\n      return () => {\n        (0, _core.stopMapper)(mapperId);\n      };\n    }, dependencies);\n    (0, _react.useEffect)(() => {\n      return () => {\n        initRef.current = null;\n      };\n    }, []);\n    return sharedValue;\n  }\n});","lineCount":74,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,25,0,"exports"],[7,9,25,0],[7,10,25,0,"useDerivedValue"],[7,25,25,0],[7,28,25,0,"useDerivedValue"],[7,43,25,0],[8,2,2,0],[8,6,2,0,"_react"],[8,12,2,0],[8,15,2,0,"require"],[8,22,2,0],[8,23,2,0,"_dependencyMap"],[8,37,2,0],[9,2,3,0],[9,6,3,0,"_animation"],[9,16,3,0],[9,19,3,0,"require"],[9,26,3,0],[9,27,3,0,"_dependencyMap"],[9,41,3,0],[10,2,5,0],[10,6,5,0,"_core"],[10,11,5,0],[10,14,5,0,"require"],[10,21,5,0],[10,22,5,0,"_dependencyMap"],[10,36,5,0],[11,2,7,0],[11,6,7,0,"_PlatformChecker"],[11,22,7,0],[11,25,7,0,"require"],[11,32,7,0],[11,33,7,0,"_dependencyMap"],[11,47,7,0],[12,2,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,2,19,0],[21,2,19,0],[21,6,19,0,"_worklet_4899742148771_init_data"],[21,38,19,0],[22,4,19,0,"code"],[22,8,19,0],[23,4,19,0,"location"],[23,12,19,0],[24,4,19,0,"sourceMap"],[24,13,19,0],[25,4,19,0,"version"],[25,11,19,0],[26,2,19,0],[27,2,25,7],[27,11,25,16,"useDerivedValue"],[27,26,25,31,"useDerivedValue"],[27,27,26,2,"updater"],[27,34,26,37],[27,36,27,2,"dependencies"],[27,48,27,31],[27,50,28,23],[28,4,29,2],[28,8,29,8,"initRef"],[28,15,29,15],[28,18,29,18],[28,22,29,18,"useRef"],[28,28,29,24],[28,29,29,24,"useRef"],[28,35,29,24],[28,37,29,52],[28,41,29,56],[28,42,29,57],[29,4,30,2],[29,8,30,6,"inputs"],[29,14,30,12],[29,17,30,15,"Object"],[29,23,30,21],[29,24,30,22,"values"],[29,30,30,28],[29,31,30,29,"updater"],[29,38,30,36],[29,39,30,37,"__closure"],[29,48,30,46],[29,52,30,50],[29,53,30,51],[29,54,30,52],[29,55,30,53],[30,4,31,2],[30,8,31,6],[30,12,31,6,"shouldBeUseWeb"],[30,28,31,20],[30,29,31,20,"shouldBeUseWeb"],[30,43,31,20],[30,45,31,21],[30,46,31,22],[30,48,31,24],[31,6,32,4],[31,10,32,8],[31,11,32,9,"inputs"],[31,17,32,15],[31,18,32,16,"length"],[31,24,32,22],[31,28,32,26,"dependencies"],[31,40,32,38],[31,42,32,40,"length"],[31,48,32,46],[31,50,32,48],[32,8,33,6],[33,8,34,6,"inputs"],[33,14,34,12],[33,17,34,15,"dependencies"],[33,29,34,27],[34,6,35,4],[35,4,36,2],[37,4,38,2],[38,4,39,2],[38,8,39,6,"dependencies"],[38,20,39,18],[38,25,39,23,"undefined"],[38,34,39,32],[38,36,39,34],[39,6,40,4,"dependencies"],[39,18,40,16],[39,21,40,19],[39,22,40,20],[39,25,40,23,"inputs"],[39,31,40,29],[39,33,40,31,"updater"],[39,40,40,38],[39,41,40,39,"__workletHash"],[39,54,40,52],[39,55,40,53],[40,4,41,2],[40,5,41,3],[40,11,41,9],[41,6,42,4,"dependencies"],[41,18,42,16],[41,19,42,17,"push"],[41,23,42,21],[41,24,42,22,"updater"],[41,31,42,29],[41,32,42,30,"__workletHash"],[41,45,42,43],[41,46,42,44],[42,4,43,2],[43,4,45,2],[43,8,45,6,"initRef"],[43,15,45,13],[43,16,45,14,"current"],[43,23,45,21],[43,28,45,26],[43,32,45,30],[43,34,45,32],[44,6,46,4,"initRef"],[44,13,46,11],[44,14,46,12,"current"],[44,21,46,19],[44,24,46,22],[44,28,46,22,"makeMutable"],[44,33,46,33],[44,34,46,33,"makeMutable"],[44,45,46,33],[44,47,46,34],[44,51,46,34,"initialUpdaterRun"],[44,61,46,51],[44,62,46,51,"initialUpdaterRun"],[44,79,46,51],[44,81,46,52,"updater"],[44,88,46,59],[44,89,46,60],[44,90,46,61],[45,4,47,2],[46,4,49,2],[46,8,49,8,"sharedValue"],[46,19,49,39],[46,22,49,42,"initRef"],[46,29,49,49],[46,30,49,50,"current"],[46,37,49,57],[47,4,51,2],[47,8,51,2,"useEffect"],[47,14,51,11],[47,15,51,11,"useEffect"],[47,24,51,11],[47,26,51,12],[47,32,51,18],[48,6,52,4],[48,10,52,10,"fun"],[48,13,52,13],[48,16,52,16],[49,8,52,16],[49,12,52,16,"_e"],[49,14,52,16],[49,22,52,16,"global"],[49,28,52,16],[49,29,52,16,"Error"],[49,34,52,16],[50,8,52,16],[50,12,52,16,"anonymous"],[50,21,52,16],[50,33,52,16,"anonymous"],[50,34,52,16],[50,36,52,22],[51,10,54,6,"sharedValue"],[51,21,54,17],[51,22,54,18,"value"],[51,27,54,23],[51,30,54,26,"updater"],[51,37,54,33],[51,38,54,34],[51,39,54,35],[52,8,55,4],[52,9,55,5],[53,8,55,5,"anonymous"],[53,17,55,5],[53,18,55,5,"__closure"],[53,27,55,5],[54,10,55,5,"sharedValue"],[54,21,55,5],[55,10,55,5,"updater"],[56,8,55,5],[57,8,55,5,"anonymous"],[57,17,55,5],[57,18,55,5,"__workletHash"],[57,31,55,5],[58,8,55,5,"anonymous"],[58,17,55,5],[58,18,55,5,"__initData"],[58,28,55,5],[58,31,55,5,"_worklet_4899742148771_init_data"],[58,63,55,5],[59,8,55,5,"anonymous"],[59,17,55,5],[59,18,55,5,"__stackDetails"],[59,32,55,5],[59,35,55,5,"_e"],[59,37,55,5],[60,8,55,5],[60,15,55,5,"anonymous"],[60,24,55,5],[61,6,55,5],[61,7,52,16],[61,9,55,5],[62,6,56,4],[62,10,56,10,"mapperId"],[62,18,56,18],[62,21,56,21],[62,25,56,21,"startMapper"],[62,30,56,32],[62,31,56,32,"startMapper"],[62,42,56,32],[62,44,56,33,"fun"],[62,47,56,36],[62,49,56,38,"inputs"],[62,55,56,44],[62,57,56,46],[62,58,56,47,"sharedValue"],[62,69,56,58],[62,70,56,59],[62,71,56,60],[63,6,57,4],[63,13,57,11],[63,19,57,17],[64,8,58,6],[64,12,58,6,"stopMapper"],[64,17,58,16],[64,18,58,16,"stopMapper"],[64,28,58,16],[64,30,58,17,"mapperId"],[64,38,58,25],[64,39,58,26],[65,6,59,4],[65,7,59,5],[66,4,60,2],[66,5,60,3],[66,7,60,5,"dependencies"],[66,19,60,17],[66,20,60,18],[67,4,62,2],[67,8,62,2,"useEffect"],[67,14,62,11],[67,15,62,11,"useEffect"],[67,24,62,11],[67,26,62,12],[67,32,62,18],[68,6,63,4],[68,13,63,11],[68,19,63,17],[69,8,64,6,"initRef"],[69,15,64,13],[69,16,64,14,"current"],[69,23,64,21],[69,26,64,24],[69,30,64,28],[70,6,65,4],[70,7,65,5],[71,4,66,2],[71,5,66,3],[71,7,66,5],[71,9,66,7],[71,10,66,8],[72,4,68,2],[72,11,68,9,"sharedValue"],[72,22,68,20],[73,2,69,0],[74,0,69,1],[74,3]],"functionMap":{"names":["<global>","useDerivedValue","useEffect$argument_0","fun","<anonymous>"],"mappings":"AAA;OCwB;YC0B;gBCC;KDG;WEE;KFE;GDC;YCE;WEC;KFE;GDC;CDG"},"hasCjsExports":false},"type":"js/module"}]}