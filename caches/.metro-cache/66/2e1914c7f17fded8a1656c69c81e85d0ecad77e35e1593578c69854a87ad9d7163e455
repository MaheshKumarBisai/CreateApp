{"dependencies":[{"name":"../modules/symbolicateStackTrace","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":48,"index":540},"end":{"line":14,"column":91,"index":583}}],"key":"FAX6y4eiRxXjsFET+Nb6D/o542w=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.symbolicate = exports.deleteStack = void 0;\n  var symbolicateStackTrace_1 = __importDefault(require(_dependencyMap[0], \"../modules/symbolicateStackTrace\"));\n  var cache = new Map();\n  /**\n   * Sanitize because sometimes, `symbolicateStackTrace` gives us invalid values.\n   */\n  var sanitize = _ref => {\n    var maybeStack = _ref.stack,\n      codeFrame = _ref.codeFrame;\n    if (!Array.isArray(maybeStack)) {\n      throw new Error('Expected stack to be an array.');\n    }\n    var stack = [];\n    for (var maybeFrame of maybeStack) {\n      var collapse = false;\n      if ('collapse' in maybeFrame) {\n        if (typeof maybeFrame.collapse !== 'boolean') {\n          throw new Error('Expected stack frame `collapse` to be a boolean.');\n        }\n        collapse = maybeFrame.collapse;\n      }\n      stack.push({\n        arguments: [],\n        column: maybeFrame.column,\n        file: maybeFrame.file,\n        lineNumber: maybeFrame.lineNumber,\n        methodName: maybeFrame.methodName,\n        collapse\n      });\n    }\n    return {\n      stack,\n      codeFrame\n    };\n  };\n  function deleteStack(stack) {\n    cache.delete(stack);\n  }\n  exports.deleteStack = deleteStack;\n  function symbolicate(stack) {\n    var promise = cache.get(stack);\n    if (promise == null) {\n      promise = (0, symbolicateStackTrace_1.default)(stack).then(sanitize);\n      cache.set(stack, promise);\n    }\n    return promise;\n  }\n  exports.symbolicate = symbolicate;\n});","lineCount":67,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,2,9,0],[11,6,9,4,"__importDefault"],[11,21,9,19],[11,24,9,23],[11,28,9,27],[11,32,9,31],[11,36,9,35],[11,37,9,36,"__importDefault"],[11,52,9,51],[11,56,9,56],[11,66,9,66,"mod"],[11,69,9,69],[11,71,9,71],[12,4,10,4],[12,11,10,12,"mod"],[12,14,10,15],[12,18,10,19,"mod"],[12,21,10,22],[12,22,10,23,"__esModule"],[12,32,10,33],[12,35,10,37,"mod"],[12,38,10,40],[12,41,10,43],[13,6,10,45],[13,15,10,54],[13,17,10,56,"mod"],[14,4,10,60],[14,5,10,61],[15,2,11,0],[15,3,11,1],[16,2,12,0,"Object"],[16,8,12,6],[16,9,12,7,"defineProperty"],[16,23,12,21],[16,24,12,22,"exports"],[16,31,12,29],[16,33,12,31],[16,45,12,43],[16,47,12,45],[17,4,12,47,"value"],[17,9,12,52],[17,11,12,54],[18,2,12,59],[18,3,12,60],[18,4,12,61],[19,2,13,0,"exports"],[19,9,13,7],[19,10,13,8,"symbolicate"],[19,21,13,19],[19,24,13,22,"exports"],[19,31,13,29],[19,32,13,30,"deleteStack"],[19,43,13,41],[19,46,13,44],[19,51,13,49],[19,52,13,50],[20,2,14,0],[20,6,14,6,"symbolicateStackTrace_1"],[20,29,14,29],[20,32,14,32,"__importDefault"],[20,47,14,47],[20,48,14,48,"require"],[20,55,14,55],[20,56,14,55,"_dependencyMap"],[20,70,14,55],[20,109,14,90],[20,110,14,91],[20,111,14,92],[21,2,15,0],[21,6,15,6,"cache"],[21,11,15,11],[21,14,15,14],[21,18,15,18,"Map"],[21,21,15,21],[21,22,15,22],[21,23,15,23],[22,2,16,0],[23,0,17,0],[24,0,18,0],[25,2,19,0],[25,6,19,6,"sanitize"],[25,14,19,14],[25,17,19,17,"_ref"],[25,21,19,17],[25,25,19,56],[26,4,19,56],[26,8,19,27,"maybeStack"],[26,18,19,37],[26,21,19,37,"_ref"],[26,25,19,37],[26,26,19,20,"stack"],[26,31,19,25],[27,6,19,39,"codeFrame"],[27,15,19,48],[27,18,19,48,"_ref"],[27,22,19,48],[27,23,19,39,"codeFrame"],[27,32,19,48],[28,4,20,4],[28,8,20,8],[28,9,20,9,"Array"],[28,14,20,14],[28,15,20,15,"isArray"],[28,22,20,22],[28,23,20,23,"maybeStack"],[28,33,20,33],[28,34,20,34],[28,36,20,36],[29,6,21,8],[29,12,21,14],[29,16,21,18,"Error"],[29,21,21,23],[29,22,21,24],[29,54,21,56],[29,55,21,57],[30,4,22,4],[31,4,23,4],[31,8,23,10,"stack"],[31,13,23,15],[31,16,23,18],[31,18,23,20],[32,4,24,4],[32,9,24,9],[32,13,24,15,"maybeFrame"],[32,23,24,25],[32,27,24,29,"maybeStack"],[32,37,24,39],[32,39,24,41],[33,6,25,8],[33,10,25,12,"collapse"],[33,18,25,20],[33,21,25,23],[33,26,25,28],[34,6,26,8],[34,10,26,12],[34,20,26,22],[34,24,26,26,"maybeFrame"],[34,34,26,36],[34,36,26,38],[35,8,27,12],[35,12,27,16],[35,19,27,23,"maybeFrame"],[35,29,27,33],[35,30,27,34,"collapse"],[35,38,27,42],[35,43,27,47],[35,52,27,56],[35,54,27,58],[36,10,28,16],[36,16,28,22],[36,20,28,26,"Error"],[36,25,28,31],[36,26,28,32],[36,76,28,82],[36,77,28,83],[37,8,29,12],[38,8,30,12,"collapse"],[38,16,30,20],[38,19,30,23,"maybeFrame"],[38,29,30,33],[38,30,30,34,"collapse"],[38,38,30,42],[39,6,31,8],[40,6,32,8,"stack"],[40,11,32,13],[40,12,32,14,"push"],[40,16,32,18],[40,17,32,19],[41,8,33,12,"arguments"],[41,17,33,21],[41,19,33,23],[41,21,33,25],[42,8,34,12,"column"],[42,14,34,18],[42,16,34,20,"maybeFrame"],[42,26,34,30],[42,27,34,31,"column"],[42,33,34,37],[43,8,35,12,"file"],[43,12,35,16],[43,14,35,18,"maybeFrame"],[43,24,35,28],[43,25,35,29,"file"],[43,29,35,33],[44,8,36,12,"lineNumber"],[44,18,36,22],[44,20,36,24,"maybeFrame"],[44,30,36,34],[44,31,36,35,"lineNumber"],[44,41,36,45],[45,8,37,12,"methodName"],[45,18,37,22],[45,20,37,24,"maybeFrame"],[45,30,37,34],[45,31,37,35,"methodName"],[45,41,37,45],[46,8,38,12,"collapse"],[47,6,39,8],[47,7,39,9],[47,8,39,10],[48,4,40,4],[49,4,41,4],[49,11,41,11],[50,6,41,13,"stack"],[50,11,41,18],[51,6,41,20,"codeFrame"],[52,4,41,30],[52,5,41,31],[53,2,42,0],[53,3,42,1],[54,2,43,0],[54,11,43,9,"deleteStack"],[54,22,43,20,"deleteStack"],[54,23,43,21,"stack"],[54,28,43,26],[54,30,43,28],[55,4,44,4,"cache"],[55,9,44,9],[55,10,44,10,"delete"],[55,16,44,16],[55,17,44,17,"stack"],[55,22,44,22],[55,23,44,23],[56,2,45,0],[57,2,46,0,"exports"],[57,9,46,7],[57,10,46,8,"deleteStack"],[57,21,46,19],[57,24,46,22,"deleteStack"],[57,35,46,33],[58,2,47,0],[58,11,47,9,"symbolicate"],[58,22,47,20,"symbolicate"],[58,23,47,21,"stack"],[58,28,47,26],[58,30,47,28],[59,4,48,4],[59,8,48,8,"promise"],[59,15,48,15],[59,18,48,18,"cache"],[59,23,48,23],[59,24,48,24,"get"],[59,27,48,27],[59,28,48,28,"stack"],[59,33,48,33],[59,34,48,34],[60,4,49,4],[60,8,49,8,"promise"],[60,15,49,15],[60,19,49,19],[60,23,49,23],[60,25,49,25],[61,6,50,8,"promise"],[61,13,50,15],[61,16,50,18],[61,17,50,19],[61,18,50,20],[61,20,50,22,"symbolicateStackTrace_1"],[61,43,50,45],[61,44,50,46,"default"],[61,51,50,53],[61,53,50,55,"stack"],[61,58,50,60],[61,59,50,61],[61,60,50,62,"then"],[61,64,50,66],[61,65,50,67,"sanitize"],[61,73,50,75],[61,74,50,76],[62,6,51,8,"cache"],[62,11,51,13],[62,12,51,14,"set"],[62,15,51,17],[62,16,51,18,"stack"],[62,21,51,23],[62,23,51,25,"promise"],[62,30,51,32],[62,31,51,33],[63,4,52,4],[64,4,53,4],[64,11,53,11,"promise"],[64,18,53,18],[65,2,54,0],[66,2,55,0,"exports"],[66,9,55,7],[66,10,55,8,"symbolicate"],[66,21,55,19],[66,24,55,22,"symbolicate"],[66,35,55,33],[67,0,55,34],[67,3]],"functionMap":{"names":["<global>","<anonymous>","sanitize","deleteStack","symbolicate"],"mappings":"AAA;wDCQ;CDE;iBEQ;CFuB;AGC;CHE;AIE;CJO"},"hasCjsExports":true},"type":"js/module"}]}