{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"./LogBoxSymbolication","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":34,"column":41,"index":1397},"end":{"line":34,"column":73,"index":1429}}],"key":"7TMaBV+wOpGEb5+DhJnHom/Q4tU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  var _classCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\").default;\n  var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = {\n        enumerable: true,\n        get: function () {\n          return m[k];\n        }\n      };\n    }\n    Object.defineProperty(o, k2, desc);\n  } : function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n    Object.defineProperty(o, \"default\", {\n      enumerable: true,\n      value: v\n    });\n  } : function (o, v) {\n    o[\"default\"] = v;\n  });\n  var __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.LogBoxLog = void 0;\n  var LogBoxSymbolication = __importStar(require(_dependencyMap[2], \"./LogBoxSymbolication\"));\n  function componentStackToStack(componentStack) {\n    return componentStack.map(stack => ({\n      file: stack.fileName,\n      methodName: stack.content,\n      lineNumber: stack.location?.row ?? 0,\n      column: stack.location?.column ?? 0,\n      arguments: []\n    }));\n  }\n  var LogBoxLog = /*#__PURE__*/function () {\n    function LogBoxLog(data) {\n      _classCallCheck(this, LogBoxLog);\n      this.symbolicated = {\n        stack: {\n          error: null,\n          stack: null,\n          status: 'NONE'\n        },\n        component: {\n          error: null,\n          stack: null,\n          status: 'NONE'\n        }\n      };\n      this.callbacks = new Map();\n      this.componentStackCache = null;\n      this.level = data.level;\n      this.type = data.type ?? 'error';\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.count = 1;\n      this.symbolicated = data.symbolicated ?? this.symbolicated;\n    }\n    return _createClass(LogBoxLog, [{\n      key: \"incrementCount\",\n      value: function incrementCount() {\n        this.count += 1;\n      }\n    }, {\n      key: \"getAvailableStack\",\n      value: function getAvailableStack(type) {\n        if (this.symbolicated[type].status === 'COMPLETE') {\n          return this.symbolicated[type].stack;\n        }\n        return this.getStack(type);\n      }\n    }, {\n      key: \"flushCallbacks\",\n      value: function flushCallbacks(type) {\n        var callbacks = this.callbacks.get(type);\n        var status = this.symbolicated[type].status;\n        if (callbacks) {\n          for (var callback of callbacks) {\n            callback(status);\n          }\n          callbacks.clear();\n        }\n      }\n    }, {\n      key: \"pushCallback\",\n      value: function pushCallback(type, callback) {\n        var callbacks = this.callbacks.get(type);\n        if (!callbacks) {\n          callbacks = new Set();\n          this.callbacks.set(type, callbacks);\n        }\n        callbacks.add(callback);\n      }\n    }, {\n      key: \"retrySymbolicate\",\n      value: function retrySymbolicate(type, callback) {\n        this._symbolicate(type, true, callback);\n      }\n    }, {\n      key: \"symbolicate\",\n      value: function symbolicate(type, callback) {\n        this._symbolicate(type, false, callback);\n      }\n    }, {\n      key: \"_symbolicate\",\n      value: function _symbolicate(type, retry, callback) {\n        if (callback) {\n          this.pushCallback(type, callback);\n        }\n        var status = this.symbolicated[type].status;\n        if (status === 'COMPLETE') {\n          return this.flushCallbacks(type);\n        }\n        if (retry) {\n          LogBoxSymbolication.deleteStack(this.getStack(type));\n          this.handleSymbolicate(type);\n        } else {\n          if (status === 'NONE') {\n            this.handleSymbolicate(type);\n          }\n        }\n      }\n    }, {\n      key: \"getStack\",\n      value: function getStack(type) {\n        if (type === 'component') {\n          if (this.componentStackCache == null) {\n            this.componentStackCache = componentStackToStack(this.componentStack);\n          }\n          return this.componentStackCache;\n        }\n        return this.stack;\n      }\n    }, {\n      key: \"handleSymbolicate\",\n      value: function handleSymbolicate(type) {\n        if (type === 'component' && !this.componentStack?.length) {\n          return;\n        }\n        if (this.symbolicated[type].status !== 'PENDING') {\n          this.updateStatus(type, null, null, null);\n          LogBoxSymbolication.symbolicate(this.getStack(type)).then(data => {\n            this.updateStatus(type, null, data?.stack, data?.codeFrame);\n          }, error => {\n            this.updateStatus(type, error, null, null);\n          });\n        }\n      }\n    }, {\n      key: \"updateStatus\",\n      value: function updateStatus(type, error, stack, codeFrame) {\n        var lastStatus = this.symbolicated[type].status;\n        if (error != null) {\n          this.symbolicated[type] = {\n            error,\n            stack: null,\n            status: 'FAILED'\n          };\n        } else if (stack != null) {\n          if (codeFrame) {\n            this.codeFrame = codeFrame;\n          }\n          this.symbolicated[type] = {\n            error: null,\n            stack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicated[type] = {\n            error: null,\n            stack: null,\n            status: 'PENDING'\n          };\n        }\n        var status = this.symbolicated[type].status;\n        if (lastStatus !== status) {\n          if (['COMPLETE', 'FAILED'].includes(status)) {\n            this.flushCallbacks(type);\n          }\n        }\n      }\n    }]);\n  }();\n  exports.LogBoxLog = LogBoxLog;\n});","lineCount":212,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,2,2,0],[11,6,2,0,"_classCallCheck"],[11,21,2,0],[11,24,2,0,"require"],[11,31,2,0],[11,32,2,0,"_dependencyMap"],[11,46,2,0],[11,92,2,0,"default"],[11,99,2,0],[12,2,2,0],[12,6,2,0,"_createClass"],[12,18,2,0],[12,21,2,0,"require"],[12,28,2,0],[12,29,2,0,"_dependencyMap"],[12,43,2,0],[12,86,2,0,"default"],[12,93,2,0],[13,2,9,0],[13,6,9,4,"__createBinding"],[13,21,9,19],[13,24,9,23],[13,28,9,27],[13,32,9,31],[13,36,9,35],[13,37,9,36,"__createBinding"],[13,52,9,51],[13,57,9,57,"Object"],[13,63,9,63],[13,64,9,64,"create"],[13,70,9,70],[13,73,9,74],[13,83,9,83,"o"],[13,84,9,84],[13,86,9,86,"m"],[13,87,9,87],[13,89,9,89,"k"],[13,90,9,90],[13,92,9,92,"k2"],[13,94,9,94],[13,96,9,96],[14,4,10,4],[14,8,10,8,"k2"],[14,10,10,10],[14,15,10,15,"undefined"],[14,24,10,24],[14,26,10,26,"k2"],[14,28,10,28],[14,31,10,31,"k"],[14,32,10,32],[15,4,11,4],[15,8,11,8,"desc"],[15,12,11,12],[15,15,11,15,"Object"],[15,21,11,21],[15,22,11,22,"getOwnPropertyDescriptor"],[15,46,11,46],[15,47,11,47,"m"],[15,48,11,48],[15,50,11,50,"k"],[15,51,11,51],[15,52,11,52],[16,4,12,4],[16,8,12,8],[16,9,12,9,"desc"],[16,13,12,13],[16,18,12,18],[16,23,12,23],[16,27,12,27,"desc"],[16,31,12,31],[16,34,12,34],[16,35,12,35,"m"],[16,36,12,36],[16,37,12,37,"__esModule"],[16,47,12,47],[16,50,12,50,"desc"],[16,54,12,54],[16,55,12,55,"writable"],[16,63,12,63],[16,67,12,67,"desc"],[16,71,12,71],[16,72,12,72,"configurable"],[16,84,12,84],[16,85,12,85],[16,87,12,87],[17,6,13,6,"desc"],[17,10,13,10],[17,13,13,13],[18,8,13,15,"enumerable"],[18,18,13,25],[18,20,13,27],[18,24,13,31],[19,8,13,33,"get"],[19,11,13,36],[19,13,13,38],[19,22,13,38,"get"],[19,23,13,38],[19,25,13,49],[20,10,13,51],[20,17,13,58,"m"],[20,18,13,59],[20,19,13,60,"k"],[20,20,13,61],[20,21,13,62],[21,8,13,64],[22,6,13,66],[22,7,13,67],[23,4,14,4],[24,4,15,4,"Object"],[24,10,15,10],[24,11,15,11,"defineProperty"],[24,25,15,25],[24,26,15,26,"o"],[24,27,15,27],[24,29,15,29,"k2"],[24,31,15,31],[24,33,15,33,"desc"],[24,37,15,37],[24,38,15,38],[25,2,16,0],[25,3,16,1],[25,6,16,6],[25,16,16,15,"o"],[25,17,16,16],[25,19,16,18,"m"],[25,20,16,19],[25,22,16,21,"k"],[25,23,16,22],[25,25,16,24,"k2"],[25,27,16,26],[25,29,16,28],[26,4,17,4],[26,8,17,8,"k2"],[26,10,17,10],[26,15,17,15,"undefined"],[26,24,17,24],[26,26,17,26,"k2"],[26,28,17,28],[26,31,17,31,"k"],[26,32,17,32],[27,4,18,4,"o"],[27,5,18,5],[27,6,18,6,"k2"],[27,8,18,8],[27,9,18,9],[27,12,18,12,"m"],[27,13,18,13],[27,14,18,14,"k"],[27,15,18,15],[27,16,18,16],[28,2,19,0],[28,3,19,2],[28,4,19,3],[29,2,20,0],[29,6,20,4,"__setModuleDefault"],[29,24,20,22],[29,27,20,26],[29,31,20,30],[29,35,20,34],[29,39,20,38],[29,40,20,39,"__setModuleDefault"],[29,58,20,57],[29,63,20,63,"Object"],[29,69,20,69],[29,70,20,70,"create"],[29,76,20,76],[29,79,20,80],[29,89,20,89,"o"],[29,90,20,90],[29,92,20,92,"v"],[29,93,20,93],[29,95,20,95],[30,4,21,4,"Object"],[30,10,21,10],[30,11,21,11,"defineProperty"],[30,25,21,25],[30,26,21,26,"o"],[30,27,21,27],[30,29,21,29],[30,38,21,38],[30,40,21,40],[31,6,21,42,"enumerable"],[31,16,21,52],[31,18,21,54],[31,22,21,58],[32,6,21,60,"value"],[32,11,21,65],[32,13,21,67,"v"],[33,4,21,69],[33,5,21,70],[33,6,21,71],[34,2,22,0],[34,3,22,1],[34,6,22,5],[34,16,22,14,"o"],[34,17,22,15],[34,19,22,17,"v"],[34,20,22,18],[34,22,22,20],[35,4,23,4,"o"],[35,5,23,5],[35,6,23,6],[35,15,23,15],[35,16,23,16],[35,19,23,19,"v"],[35,20,23,20],[36,2,24,0],[36,3,24,1],[36,4,24,2],[37,2,25,0],[37,6,25,4,"__importStar"],[37,18,25,16],[37,21,25,20],[37,25,25,24],[37,29,25,28],[37,33,25,32],[37,34,25,33,"__importStar"],[37,46,25,45],[37,50,25,50],[37,60,25,60,"mod"],[37,63,25,63],[37,65,25,65],[38,4,26,4],[38,8,26,8,"mod"],[38,11,26,11],[38,15,26,15,"mod"],[38,18,26,18],[38,19,26,19,"__esModule"],[38,29,26,29],[38,31,26,31],[38,38,26,38,"mod"],[38,41,26,41],[39,4,27,4],[39,8,27,8,"result"],[39,14,27,14],[39,17,27,17],[39,18,27,18],[39,19,27,19],[40,4,28,4],[40,8,28,8,"mod"],[40,11,28,11],[40,15,28,15],[40,19,28,19],[40,21,28,21],[40,26,28,26],[40,30,28,30,"k"],[40,31,28,31],[40,35,28,35,"mod"],[40,38,28,38],[40,40,28,40],[40,44,28,44,"k"],[40,45,28,45],[40,50,28,50],[40,59,28,59],[40,63,28,63,"Object"],[40,69,28,69],[40,70,28,70,"prototype"],[40,79,28,79],[40,80,28,80,"hasOwnProperty"],[40,94,28,94],[40,95,28,95,"call"],[40,99,28,99],[40,100,28,100,"mod"],[40,103,28,103],[40,105,28,105,"k"],[40,106,28,106],[40,107,28,107],[40,109,28,109,"__createBinding"],[40,124,28,124],[40,125,28,125,"result"],[40,131,28,131],[40,133,28,133,"mod"],[40,136,28,136],[40,138,28,138,"k"],[40,139,28,139],[40,140,28,140],[41,4,29,4,"__setModuleDefault"],[41,22,29,22],[41,23,29,23,"result"],[41,29,29,29],[41,31,29,31,"mod"],[41,34,29,34],[41,35,29,35],[42,4,30,4],[42,11,30,11,"result"],[42,17,30,17],[43,2,31,0],[43,3,31,1],[44,2,32,0,"Object"],[44,8,32,6],[44,9,32,7,"defineProperty"],[44,23,32,21],[44,24,32,22,"exports"],[44,31,32,29],[44,33,32,31],[44,45,32,43],[44,47,32,45],[45,4,32,47,"value"],[45,9,32,52],[45,11,32,54],[46,2,32,59],[46,3,32,60],[46,4,32,61],[47,2,33,0,"exports"],[47,9,33,7],[47,10,33,8,"LogBoxLog"],[47,19,33,17],[47,22,33,20],[47,27,33,25],[47,28,33,26],[48,2,34,0],[48,6,34,6,"LogBoxSymbolication"],[48,25,34,25],[48,28,34,28,"__importStar"],[48,40,34,40],[48,41,34,41,"require"],[48,48,34,48],[48,49,34,48,"_dependencyMap"],[48,63,34,48],[48,91,34,72],[48,92,34,73],[48,93,34,74],[49,2,35,0],[49,11,35,9,"componentStackToStack"],[49,32,35,30,"componentStackToStack"],[49,33,35,31,"componentStack"],[49,47,35,45],[49,49,35,47],[50,4,36,4],[50,11,36,11,"componentStack"],[50,25,36,25],[50,26,36,26,"map"],[50,29,36,29],[50,30,36,31,"stack"],[50,35,36,36],[50,40,36,42],[51,6,37,8,"file"],[51,10,37,12],[51,12,37,14,"stack"],[51,17,37,19],[51,18,37,20,"fileName"],[51,26,37,28],[52,6,38,8,"methodName"],[52,16,38,18],[52,18,38,20,"stack"],[52,23,38,25],[52,24,38,26,"content"],[52,31,38,33],[53,6,39,8,"lineNumber"],[53,16,39,18],[53,18,39,20,"stack"],[53,23,39,25],[53,24,39,26,"location"],[53,32,39,34],[53,34,39,36,"row"],[53,37,39,39],[53,41,39,43],[53,42,39,44],[54,6,40,8,"column"],[54,12,40,14],[54,14,40,16,"stack"],[54,19,40,21],[54,20,40,22,"location"],[54,28,40,30],[54,30,40,32,"column"],[54,36,40,38],[54,40,40,42],[54,41,40,43],[55,6,41,8,"arguments"],[55,15,41,17],[55,17,41,19],[56,4,42,4],[56,5,42,5],[56,6,42,6],[56,7,42,7],[57,2,43,0],[58,2,43,1],[58,6,44,6,"LogBoxLog"],[58,15,44,15],[59,4,67,4],[59,13,67,4,"LogBoxLog"],[59,23,67,16,"data"],[59,27,67,20],[59,29,67,22],[60,6,67,22,"_classCallCheck"],[60,21,67,22],[60,28,67,22,"LogBoxLog"],[60,37,67,22],[61,6,67,22],[61,11,54,4,"symbolicated"],[61,23,54,16],[61,26,54,19],[62,8,55,8,"stack"],[62,13,55,13],[62,15,55,15],[63,10,56,12,"error"],[63,15,56,17],[63,17,56,19],[63,21,56,23],[64,10,57,12,"stack"],[64,15,57,17],[64,17,57,19],[64,21,57,23],[65,10,58,12,"status"],[65,16,58,18],[65,18,58,20],[66,8,59,8],[66,9,59,9],[67,8,60,8,"component"],[67,17,60,17],[67,19,60,19],[68,10,61,12,"error"],[68,15,61,17],[68,17,61,19],[68,21,61,23],[69,10,62,12,"stack"],[69,15,62,17],[69,17,62,19],[69,21,62,23],[70,10,63,12,"status"],[70,16,63,18],[70,18,63,20],[71,8,64,8],[72,6,65,4],[72,7,65,5],[73,6,65,5],[73,11,66,4,"callbacks"],[73,20,66,13],[73,23,66,16],[73,27,66,20,"Map"],[73,30,66,23],[73,31,66,24],[73,32,66,25],[74,6,66,25],[74,11,130,4,"componentStackCache"],[74,30,130,23],[74,33,130,26],[74,37,130,30],[75,6,68,8],[75,10,68,12],[75,11,68,13,"level"],[75,16,68,18],[75,19,68,21,"data"],[75,23,68,25],[75,24,68,26,"level"],[75,29,68,31],[76,6,69,8],[76,10,69,12],[76,11,69,13,"type"],[76,15,69,17],[76,18,69,20,"data"],[76,22,69,24],[76,23,69,25,"type"],[76,27,69,29],[76,31,69,33],[76,38,69,40],[77,6,70,8],[77,10,70,12],[77,11,70,13,"message"],[77,18,70,20],[77,21,70,23,"data"],[77,25,70,27],[77,26,70,28,"message"],[77,33,70,35],[78,6,71,8],[78,10,71,12],[78,11,71,13,"stack"],[78,16,71,18],[78,19,71,21,"data"],[78,23,71,25],[78,24,71,26,"stack"],[78,29,71,31],[79,6,72,8],[79,10,72,12],[79,11,72,13,"category"],[79,19,72,21],[79,22,72,24,"data"],[79,26,72,28],[79,27,72,29,"category"],[79,35,72,37],[80,6,73,8],[80,10,73,12],[80,11,73,13,"componentStack"],[80,25,73,27],[80,28,73,30,"data"],[80,32,73,34],[80,33,73,35,"componentStack"],[80,47,73,49],[81,6,74,8],[81,10,74,12],[81,11,74,13,"codeFrame"],[81,20,74,22],[81,23,74,25,"data"],[81,27,74,29],[81,28,74,30,"codeFrame"],[81,37,74,39],[82,6,75,8],[82,10,75,12],[82,11,75,13,"isComponentError"],[82,27,75,29],[82,30,75,32,"data"],[82,34,75,36],[82,35,75,37,"isComponentError"],[82,51,75,53],[83,6,76,8],[83,10,76,12],[83,11,76,13,"count"],[83,16,76,18],[83,19,76,21],[83,20,76,22],[84,6,77,8],[84,10,77,12],[84,11,77,13,"symbolicated"],[84,23,77,25],[84,26,77,28,"data"],[84,30,77,32],[84,31,77,33,"symbolicated"],[84,43,77,45],[84,47,77,49],[84,51,77,53],[84,52,77,54,"symbolicated"],[84,64,77,66],[85,4,78,4],[86,4,78,5],[86,11,78,5,"_createClass"],[86,23,78,5],[86,24,78,5,"LogBoxLog"],[86,33,78,5],[87,6,78,5,"key"],[87,9,78,5],[88,6,78,5,"value"],[88,11,78,5],[88,13,79,4],[88,22,79,4,"incrementCount"],[88,36,79,18,"incrementCount"],[88,37,79,18],[88,39,79,21],[89,8,80,8],[89,12,80,12],[89,13,80,13,"count"],[89,18,80,18],[89,22,80,22],[89,23,80,23],[90,6,81,4],[91,4,81,5],[92,6,81,5,"key"],[92,9,81,5],[93,6,81,5,"value"],[93,11,81,5],[93,13,82,4],[93,22,82,4,"getAvailableStack"],[93,39,82,21,"getAvailableStack"],[93,40,82,22,"type"],[93,44,82,26],[93,46,82,28],[94,8,83,8],[94,12,83,12],[94,16,83,16],[94,17,83,17,"symbolicated"],[94,29,83,29],[94,30,83,30,"type"],[94,34,83,34],[94,35,83,35],[94,36,83,36,"status"],[94,42,83,42],[94,47,83,47],[94,57,83,57],[94,59,83,59],[95,10,84,12],[95,17,84,19],[95,21,84,23],[95,22,84,24,"symbolicated"],[95,34,84,36],[95,35,84,37,"type"],[95,39,84,41],[95,40,84,42],[95,41,84,43,"stack"],[95,46,84,48],[96,8,85,8],[97,8,86,8],[97,15,86,15],[97,19,86,19],[97,20,86,20,"getStack"],[97,28,86,28],[97,29,86,29,"type"],[97,33,86,33],[97,34,86,34],[98,6,87,4],[99,4,87,5],[100,6,87,5,"key"],[100,9,87,5],[101,6,87,5,"value"],[101,11,87,5],[101,13,88,4],[101,22,88,4,"flushCallbacks"],[101,36,88,18,"flushCallbacks"],[101,37,88,19,"type"],[101,41,88,23],[101,43,88,25],[102,8,89,8],[102,12,89,14,"callbacks"],[102,21,89,23],[102,24,89,26],[102,28,89,30],[102,29,89,31,"callbacks"],[102,38,89,40],[102,39,89,41,"get"],[102,42,89,44],[102,43,89,45,"type"],[102,47,89,49],[102,48,89,50],[103,8,90,8],[103,12,90,14,"status"],[103,18,90,20],[103,21,90,23],[103,25,90,27],[103,26,90,28,"symbolicated"],[103,38,90,40],[103,39,90,41,"type"],[103,43,90,45],[103,44,90,46],[103,45,90,47,"status"],[103,51,90,53],[104,8,91,8],[104,12,91,12,"callbacks"],[104,21,91,21],[104,23,91,23],[105,10,92,12],[105,15,92,17],[105,19,92,23,"callback"],[105,27,92,31],[105,31,92,35,"callbacks"],[105,40,92,44],[105,42,92,46],[106,12,93,16,"callback"],[106,20,93,24],[106,21,93,25,"status"],[106,27,93,31],[106,28,93,32],[107,10,94,12],[108,10,95,12,"callbacks"],[108,19,95,21],[108,20,95,22,"clear"],[108,25,95,27],[108,26,95,28],[108,27,95,29],[109,8,96,8],[110,6,97,4],[111,4,97,5],[112,6,97,5,"key"],[112,9,97,5],[113,6,97,5,"value"],[113,11,97,5],[113,13,98,4],[113,22,98,4,"pushCallback"],[113,34,98,16,"pushCallback"],[113,35,98,17,"type"],[113,39,98,21],[113,41,98,23,"callback"],[113,49,98,31],[113,51,98,33],[114,8,99,8],[114,12,99,12,"callbacks"],[114,21,99,21],[114,24,99,24],[114,28,99,28],[114,29,99,29,"callbacks"],[114,38,99,38],[114,39,99,39,"get"],[114,42,99,42],[114,43,99,43,"type"],[114,47,99,47],[114,48,99,48],[115,8,100,8],[115,12,100,12],[115,13,100,13,"callbacks"],[115,22,100,22],[115,24,100,24],[116,10,101,12,"callbacks"],[116,19,101,21],[116,22,101,24],[116,26,101,28,"Set"],[116,29,101,31],[116,30,101,32],[116,31,101,33],[117,10,102,12],[117,14,102,16],[117,15,102,17,"callbacks"],[117,24,102,26],[117,25,102,27,"set"],[117,28,102,30],[117,29,102,31,"type"],[117,33,102,35],[117,35,102,37,"callbacks"],[117,44,102,46],[117,45,102,47],[118,8,103,8],[119,8,104,8,"callbacks"],[119,17,104,17],[119,18,104,18,"add"],[119,21,104,21],[119,22,104,22,"callback"],[119,30,104,30],[119,31,104,31],[120,6,105,4],[121,4,105,5],[122,6,105,5,"key"],[122,9,105,5],[123,6,105,5,"value"],[123,11,105,5],[123,13,106,4],[123,22,106,4,"retrySymbolicate"],[123,38,106,20,"retrySymbolicate"],[123,39,106,21,"type"],[123,43,106,25],[123,45,106,27,"callback"],[123,53,106,35],[123,55,106,37],[124,8,107,8],[124,12,107,12],[124,13,107,13,"_symbolicate"],[124,25,107,25],[124,26,107,26,"type"],[124,30,107,30],[124,32,107,32],[124,36,107,36],[124,38,107,38,"callback"],[124,46,107,46],[124,47,107,47],[125,6,108,4],[126,4,108,5],[127,6,108,5,"key"],[127,9,108,5],[128,6,108,5,"value"],[128,11,108,5],[128,13,109,4],[128,22,109,4,"symbolicate"],[128,33,109,15,"symbolicate"],[128,34,109,16,"type"],[128,38,109,20],[128,40,109,22,"callback"],[128,48,109,30],[128,50,109,32],[129,8,110,8],[129,12,110,12],[129,13,110,13,"_symbolicate"],[129,25,110,25],[129,26,110,26,"type"],[129,30,110,30],[129,32,110,32],[129,37,110,37],[129,39,110,39,"callback"],[129,47,110,47],[129,48,110,48],[130,6,111,4],[131,4,111,5],[132,6,111,5,"key"],[132,9,111,5],[133,6,111,5,"value"],[133,11,111,5],[133,13,112,4],[133,22,112,4,"_symbolicate"],[133,34,112,16,"_symbolicate"],[133,35,112,17,"type"],[133,39,112,21],[133,41,112,23,"retry"],[133,46,112,28],[133,48,112,30,"callback"],[133,56,112,38],[133,58,112,40],[134,8,113,8],[134,12,113,12,"callback"],[134,20,113,20],[134,22,113,22],[135,10,114,12],[135,14,114,16],[135,15,114,17,"pushCallback"],[135,27,114,29],[135,28,114,30,"type"],[135,32,114,34],[135,34,114,36,"callback"],[135,42,114,44],[135,43,114,45],[136,8,115,8],[137,8,116,8],[137,12,116,14,"status"],[137,18,116,20],[137,21,116,23],[137,25,116,27],[137,26,116,28,"symbolicated"],[137,38,116,40],[137,39,116,41,"type"],[137,43,116,45],[137,44,116,46],[137,45,116,47,"status"],[137,51,116,53],[138,8,117,8],[138,12,117,12,"status"],[138,18,117,18],[138,23,117,23],[138,33,117,33],[138,35,117,35],[139,10,118,12],[139,17,118,19],[139,21,118,23],[139,22,118,24,"flushCallbacks"],[139,36,118,38],[139,37,118,39,"type"],[139,41,118,43],[139,42,118,44],[140,8,119,8],[141,8,120,8],[141,12,120,12,"retry"],[141,17,120,17],[141,19,120,19],[142,10,121,12,"LogBoxSymbolication"],[142,29,121,31],[142,30,121,32,"deleteStack"],[142,41,121,43],[142,42,121,44],[142,46,121,48],[142,47,121,49,"getStack"],[142,55,121,57],[142,56,121,58,"type"],[142,60,121,62],[142,61,121,63],[142,62,121,64],[143,10,122,12],[143,14,122,16],[143,15,122,17,"handleSymbolicate"],[143,32,122,34],[143,33,122,35,"type"],[143,37,122,39],[143,38,122,40],[144,8,123,8],[144,9,123,9],[144,15,124,13],[145,10,125,12],[145,14,125,16,"status"],[145,20,125,22],[145,25,125,27],[145,31,125,33],[145,33,125,35],[146,12,126,16],[146,16,126,20],[146,17,126,21,"handleSymbolicate"],[146,34,126,38],[146,35,126,39,"type"],[146,39,126,43],[146,40,126,44],[147,10,127,12],[148,8,128,8],[149,6,129,4],[150,4,129,5],[151,6,129,5,"key"],[151,9,129,5],[152,6,129,5,"value"],[152,11,129,5],[152,13,131,4],[152,22,131,4,"getStack"],[152,30,131,12,"getStack"],[152,31,131,13,"type"],[152,35,131,17],[152,37,131,19],[153,8,132,8],[153,12,132,12,"type"],[153,16,132,16],[153,21,132,21],[153,32,132,32],[153,34,132,34],[154,10,133,12],[154,14,133,16],[154,18,133,20],[154,19,133,21,"componentStackCache"],[154,38,133,40],[154,42,133,44],[154,46,133,48],[154,48,133,50],[155,12,134,16],[155,16,134,20],[155,17,134,21,"componentStackCache"],[155,36,134,40],[155,39,134,43,"componentStackToStack"],[155,60,134,64],[155,61,134,65],[155,65,134,69],[155,66,134,70,"componentStack"],[155,80,134,84],[155,81,134,85],[156,10,135,12],[157,10,136,12],[157,17,136,19],[157,21,136,23],[157,22,136,24,"componentStackCache"],[157,41,136,43],[158,8,137,8],[159,8,138,8],[159,15,138,15],[159,19,138,19],[159,20,138,20,"stack"],[159,25,138,25],[160,6,139,4],[161,4,139,5],[162,6,139,5,"key"],[162,9,139,5],[163,6,139,5,"value"],[163,11,139,5],[163,13,140,4],[163,22,140,4,"handleSymbolicate"],[163,39,140,21,"handleSymbolicate"],[163,40,140,22,"type"],[163,44,140,26],[163,46,140,28],[164,8,141,8],[164,12,141,12,"type"],[164,16,141,16],[164,21,141,21],[164,32,141,32],[164,36,141,36],[164,37,141,37],[164,41,141,41],[164,42,141,42,"componentStack"],[164,56,141,56],[164,58,141,58,"length"],[164,64,141,64],[164,66,141,66],[165,10,142,12],[166,8,143,8],[167,8,144,8],[167,12,144,12],[167,16,144,16],[167,17,144,17,"symbolicated"],[167,29,144,29],[167,30,144,30,"type"],[167,34,144,34],[167,35,144,35],[167,36,144,36,"status"],[167,42,144,42],[167,47,144,47],[167,56,144,56],[167,58,144,58],[168,10,145,12],[168,14,145,16],[168,15,145,17,"updateStatus"],[168,27,145,29],[168,28,145,30,"type"],[168,32,145,34],[168,34,145,36],[168,38,145,40],[168,40,145,42],[168,44,145,46],[168,46,145,48],[168,50,145,52],[168,51,145,53],[169,10,146,12,"LogBoxSymbolication"],[169,29,146,31],[169,30,146,32,"symbolicate"],[169,41,146,43],[169,42,146,44],[169,46,146,48],[169,47,146,49,"getStack"],[169,55,146,57],[169,56,146,58,"type"],[169,60,146,62],[169,61,146,63],[169,62,146,64],[169,63,146,65,"then"],[169,67,146,69],[169,68,146,71,"data"],[169,72,146,75],[169,76,146,80],[170,12,147,16],[170,16,147,20],[170,17,147,21,"updateStatus"],[170,29,147,33],[170,30,147,34,"type"],[170,34,147,38],[170,36,147,40],[170,40,147,44],[170,42,147,46,"data"],[170,46,147,50],[170,48,147,52,"stack"],[170,53,147,57],[170,55,147,59,"data"],[170,59,147,63],[170,61,147,65,"codeFrame"],[170,70,147,74],[170,71,147,75],[171,10,148,12],[171,11,148,13],[171,13,148,16,"error"],[171,18,148,21],[171,22,148,26],[172,12,149,16],[172,16,149,20],[172,17,149,21,"updateStatus"],[172,29,149,33],[172,30,149,34,"type"],[172,34,149,38],[172,36,149,40,"error"],[172,41,149,45],[172,43,149,47],[172,47,149,51],[172,49,149,53],[172,53,149,57],[172,54,149,58],[173,10,150,12],[173,11,150,13],[173,12,150,14],[174,8,151,8],[175,6,152,4],[176,4,152,5],[177,6,152,5,"key"],[177,9,152,5],[178,6,152,5,"value"],[178,11,152,5],[178,13,153,4],[178,22,153,4,"updateStatus"],[178,34,153,16,"updateStatus"],[178,35,153,17,"type"],[178,39,153,21],[178,41,153,23,"error"],[178,46,153,28],[178,48,153,30,"stack"],[178,53,153,35],[178,55,153,37,"codeFrame"],[178,64,153,46],[178,66,153,48],[179,8,154,8],[179,12,154,14,"lastStatus"],[179,22,154,24],[179,25,154,27],[179,29,154,31],[179,30,154,32,"symbolicated"],[179,42,154,44],[179,43,154,45,"type"],[179,47,154,49],[179,48,154,50],[179,49,154,51,"status"],[179,55,154,57],[180,8,155,8],[180,12,155,12,"error"],[180,17,155,17],[180,21,155,21],[180,25,155,25],[180,27,155,27],[181,10,156,12],[181,14,156,16],[181,15,156,17,"symbolicated"],[181,27,156,29],[181,28,156,30,"type"],[181,32,156,34],[181,33,156,35],[181,36,156,38],[182,12,157,16,"error"],[182,17,157,21],[183,12,158,16,"stack"],[183,17,158,21],[183,19,158,23],[183,23,158,27],[184,12,159,16,"status"],[184,18,159,22],[184,20,159,24],[185,10,160,12],[185,11,160,13],[186,8,161,8],[186,9,161,9],[186,15,162,13],[186,19,162,17,"stack"],[186,24,162,22],[186,28,162,26],[186,32,162,30],[186,34,162,32],[187,10,163,12],[187,14,163,16,"codeFrame"],[187,23,163,25],[187,25,163,27],[188,12,164,16],[188,16,164,20],[188,17,164,21,"codeFrame"],[188,26,164,30],[188,29,164,33,"codeFrame"],[188,38,164,42],[189,10,165,12],[190,10,166,12],[190,14,166,16],[190,15,166,17,"symbolicated"],[190,27,166,29],[190,28,166,30,"type"],[190,32,166,34],[190,33,166,35],[190,36,166,38],[191,12,167,16,"error"],[191,17,167,21],[191,19,167,23],[191,23,167,27],[192,12,168,16,"stack"],[192,17,168,21],[193,12,169,16,"status"],[193,18,169,22],[193,20,169,24],[194,10,170,12],[194,11,170,13],[195,8,171,8],[195,9,171,9],[195,15,172,13],[196,10,173,12],[196,14,173,16],[196,15,173,17,"symbolicated"],[196,27,173,29],[196,28,173,30,"type"],[196,32,173,34],[196,33,173,35],[196,36,173,38],[197,12,174,16,"error"],[197,17,174,21],[197,19,174,23],[197,23,174,27],[198,12,175,16,"stack"],[198,17,175,21],[198,19,175,23],[198,23,175,27],[199,12,176,16,"status"],[199,18,176,22],[199,20,176,24],[200,10,177,12],[200,11,177,13],[201,8,178,8],[202,8,179,8],[202,12,179,14,"status"],[202,18,179,20],[202,21,179,23],[202,25,179,27],[202,26,179,28,"symbolicated"],[202,38,179,40],[202,39,179,41,"type"],[202,43,179,45],[202,44,179,46],[202,45,179,47,"status"],[202,51,179,53],[203,8,180,8],[203,12,180,12,"lastStatus"],[203,22,180,22],[203,27,180,27,"status"],[203,33,180,33],[203,35,180,35],[204,10,181,12],[204,14,181,16],[204,15,181,17],[204,25,181,27],[204,27,181,29],[204,35,181,37],[204,36,181,38],[204,37,181,39,"includes"],[204,45,181,47],[204,46,181,48,"status"],[204,52,181,54],[204,53,181,55],[204,55,181,57],[205,12,182,16],[205,16,182,20],[205,17,182,21,"flushCallbacks"],[205,31,182,35],[205,32,182,36,"type"],[205,36,182,40],[205,37,182,41],[206,10,183,12],[207,8,184,8],[208,6,185,4],[209,4,185,5],[210,2,185,5],[211,2,187,0,"exports"],[211,9,187,7],[211,10,187,8,"LogBoxLog"],[211,19,187,17],[211,22,187,20,"LogBoxLog"],[211,31,187,29],[212,0,187,30],[212,3]],"functionMap":{"names":["<global>","<anonymous>","desc.get","componentStackToStack","componentStack.map$argument_0","LogBoxLog","constructor","incrementCount","getAvailableStack","flushCallbacks","pushCallback","retrySymbolicate","symbolicate","_symbolicate","getStack","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus"],"mappings":"AAA;0ECQ;sCCI,2BD;CDG,KC;CDG;gFCC;CDE,IC;CDE;kDCC;CDM;AGI;8BCC;MDM;CHC;AKC;ICuB;KDW;IEC;KFE;IGC;KHK;IIC;KJS;IKC;KLO;IMC;KNE;IOC;KPE;IQC;KRiB;ISE;KTQ;IUC;sECM;aDE,EE;aFE;KVE;IaC;KbgC;CLC"},"hasCjsExports":true},"type":"js/module"}]}