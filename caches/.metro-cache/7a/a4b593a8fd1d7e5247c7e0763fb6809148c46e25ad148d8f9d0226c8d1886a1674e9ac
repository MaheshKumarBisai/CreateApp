{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":44,"index":101}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":102},"end":{"line":3,"column":40,"index":142}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./ExpoLinking","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":143},"end":{"line":4,"column":42,"index":185}}],"key":"9p576A/DjaRztdSFcD8Nohub+Qg=","exportNames":["*"],"imports":1}},{"name":"./createURL","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":186},"end":{"line":5,"column":36,"index":222}}],"key":"vA/KQURWJdMSJD6QjTsub0VGQQ0=","exportNames":["*"],"imports":1}},{"name":"./validateURL","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":223},"end":{"line":6,"column":44,"index":267}}],"key":"QglbFjhSs1PLl8wx6icnjPl9qpg=","exportNames":["*"],"imports":1}},{"name":"./Linking.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":119,"column":0,"index":4560},"end":{"line":119,"column":32,"index":4592}}],"key":"UNHzwDbHrazdE82g65F1azNEReY=","exportNames":["*"],"imports":1}},{"name":"./Schemes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":120,"column":0,"index":4593},"end":{"line":120,"column":26,"index":4619}}],"key":"n/tFEHLQPHdXg5i1nrK9VhhMvhA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"parse\", {\n    enumerable: true,\n    get: function () {\n      return _createURL.parse;\n    }\n  });\n  Object.defineProperty(exports, \"createURL\", {\n    enumerable: true,\n    get: function () {\n      return _createURL.createURL;\n    }\n  });\n  exports.addEventListener = addEventListener;\n  exports.parseInitialURLAsync = parseInitialURLAsync;\n  exports.sendIntent = sendIntent;\n  exports.openSettings = openSettings;\n  exports.getInitialURL = getInitialURL;\n  exports.openURL = openURL;\n  exports.canOpenURL = canOpenURL;\n  exports.useURL = useURL;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoModulesCore = require(_dependencyMap[2], \"expo-modules-core\");\n  var _react = require(_dependencyMap[3], \"react\");\n  var _reactNative = require(_dependencyMap[4], \"react-native\");\n  var _ExpoLinking = require(_dependencyMap[5], \"./ExpoLinking\");\n  var NativeLinking = _interopDefault(_ExpoLinking);\n  var _createURL = require(_dependencyMap[6], \"./createURL\");\n  var _validateURL = require(_dependencyMap[7], \"./validateURL\");\n  var _LinkingTypes = require(_dependencyMap[8], \"./Linking.types\");\n  Object.keys(_LinkingTypes).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) {\n      Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () {\n          return _LinkingTypes[k];\n        }\n      });\n    }\n  });\n  var _Schemes = require(_dependencyMap[9], \"./Schemes\");\n  Object.keys(_Schemes).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) {\n      Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () {\n          return _Schemes[k];\n        }\n      });\n    }\n  });\n  // @needsAudit\n  /**\n   * Add a handler to `Linking` changes by listening to the `url` event type and providing the handler.\n   * It is recommended to use the [`useURL()`](#useurl) hook instead.\n   * @param type The only valid type is `'url'`.\n   * @param handler An [`URLListener`](#urllistener) function that takes an `event` object of the type\n   * [`EventType`](#eventype).\n   * @return An EmitterSubscription that has the remove method from EventSubscription\n   * @see [React Native Docs Linking page](https://reactnative.dev/docs/linking#addeventlistener).\n   */\n  function addEventListener(type, handler) {\n    return NativeLinking.default.addEventListener(type, handler);\n  }\n  // @needsAudit\n  /**\n   * Helper method which wraps React Native's `Linking.getInitialURL()` in `Linking.parse()`.\n   * Parses the deep link information out of the URL used to open the experience initially.\n   * If no link opened the app, all the fields will be `null`.\n   * > On the web it parses the current window URL.\n   * @return A promise that resolves with `ParsedURL` object.\n   */\n  function parseInitialURLAsync() {\n    return _parseInitialURLAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Launch an Android intent with extras.\n   * > Use [IntentLauncher](./intent-launcher) instead, `sendIntent` is only included in\n   * > `Linking` for API compatibility with React Native's Linking API.\n   * @platform android\n   */\n  function _parseInitialURLAsync() {\n    _parseInitialURLAsync = (0, _asyncToGenerator.default)(function* () {\n      var initialUrl = yield NativeLinking.default.getInitialURL();\n      if (!initialUrl) {\n        return {\n          scheme: null,\n          hostname: null,\n          path: null,\n          queryParams: null\n        };\n      }\n      return (0, _createURL.parse)(initialUrl);\n    });\n    return _parseInitialURLAsync.apply(this, arguments);\n  }\n  function sendIntent(_x, _x2) {\n    return _sendIntent.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Open the operating system settings app and displays the appâ€™s custom settings, if it has any.\n   */\n  function _sendIntent() {\n    _sendIntent = (0, _asyncToGenerator.default)(function* (action, extras) {\n      if (_reactNative.Platform.OS === 'android') {\n        return yield NativeLinking.default.sendIntent(action, extras);\n      }\n      throw new _expoModulesCore.UnavailabilityError('Linking', 'sendIntent');\n    });\n    return _sendIntent.apply(this, arguments);\n  }\n  function openSettings() {\n    return _openSettings.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Get the URL that was used to launch the app if it was launched by a link.\n   * @return The URL string that launched your app, or `null`.\n   */\n  function _openSettings() {\n    _openSettings = (0, _asyncToGenerator.default)(function* () {\n      if (_reactNative.Platform.OS === 'web') {\n        throw new _expoModulesCore.UnavailabilityError('Linking', 'openSettings');\n      }\n      if (NativeLinking.default.openSettings) {\n        return yield NativeLinking.default.openSettings();\n      }\n      yield openURL('app-settings:');\n    });\n    return _openSettings.apply(this, arguments);\n  }\n  function getInitialURL() {\n    return _getInitialURL.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Attempt to open the given URL with an installed app. See the [Linking guide](/guides/linking)\n   * for more information.\n   * @param url A URL for the operating system to open, eg: `tel:5555555`, `exp://`.\n   * @return A `Promise` that is fulfilled with `true` if the link is opened operating system\n   * automatically or the user confirms the prompt to open the link. The `Promise` rejects if there\n   * are no applications registered for the URL or the user cancels the dialog.\n   */\n  function _getInitialURL() {\n    _getInitialURL = (0, _asyncToGenerator.default)(function* () {\n      return (yield NativeLinking.default.getInitialURL()) ?? null;\n    });\n    return _getInitialURL.apply(this, arguments);\n  }\n  function openURL(_x3) {\n    return _openURL.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Determine whether or not an installed app can handle a given URL.\n   * On web this always returns `true` because there is no API for detecting what URLs can be opened.\n   * @param url The URL that you want to test can be opened.\n   * @return A `Promise` object that is fulfilled with `true` if the URL can be handled, otherwise it\n   * `false` if not.\n   *\n   * The `Promise` will reject on Android if it was impossible to check if the URL can be opened, and\n   * on iOS if you didn't [add the specific scheme in the `LSApplicationQueriesSchemes` key inside **Info.plist**](/guides/linking#linking-from-your-app).\n   */\n  function _openURL() {\n    _openURL = (0, _asyncToGenerator.default)(function* (url) {\n      (0, _validateURL.validateURL)(url);\n      return yield NativeLinking.default.openURL(url);\n    });\n    return _openURL.apply(this, arguments);\n  }\n  function canOpenURL(_x4) {\n    return _canOpenURL.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Returns the initial URL followed by any subsequent changes to the URL.\n   * @return Returns the initial URL or `null`.\n   */\n  function _canOpenURL() {\n    _canOpenURL = (0, _asyncToGenerator.default)(function* (url) {\n      (0, _validateURL.validateURL)(url);\n      return yield NativeLinking.default.canOpenURL(url);\n    });\n    return _canOpenURL.apply(this, arguments);\n  }\n  function useURL() {\n    var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      url = _useState2[0],\n      setLink = _useState2[1];\n    function onChange(event) {\n      setLink(event.url);\n    }\n    (0, _react.useEffect)(() => {\n      getInitialURL().then(url => setLink(url));\n      var subscription = addEventListener('url', onChange);\n      return () => subscription.remove();\n    }, []);\n    return url;\n  }\n});","lineCount":210,"map":[[12,2,121,0,"Object"],[12,8,121,0],[12,9,121,0,"defineProperty"],[12,23,121,0],[12,24,121,0,"exports"],[12,31,121,0],[13,4,121,0,"enumerable"],[13,14,121,0],[14,4,121,0,"get"],[14,7,121,0],[14,18,121,0,"get"],[14,19,121,0],[15,6,121,0],[15,13,121,0,"_createURL"],[15,23,121,0],[15,24,121,0,"parse"],[15,29,121,0],[16,4,121,0],[17,2,121,0],[18,2,121,0,"Object"],[18,8,121,0],[18,9,121,0,"defineProperty"],[18,23,121,0],[18,24,121,0,"exports"],[18,31,121,0],[19,4,121,0,"enumerable"],[19,14,121,0],[20,4,121,0,"get"],[20,7,121,0],[20,18,121,0,"get"],[20,19,121,0],[21,6,121,0],[21,13,121,0,"_createURL"],[21,23,121,0],[21,24,121,0,"createURL"],[21,33,121,0],[22,4,121,0],[23,2,121,0],[24,2,17,0,"exports"],[24,9,17,0],[24,10,17,0,"addEventListener"],[24,26,17,0],[24,29,17,0,"addEventListener"],[24,45,17,0],[25,2,28,0,"exports"],[25,9,28,0],[25,10,28,0,"parseInitialURLAsync"],[25,30,28,0],[25,33,28,0,"parseInitialURLAsync"],[25,53,28,0],[26,2,47,0,"exports"],[26,9,47,0],[26,10,47,0,"sendIntent"],[26,20,47,0],[26,23,47,0,"sendIntent"],[26,33,47,0],[27,2,57,0,"exports"],[27,9,57,0],[27,10,57,0,"openSettings"],[27,22,57,0],[27,25,57,0,"openSettings"],[27,37,57,0],[28,2,71,0,"exports"],[28,9,71,0],[28,10,71,0,"getInitialURL"],[28,23,71,0],[28,26,71,0,"getInitialURL"],[28,39,71,0],[29,2,83,0,"exports"],[29,9,83,0],[29,10,83,0,"openURL"],[29,17,83,0],[29,20,83,0,"openURL"],[29,27,83,0],[30,2,98,0,"exports"],[30,9,98,0],[30,10,98,0,"canOpenURL"],[30,20,98,0],[30,23,98,0,"canOpenURL"],[30,33,98,0],[31,2,107,0,"exports"],[31,9,107,0],[31,10,107,0,"useURL"],[31,16,107,0],[31,19,107,0,"useURL"],[31,25,107,0],[32,2,118,1],[32,6,118,1,"_babelRuntimeHelpersSlicedToArray"],[32,39,118,1],[32,42,118,1,"require"],[32,49,118,1],[32,50,118,1,"_dependencyMap"],[32,64,118,1],[33,2,118,1],[33,6,118,1,"_slicedToArray"],[33,20,118,1],[33,23,118,1,"_interopDefault"],[33,38,118,1],[33,39,118,1,"_babelRuntimeHelpersSlicedToArray"],[33,72,118,1],[34,2,118,1],[34,6,118,1,"_babelRuntimeHelpersAsyncToGenerator"],[34,42,118,1],[34,45,118,1,"require"],[34,52,118,1],[34,53,118,1,"_dependencyMap"],[34,67,118,1],[35,2,118,1],[35,6,118,1,"_asyncToGenerator"],[35,23,118,1],[35,26,118,1,"_interopDefault"],[35,41,118,1],[35,42,118,1,"_babelRuntimeHelpersAsyncToGenerator"],[35,78,118,1],[36,2,1,0],[36,6,1,0,"_expoModulesCore"],[36,22,1,0],[36,25,1,0,"require"],[36,32,1,0],[36,33,1,0,"_dependencyMap"],[36,47,1,0],[37,2,2,0],[37,6,2,0,"_react"],[37,12,2,0],[37,15,2,0,"require"],[37,22,2,0],[37,23,2,0,"_dependencyMap"],[37,37,2,0],[38,2,3,0],[38,6,3,0,"_reactNative"],[38,18,3,0],[38,21,3,0,"require"],[38,28,3,0],[38,29,3,0,"_dependencyMap"],[38,43,3,0],[39,2,4,0],[39,6,4,0,"_ExpoLinking"],[39,18,4,0],[39,21,4,0,"require"],[39,28,4,0],[39,29,4,0,"_dependencyMap"],[39,43,4,0],[40,2,4,0],[40,6,4,0,"NativeLinking"],[40,19,4,0],[40,22,4,0,"_interopDefault"],[40,37,4,0],[40,38,4,0,"_ExpoLinking"],[40,50,4,0],[41,2,5,0],[41,6,5,0,"_createURL"],[41,16,5,0],[41,19,5,0,"require"],[41,26,5,0],[41,27,5,0,"_dependencyMap"],[41,41,5,0],[42,2,6,0],[42,6,6,0,"_validateURL"],[42,18,6,0],[42,21,6,0,"require"],[42,28,6,0],[42,29,6,0,"_dependencyMap"],[42,43,6,0],[43,2,119,0],[43,6,119,0,"_LinkingTypes"],[43,19,119,0],[43,22,119,0,"require"],[43,29,119,0],[43,30,119,0,"_dependencyMap"],[43,44,119,0],[44,2,119,0,"Object"],[44,8,119,0],[44,9,119,0,"keys"],[44,13,119,0],[44,14,119,0,"_LinkingTypes"],[44,27,119,0],[44,29,119,0,"forEach"],[44,36,119,0],[44,47,119,0,"k"],[44,48,119,0],[45,4,119,0],[45,8,119,0,"k"],[45,9,119,0],[45,28,119,0,"Object"],[45,34,119,0],[45,35,119,0,"prototype"],[45,44,119,0],[45,45,119,0,"hasOwnProperty"],[45,59,119,0],[45,60,119,0,"call"],[45,64,119,0],[45,65,119,0,"exports"],[45,72,119,0],[45,74,119,0,"k"],[45,75,119,0],[46,6,119,0,"Object"],[46,12,119,0],[46,13,119,0,"defineProperty"],[46,27,119,0],[46,28,119,0,"exports"],[46,35,119,0],[46,37,119,0,"k"],[46,38,119,0],[47,8,119,0,"enumerable"],[47,18,119,0],[48,8,119,0,"get"],[48,11,119,0],[48,22,119,0,"get"],[48,23,119,0],[49,10,119,0],[49,17,119,0,"_LinkingTypes"],[49,30,119,0],[49,31,119,0,"k"],[49,32,119,0],[50,8,119,0],[51,6,119,0],[52,4,119,0],[53,2,119,0],[54,2,120,0],[54,6,120,0,"_Schemes"],[54,14,120,0],[54,17,120,0,"require"],[54,24,120,0],[54,25,120,0,"_dependencyMap"],[54,39,120,0],[55,2,120,0,"Object"],[55,8,120,0],[55,9,120,0,"keys"],[55,13,120,0],[55,14,120,0,"_Schemes"],[55,22,120,0],[55,24,120,0,"forEach"],[55,31,120,0],[55,42,120,0,"k"],[55,43,120,0],[56,4,120,0],[56,8,120,0,"k"],[56,9,120,0],[56,28,120,0,"Object"],[56,34,120,0],[56,35,120,0,"prototype"],[56,44,120,0],[56,45,120,0,"hasOwnProperty"],[56,59,120,0],[56,60,120,0,"call"],[56,64,120,0],[56,65,120,0,"exports"],[56,72,120,0],[56,74,120,0,"k"],[56,75,120,0],[57,6,120,0,"Object"],[57,12,120,0],[57,13,120,0,"defineProperty"],[57,27,120,0],[57,28,120,0,"exports"],[57,35,120,0],[57,37,120,0,"k"],[57,38,120,0],[58,8,120,0,"enumerable"],[58,18,120,0],[59,8,120,0,"get"],[59,11,120,0],[59,22,120,0,"get"],[59,23,120,0],[60,10,120,0],[60,17,120,0,"_Schemes"],[60,25,120,0],[60,26,120,0,"k"],[60,27,120,0],[61,8,120,0],[62,6,120,0],[63,4,120,0],[64,2,120,0],[65,2,7,0],[66,2,8,0],[67,0,9,0],[68,0,10,0],[69,0,11,0],[70,0,12,0],[71,0,13,0],[72,0,14,0],[73,0,15,0],[74,0,16,0],[75,2,17,7],[75,11,17,16,"addEventListener"],[75,27,17,32,"addEventListener"],[75,28,17,33,"type"],[75,32,17,37],[75,34,17,39,"handler"],[75,41,17,46],[75,43,17,48],[76,4,18,4],[76,11,18,11,"NativeLinking"],[76,24,18,24],[76,25,18,24,"default"],[76,32,18,24],[76,33,18,25,"addEventListener"],[76,49,18,41],[76,50,18,42,"type"],[76,54,18,46],[76,56,18,48,"handler"],[76,63,18,55],[76,64,18,56],[77,2,19,0],[78,2,20,0],[79,2,21,0],[80,0,22,0],[81,0,23,0],[82,0,24,0],[83,0,25,0],[84,0,26,0],[85,0,27,0],[86,2,21,0],[86,11,28,22,"parseInitialURLAsync"],[86,31,28,42,"parseInitialURLAsync"],[86,32,28,42],[87,4,28,42],[87,11,28,42,"_parseInitialURLAsync"],[87,32,28,42],[87,33,28,42,"apply"],[87,38,28,42],[87,45,28,42,"arguments"],[87,54,28,42],[88,2,28,42],[88,4,40,0],[89,2,41,0],[90,0,42,0],[91,0,43,0],[92,0,44,0],[93,0,45,0],[94,0,46,0],[95,2,41,0],[95,11,41,0,"_parseInitialURLAsync"],[95,33,41,0],[96,4,41,0,"_parseInitialURLAsync"],[96,25,41,0],[96,32,41,0,"_asyncToGenerator"],[96,49,41,0],[96,50,41,0,"default"],[96,57,41,0],[96,59,28,7],[96,72,28,45],[97,6,29,4],[97,10,29,10,"initialUrl"],[97,20,29,20],[97,29,29,29,"NativeLinking"],[97,42,29,42],[97,43,29,42,"default"],[97,50,29,42],[97,51,29,43,"getInitialURL"],[97,64,29,56],[97,65,29,57],[97,66,29,58],[98,6,30,4],[98,10,30,8],[98,11,30,9,"initialUrl"],[98,21,30,19],[98,23,30,21],[99,8,31,8],[99,15,31,15],[100,10,32,12,"scheme"],[100,16,32,18],[100,18,32,20],[100,22,32,24],[101,10,33,12,"hostname"],[101,18,33,20],[101,20,33,22],[101,24,33,26],[102,10,34,12,"path"],[102,14,34,16],[102,16,34,18],[102,20,34,22],[103,10,35,12,"queryParams"],[103,21,35,23],[103,23,35,25],[104,8,36,8],[104,9,36,9],[105,6,37,4],[106,6,38,4],[106,13,38,11],[106,17,38,11,"parse"],[106,27,38,16],[106,28,38,16,"parse"],[106,33,38,16],[106,35,38,17,"initialUrl"],[106,45,38,27],[106,46,38,28],[107,4,39,0],[107,5,39,1],[108,4,39,1],[108,11,39,1,"_parseInitialURLAsync"],[108,32,39,1],[108,33,39,1,"apply"],[108,38,39,1],[108,45,39,1,"arguments"],[108,54,39,1],[109,2,39,1],[110,2,39,1],[110,11,47,22,"sendIntent"],[110,21,47,32,"sendIntent"],[110,22,47,32,"_x"],[110,24,47,32],[110,26,47,32,"_x2"],[110,29,47,32],[111,4,47,32],[111,11,47,32,"_sendIntent"],[111,22,47,32],[111,23,47,32,"apply"],[111,28,47,32],[111,35,47,32,"arguments"],[111,44,47,32],[112,2,47,32],[112,4,53,0],[113,2,54,0],[114,0,55,0],[115,0,56,0],[116,2,54,0],[116,11,54,0,"_sendIntent"],[116,23,54,0],[117,4,54,0,"_sendIntent"],[117,15,54,0],[117,22,54,0,"_asyncToGenerator"],[117,39,54,0],[117,40,54,0,"default"],[117,47,54,0],[117,49,47,7],[117,60,47,33,"action"],[117,66,47,39],[117,68,47,41,"extras"],[117,74,47,47],[117,76,47,49],[118,6,48,4],[118,10,48,8,"Platform"],[118,22,48,16],[118,23,48,16,"Platform"],[118,31,48,16],[118,32,48,17,"OS"],[118,34,48,19],[118,39,48,24],[118,48,48,33],[118,50,48,35],[119,8,49,8],[119,21,49,21,"NativeLinking"],[119,34,49,34],[119,35,49,34,"default"],[119,42,49,34],[119,43,49,35,"sendIntent"],[119,53,49,45],[119,54,49,46,"action"],[119,60,49,52],[119,62,49,54,"extras"],[119,68,49,60],[119,69,49,61],[120,6,50,4],[121,6,51,4],[121,12,51,10],[121,16,51,14,"UnavailabilityError"],[121,32,51,33],[121,33,51,33,"UnavailabilityError"],[121,52,51,33],[121,53,51,34],[121,62,51,43],[121,64,51,45],[121,76,51,57],[121,77,51,58],[122,4,52,0],[122,5,52,1],[123,4,52,1],[123,11,52,1,"_sendIntent"],[123,22,52,1],[123,23,52,1,"apply"],[123,28,52,1],[123,35,52,1,"arguments"],[123,44,52,1],[124,2,52,1],[125,2,52,1],[125,11,57,22,"openSettings"],[125,23,57,34,"openSettings"],[125,24,57,34],[126,4,57,34],[126,11,57,34,"_openSettings"],[126,24,57,34],[126,25,57,34,"apply"],[126,30,57,34],[126,37,57,34,"arguments"],[126,46,57,34],[127,2,57,34],[127,4,66,0],[128,2,67,0],[129,0,68,0],[130,0,69,0],[131,0,70,0],[132,2,67,0],[132,11,67,0,"_openSettings"],[132,25,67,0],[133,4,67,0,"_openSettings"],[133,17,67,0],[133,24,67,0,"_asyncToGenerator"],[133,41,67,0],[133,42,67,0,"default"],[133,49,67,0],[133,51,57,7],[133,64,57,37],[134,6,58,4],[134,10,58,8,"Platform"],[134,22,58,16],[134,23,58,16,"Platform"],[134,31,58,16],[134,32,58,17,"OS"],[134,34,58,19],[134,39,58,24],[134,44,58,29],[134,46,58,31],[135,8,59,8],[135,14,59,14],[135,18,59,18,"UnavailabilityError"],[135,34,59,37],[135,35,59,37,"UnavailabilityError"],[135,54,59,37],[135,55,59,38],[135,64,59,47],[135,66,59,49],[135,80,59,63],[135,81,59,64],[136,6,60,4],[137,6,61,4],[137,10,61,8,"NativeLinking"],[137,23,61,21],[137,24,61,21,"default"],[137,31,61,21],[137,32,61,22,"openSettings"],[137,44,61,34],[137,46,61,36],[138,8,62,8],[138,21,62,21,"NativeLinking"],[138,34,62,34],[138,35,62,34,"default"],[138,42,62,34],[138,43,62,35,"openSettings"],[138,55,62,47],[138,56,62,48],[138,57,62,49],[139,6,63,4],[140,6,64,4],[140,12,64,10,"openURL"],[140,19,64,17],[140,20,64,18],[140,35,64,33],[140,36,64,34],[141,4,65,0],[141,5,65,1],[142,4,65,1],[142,11,65,1,"_openSettings"],[142,24,65,1],[142,25,65,1,"apply"],[142,30,65,1],[142,37,65,1,"arguments"],[142,46,65,1],[143,2,65,1],[144,2,65,1],[144,11,71,22,"getInitialURL"],[144,24,71,35,"getInitialURL"],[144,25,71,35],[145,4,71,35],[145,11,71,35,"_getInitialURL"],[145,25,71,35],[145,26,71,35,"apply"],[145,31,71,35],[145,38,71,35,"arguments"],[145,47,71,35],[146,2,71,35],[146,4,74,0],[147,2,75,0],[148,0,76,0],[149,0,77,0],[150,0,78,0],[151,0,79,0],[152,0,80,0],[153,0,81,0],[154,0,82,0],[155,2,75,0],[155,11,75,0,"_getInitialURL"],[155,26,75,0],[156,4,75,0,"_getInitialURL"],[156,18,75,0],[156,25,75,0,"_asyncToGenerator"],[156,42,75,0],[156,43,75,0,"default"],[156,50,75,0],[156,52,71,7],[156,65,71,38],[157,6,72,4],[157,13,72,11],[157,20,72,18,"NativeLinking"],[157,33,72,31],[157,34,72,31,"default"],[157,41,72,31],[157,42,72,32,"getInitialURL"],[157,55,72,45],[157,56,72,46],[157,57,72,47],[157,62,72,52],[157,66,72,56],[158,4,73,0],[158,5,73,1],[159,4,73,1],[159,11,73,1,"_getInitialURL"],[159,25,73,1],[159,26,73,1,"apply"],[159,31,73,1],[159,38,73,1,"arguments"],[159,47,73,1],[160,2,73,1],[161,2,73,1],[161,11,83,22,"openURL"],[161,18,83,29,"openURL"],[161,19,83,29,"_x3"],[161,22,83,29],[162,4,83,29],[162,11,83,29,"_openURL"],[162,19,83,29],[162,20,83,29,"apply"],[162,25,83,29],[162,32,83,29,"arguments"],[162,41,83,29],[163,2,83,29],[163,4,87,0],[164,2,88,0],[165,0,89,0],[166,0,90,0],[167,0,91,0],[168,0,92,0],[169,0,93,0],[170,0,94,0],[171,0,95,0],[172,0,96,0],[173,0,97,0],[174,2,88,0],[174,11,88,0,"_openURL"],[174,20,88,0],[175,4,88,0,"_openURL"],[175,12,88,0],[175,19,88,0,"_asyncToGenerator"],[175,36,88,0],[175,37,88,0,"default"],[175,44,88,0],[175,46,83,7],[175,57,83,30,"url"],[175,60,83,33],[175,62,83,35],[176,6,84,4],[176,10,84,4,"validateURL"],[176,22,84,15],[176,23,84,15,"validateURL"],[176,34,84,15],[176,36,84,16,"url"],[176,39,84,19],[176,40,84,20],[177,6,85,4],[177,19,85,17,"NativeLinking"],[177,32,85,30],[177,33,85,30,"default"],[177,40,85,30],[177,41,85,31,"openURL"],[177,48,85,38],[177,49,85,39,"url"],[177,52,85,42],[177,53,85,43],[178,4,86,0],[178,5,86,1],[179,4,86,1],[179,11,86,1,"_openURL"],[179,19,86,1],[179,20,86,1,"apply"],[179,25,86,1],[179,32,86,1,"arguments"],[179,41,86,1],[180,2,86,1],[181,2,86,1],[181,11,98,22,"canOpenURL"],[181,21,98,32,"canOpenURL"],[181,22,98,32,"_x4"],[181,25,98,32],[182,4,98,32],[182,11,98,32,"_canOpenURL"],[182,22,98,32],[182,23,98,32,"apply"],[182,28,98,32],[182,35,98,32,"arguments"],[182,44,98,32],[183,2,98,32],[183,4,102,0],[184,2,103,0],[185,0,104,0],[186,0,105,0],[187,0,106,0],[188,2,103,0],[188,11,103,0,"_canOpenURL"],[188,23,103,0],[189,4,103,0,"_canOpenURL"],[189,15,103,0],[189,22,103,0,"_asyncToGenerator"],[189,39,103,0],[189,40,103,0,"default"],[189,47,103,0],[189,49,98,7],[189,60,98,33,"url"],[189,63,98,36],[189,65,98,38],[190,6,99,4],[190,10,99,4,"validateURL"],[190,22,99,15],[190,23,99,15,"validateURL"],[190,34,99,15],[190,36,99,16,"url"],[190,39,99,19],[190,40,99,20],[191,6,100,4],[191,19,100,17,"NativeLinking"],[191,32,100,30],[191,33,100,30,"default"],[191,40,100,30],[191,41,100,31,"canOpenURL"],[191,51,100,41],[191,52,100,42,"url"],[191,55,100,45],[191,56,100,46],[192,4,101,0],[192,5,101,1],[193,4,101,1],[193,11,101,1,"_canOpenURL"],[193,22,101,1],[193,23,101,1,"apply"],[193,28,101,1],[193,35,101,1,"arguments"],[193,44,101,1],[194,2,101,1],[195,2,107,7],[195,11,107,16,"useURL"],[195,17,107,22,"useURL"],[195,18,107,22],[195,20,107,25],[196,4,108,4],[196,8,108,4,"_useState"],[196,17,108,4],[196,20,108,27],[196,24,108,27,"useState"],[196,30,108,35],[196,31,108,35,"useState"],[196,39,108,35],[196,41,108,36],[196,45,108,40],[196,46,108,41],[197,6,108,41,"_useState2"],[197,16,108,41],[197,23,108,41,"_slicedToArray"],[197,37,108,41],[197,38,108,41,"default"],[197,45,108,41],[197,47,108,41,"_useState"],[197,56,108,41],[198,6,108,11,"url"],[198,9,108,14],[198,12,108,14,"_useState2"],[198,22,108,14],[199,6,108,16,"setLink"],[199,13,108,23],[199,16,108,23,"_useState2"],[199,26,108,23],[200,4,109,4],[200,13,109,13,"onChange"],[200,21,109,21,"onChange"],[200,22,109,22,"event"],[200,27,109,27],[200,29,109,29],[201,6,110,8,"setLink"],[201,13,110,15],[201,14,110,16,"event"],[201,19,110,21],[201,20,110,22,"url"],[201,23,110,25],[201,24,110,26],[202,4,111,4],[203,4,112,4],[203,8,112,4,"useEffect"],[203,14,112,13],[203,15,112,13,"useEffect"],[203,24,112,13],[203,26,112,14],[203,32,112,20],[204,6,113,8,"getInitialURL"],[204,19,113,21],[204,20,113,22],[204,21,113,23],[204,22,113,24,"then"],[204,26,113,28],[204,27,113,30,"url"],[204,30,113,33],[204,34,113,38,"setLink"],[204,41,113,45],[204,42,113,46,"url"],[204,45,113,49],[204,46,113,50],[204,47,113,51],[205,6,114,8],[205,10,114,14,"subscription"],[205,22,114,26],[205,25,114,29,"addEventListener"],[205,41,114,45],[205,42,114,46],[205,47,114,51],[205,49,114,53,"onChange"],[205,57,114,61],[205,58,114,62],[206,6,115,8],[206,13,115,15],[206,19,115,21,"subscription"],[206,31,115,33],[206,32,115,34,"remove"],[206,38,115,40],[206,39,115,41],[206,40,115,42],[207,4,116,4],[207,5,116,5],[207,7,116,7],[207,9,116,9],[207,10,116,10],[208,4,117,4],[208,11,117,11,"url"],[208,14,117,14],[209,2,118,0],[210,0,118,1],[210,3]],"functionMap":{"names":["<global>","addEventListener","parseInitialURLAsync","sendIntent","openSettings","getInitialURL","openURL","canOpenURL","useURL","onChange","useEffect$argument_0","getInitialURL.then$argument_0","<anonymous>"],"mappings":"AAA;OCgB;CDE;OES;CFW;OGQ;CHK;OIK;CJQ;OKM;CLE;OMU;CNG;OOY;CPG;OQM;ICE;KDE;cEC;6BCC,qBD;eEE,2BF;KFC;CRE"},"hasCjsExports":false},"type":"js/module"}]}