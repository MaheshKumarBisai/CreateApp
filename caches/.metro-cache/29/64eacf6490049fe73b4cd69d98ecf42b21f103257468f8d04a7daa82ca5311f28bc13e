{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./Updates","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":45},"end":{"line":2,"column":62,"index":107}}],"key":"dHmtn1izBCeSkZ/2BgK9eSyi8a8=","exportNames":["*"],"imports":1}},{"name":"./UpdatesEmitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":108},"end":{"line":3,"column":65,"index":173}}],"key":"/fHEDLJ3F6iAN2DeLsAHAg7O1AA=","exportNames":["*"],"imports":1}},{"name":"./UseUpdatesUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":174},"end":{"line":4,"column":109,"index":283}}],"key":"JTRi8Q+i4Jils43kbA11mDJ+09Q=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useUpdates\", {\n    enumerable: true,\n    get: function () {\n      return useUpdates;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _Updates = require(_dependencyMap[2], \"./Updates\");\n  var _UpdatesEmitter = require(_dependencyMap[3], \"./UpdatesEmitter\");\n  var _UseUpdatesUtils = require(_dependencyMap[4], \"./UseUpdatesUtils\");\n  /**\n   * Hook that obtains information on available updates and on the currently running update.\n   *\n   * @return the structures with information on currently running and available updates.\n   *\n   * @example\n   * ```tsx UpdatesDemo.tsx\n   * import { StatusBar } from 'expo-status-bar';\n   * import * as Updates from 'expo-updates';\n   * import { useEffect } from 'react';\n   * import { Button, Text, View } from 'react-native';\n   *\n   * export default function UpdatesDemo() {\n   *   const {\n   *     currentlyRunning,\n   *     isUpdateAvailable,\n   *     isUpdatePending\n   *   } = Updates.useUpdates();\n   *\n   *   useEffect(() => {\n   *     if (isUpdatePending) {\n   *       // Update has successfully downloaded; apply it now\n   *       Updates.reloadAsync();\n   *     }\n   *   }, [isUpdatePending]);\n   *\n   *   // If true, we show the button to download and run the update\n   *   const showDownloadButton = isUpdateAvailable;\n   *\n   *   // Show whether or not we are running embedded code or an update\n   *   const runTypeMessage = currentlyRunning.isEmbeddedLaunch\n   *     ? 'This app is running from built-in code'\n   *     : 'This app is running an update';\n   *\n   *   return (\n   *     <View style={styles.container}>\n   *       <Text style={styles.headerText}>Updates Demo</Text>\n   *       <Text>{runTypeMessage}</Text>\n   *       <Button onPress={() => Updates.checkForUpdateAsync()} title=\"Check manually for updates\" />\n   *       {showDownloadButton ? (\n   *         <Button onPress={() => Updates.fetchUpdateAsync()} title=\"Download and run update\" />\n   *       ) : null}\n   *       <StatusBar style=\"auto\" />\n   *     </View>\n   *   );\n   * }\n   * ```\n   */\n  var useUpdates = () => {\n    var _useState = (0, _react.useState)(_UseUpdatesUtils.defaultUseUpdatesState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      updatesState = _useState2[0],\n      setUpdatesState = _useState2[1];\n    // Change the state based on native state machine context changes\n    (0, _react.useEffect)(() => {\n      (0, _Updates.getNativeStateMachineContextAsync)().then(context => {\n        setUpdatesState(updatesState => (0, _UseUpdatesUtils.reduceUpdatesStateFromContext)(updatesState, context));\n      }).catch(error => {\n        // Native call can fail (e.g. if in development mode), so catch the promise rejection and surface the error\n        setUpdatesState(updatesState => ({\n          ...updatesState,\n          initializationError: error\n        }));\n      });\n      var subscription = (0, _UpdatesEmitter.addUpdatesStateChangeListener)(event => {\n        setUpdatesState(updatesState => (0, _UseUpdatesUtils.reduceUpdatesStateFromContext)(updatesState, event.context));\n      });\n      return () => subscription.remove();\n    }, []);\n    // Return the updates info and the user facing functions\n    return {\n      currentlyRunning: _UseUpdatesUtils.currentlyRunning,\n      ...updatesState\n    };\n  };\n});","lineCount":99,"map":[[12,2,53,0,"Object"],[12,8,53,0],[12,9,53,0,"defineProperty"],[12,23,53,0],[12,24,53,0,"exports"],[12,31,53,0],[13,4,53,0,"enumerable"],[13,14,53,0],[14,4,53,0,"get"],[14,7,53,0],[14,18,53,0,"get"],[14,19,53,0],[15,6,53,0],[15,13,53,0,"useUpdates"],[15,23,53,0],[16,4,53,0],[17,2,53,0],[18,2,75,2],[18,6,75,2,"_babelRuntimeHelpersSlicedToArray"],[18,39,75,2],[18,42,75,2,"require"],[18,49,75,2],[18,50,75,2,"_dependencyMap"],[18,64,75,2],[19,2,75,2],[19,6,75,2,"_slicedToArray"],[19,20,75,2],[19,23,75,2,"_interopDefault"],[19,38,75,2],[19,39,75,2,"_babelRuntimeHelpersSlicedToArray"],[19,72,75,2],[20,2,1,0],[20,6,1,0,"_react"],[20,12,1,0],[20,15,1,0,"require"],[20,22,1,0],[20,23,1,0,"_dependencyMap"],[20,37,1,0],[21,2,2,0],[21,6,2,0,"_Updates"],[21,14,2,0],[21,17,2,0,"require"],[21,24,2,0],[21,25,2,0,"_dependencyMap"],[21,39,2,0],[22,2,3,0],[22,6,3,0,"_UpdatesEmitter"],[22,21,3,0],[22,24,3,0,"require"],[22,31,3,0],[22,32,3,0,"_dependencyMap"],[22,46,3,0],[23,2,4,0],[23,6,4,0,"_UseUpdatesUtils"],[23,22,4,0],[23,25,4,0,"require"],[23,32,4,0],[23,33,4,0,"_dependencyMap"],[23,47,4,0],[24,2,5,0],[25,0,6,0],[26,0,7,0],[27,0,8,0],[28,0,9,0],[29,0,10,0],[30,0,11,0],[31,0,12,0],[32,0,13,0],[33,0,14,0],[34,0,15,0],[35,0,16,0],[36,0,17,0],[37,0,18,0],[38,0,19,0],[39,0,20,0],[40,0,21,0],[41,0,22,0],[42,0,23,0],[43,0,24,0],[44,0,25,0],[45,0,26,0],[46,0,27,0],[47,0,28,0],[48,0,29,0],[49,0,30,0],[50,0,31,0],[51,0,32,0],[52,0,33,0],[53,0,34,0],[54,0,35,0],[55,0,36,0],[56,0,37,0],[57,0,38,0],[58,0,39,0],[59,0,40,0],[60,0,41,0],[61,0,42,0],[62,0,43,0],[63,0,44,0],[64,0,45,0],[65,0,46,0],[66,0,47,0],[67,0,48,0],[68,0,49,0],[69,0,50,0],[70,0,51,0],[71,0,52,0],[72,2,53,7],[72,6,53,13,"useUpdates"],[72,16,53,23],[72,19,53,26,"useUpdates"],[72,20,53,26],[72,25,53,32],[73,4,54,4],[73,8,54,4,"_useState"],[73,17,54,4],[73,20,54,44],[73,24,54,44,"useState"],[73,30,54,52],[73,31,54,52,"useState"],[73,39,54,52],[73,41,54,53,"defaultUseUpdatesState"],[73,57,54,75],[73,58,54,75,"defaultUseUpdatesState"],[73,80,54,75],[73,81,54,76],[74,6,54,76,"_useState2"],[74,16,54,76],[74,23,54,76,"_slicedToArray"],[74,37,54,76],[74,38,54,76,"default"],[74,45,54,76],[74,47,54,76,"_useState"],[74,56,54,76],[75,6,54,11,"updatesState"],[75,18,54,23],[75,21,54,23,"_useState2"],[75,31,54,23],[76,6,54,25,"setUpdatesState"],[76,21,54,40],[76,24,54,40,"_useState2"],[76,34,54,40],[77,4,55,4],[78,4,56,4],[78,8,56,4,"useEffect"],[78,14,56,13],[78,15,56,13,"useEffect"],[78,24,56,13],[78,26,56,14],[78,32,56,20],[79,6,57,8],[79,10,57,8,"getNativeStateMachineContextAsync"],[79,18,57,41],[79,19,57,41,"getNativeStateMachineContextAsync"],[79,52,57,41],[79,54,57,42],[79,55,57,43],[79,56,58,13,"then"],[79,60,58,17],[79,61,58,19,"context"],[79,68,58,26],[79,72,58,31],[80,8,59,12,"setUpdatesState"],[80,23,59,27],[80,24,59,29,"updatesState"],[80,36,59,41],[80,40,59,46],[80,44,59,46,"reduceUpdatesStateFromContext"],[80,60,59,75],[80,61,59,75,"reduceUpdatesStateFromContext"],[80,90,59,75],[80,92,59,76,"updatesState"],[80,104,59,88],[80,106,59,90,"context"],[80,113,59,97],[80,114,59,98],[80,115,59,99],[81,6,60,8],[81,7,60,9],[81,8,60,10],[81,9,61,13,"catch"],[81,14,61,18],[81,15,61,20,"error"],[81,20,61,25],[81,24,61,30],[82,8,62,12],[83,8,63,12,"setUpdatesState"],[83,23,63,27],[83,24,63,29,"updatesState"],[83,36,63,41],[83,41,63,47],[84,10,63,49],[84,13,63,52,"updatesState"],[84,25,63,64],[85,10,63,66,"initializationError"],[85,29,63,85],[85,31,63,87,"error"],[86,8,63,93],[86,9,63,94],[86,10,63,95],[86,11,63,96],[87,6,64,8],[87,7,64,9],[87,8,64,10],[88,6,65,8],[88,10,65,14,"subscription"],[88,22,65,26],[88,25,65,29],[88,29,65,29,"addUpdatesStateChangeListener"],[88,44,65,58],[88,45,65,58,"addUpdatesStateChangeListener"],[88,74,65,58],[88,76,65,60,"event"],[88,81,65,65],[88,85,65,70],[89,8,66,12,"setUpdatesState"],[89,23,66,27],[89,24,66,29,"updatesState"],[89,36,66,41],[89,40,66,46],[89,44,66,46,"reduceUpdatesStateFromContext"],[89,60,66,75],[89,61,66,75,"reduceUpdatesStateFromContext"],[89,90,66,75],[89,92,66,76,"updatesState"],[89,104,66,88],[89,106,66,90,"event"],[89,111,66,95],[89,112,66,96,"context"],[89,119,66,103],[89,120,66,104],[89,121,66,105],[90,6,67,8],[90,7,67,9],[90,8,67,10],[91,6,68,8],[91,13,68,15],[91,19,68,21,"subscription"],[91,31,68,33],[91,32,68,34,"remove"],[91,38,68,40],[91,39,68,41],[91,40,68,42],[92,4,69,4],[92,5,69,5],[92,7,69,7],[92,9,69,9],[92,10,69,10],[93,4,70,4],[94,4,71,4],[94,11,71,11],[95,6,72,8,"currentlyRunning"],[95,22,72,24],[95,24,72,8,"currentlyRunning"],[95,40,72,24],[95,41,72,24,"currentlyRunning"],[95,57,72,24],[96,6,73,8],[96,9,73,11,"updatesState"],[97,4,74,4],[97,5,74,5],[98,2,75,0],[98,3,75,1],[99,0,75,2],[99,3]],"functionMap":{"names":["<global>","useUpdates","useEffect$argument_0","getNativeStateMachineContextAsync.then$argument_0","setUpdatesState$argument_0","getNativeStateMachineContextAsync.then._catch$argument_0","addUpdatesStateChangeListener$argument_0","<anonymous>"],"mappings":"AAA;0BCoD;cCG;kBCE;4BCC,sED;SDC;mBGC;4BDE,mEC;SHC;2DIC;4BFC,4EE;SJC;eKC,2BL;KDC;CDM"},"hasCjsExports":false},"type":"js/module"}]}