{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./useNavigation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":33},"end":{"line":3,"column":44,"index":77}}],"key":"6L4SFVR2tVRyIVbAZv8N2RYC398=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return useFocusEffect;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _useNavigation = require(_dependencyMap[1], \"./useNavigation\");\n  var useNavigation = _interopDefault(_useNavigation);\n  /**\n   * Hook to run an effect in a focused screen, similar to `React.useEffect`.\n   * This can be used to perform side-effects such as fetching data or subscribing to events.\n   * The passed callback should be wrapped in `React.useCallback` to avoid running the effect too often.\n   *\n   * @param callback Memoized callback containing the effect, should optionally return a cleanup function.\n   */\n  function useFocusEffect(effect) {\n    var navigation = (0, useNavigation.default)();\n    if (arguments[1] !== undefined) {\n      var message = \"You passed a second argument to 'useFocusEffect', but it only accepts one argument. \" + \"If you want to pass a dependency array, you can use 'React.useCallback':\\n\\n\" + 'useFocusEffect(\\n' + '  React.useCallback(() => {\\n' + '    // Your code here\\n' + '  }, [depA, depB])\\n' + ');\\n\\n' + 'See usage guide: https://reactnavigation.org/docs/use-focus-effect';\n      console.error(message);\n    }\n    React.useEffect(() => {\n      var isFocused = false;\n      var cleanup;\n      var callback = () => {\n        var destroy = effect();\n        if (destroy === undefined || typeof destroy === 'function') {\n          return destroy;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          var _message = 'An effect function must not return anything besides a function, which is used for clean-up.';\n          if (destroy === null) {\n            _message += \" You returned 'null'. If your effect does not require clean-up, return 'undefined' (or nothing).\";\n          } else if (typeof destroy.then === 'function') {\n            _message += \"\\n\\nIt looks like you wrote 'useFocusEffect(async () => ...)' or returned a Promise. \" + 'Instead, write the async function inside your effect ' + 'and call it immediately:\\n\\n' + 'useFocusEffect(\\n' + '  React.useCallback(() => {\\n' + '    async function fetchData() {\\n' + '      // You can await here\\n' + '      const response = await MyAPI.getData(someId);\\n' + '      // ...\\n' + '    }\\n\\n' + '    fetchData();\\n' + '  }, [someId])\\n' + ');\\n\\n' + 'See usage guide: https://reactnavigation.org/docs/use-focus-effect';\n          } else {\n            _message += ` You returned '${JSON.stringify(destroy)}'.`;\n          }\n          console.error(_message);\n        }\n      };\n\n      // We need to run the effect on intial render/dep changes if the screen is focused\n      if (navigation.isFocused()) {\n        cleanup = callback();\n        isFocused = true;\n      }\n      var unsubscribeFocus = navigation.addListener('focus', () => {\n        // If callback was already called for focus, avoid calling it again\n        // The focus event may also fire on intial render, so we guard against runing the effect twice\n        if (isFocused) {\n          return;\n        }\n        if (cleanup !== undefined) {\n          cleanup();\n        }\n        cleanup = callback();\n        isFocused = true;\n      });\n      var unsubscribeBlur = navigation.addListener('blur', () => {\n        if (cleanup !== undefined) {\n          cleanup();\n        }\n        cleanup = undefined;\n        isFocused = false;\n      });\n      return () => {\n        if (cleanup !== undefined) {\n          cleanup();\n        }\n        unsubscribeFocus();\n        unsubscribeBlur();\n      };\n    }, [effect, navigation]);\n  }\n});","lineCount":104,"map":[[27,2,14,15,"Object"],[27,8,14,15],[27,9,14,15,"defineProperty"],[27,23,14,15],[27,24,14,15,"exports"],[27,31,14,15],[28,4,14,15,"enumerable"],[28,14,14,15],[29,4,14,15,"get"],[29,7,14,15],[29,18,14,15,"get"],[29,19,14,15],[30,6,14,15],[30,13,14,15,"useFocusEffect"],[30,27,14,15],[31,4,14,15],[32,2,14,15],[33,2,1,0],[33,6,1,0,"_react"],[33,12,1,0],[33,15,1,0,"require"],[33,22,1,0],[33,23,1,0,"_dependencyMap"],[33,37,1,0],[34,2,1,0],[34,6,1,0,"React"],[34,11,1,0],[34,14,1,0,"_interopNamespace"],[34,31,1,0],[34,32,1,0,"_react"],[34,38,1,0],[35,2,3,0],[35,6,3,0,"_useNavigation"],[35,20,3,0],[35,23,3,0,"require"],[35,30,3,0],[35,31,3,0,"_dependencyMap"],[35,45,3,0],[36,2,3,0],[36,6,3,0,"useNavigation"],[36,19,3,0],[36,22,3,0,"_interopDefault"],[36,37,3,0],[36,38,3,0,"_useNavigation"],[36,52,3,0],[37,2,7,0],[38,0,8,0],[39,0,9,0],[40,0,10,0],[41,0,11,0],[42,0,12,0],[43,0,13,0],[44,2,14,15],[44,11,14,24,"useFocusEffect"],[44,25,14,38,"useFocusEffect"],[44,26,14,39,"effect"],[44,32,14,61],[44,34,14,63],[45,4,15,2],[45,8,15,8,"navigation"],[45,18,15,18],[45,21,15,21],[45,25,15,21,"useNavigation"],[45,38,15,34],[45,39,15,34,"default"],[45,46,15,34],[45,48,15,35],[45,49,15,36],[46,4,17,2],[46,8,17,6,"arguments"],[46,17,17,15],[46,18,17,16],[46,19,17,17],[46,20,17,18],[46,25,17,23,"undefined"],[46,34,17,32],[46,36,17,34],[47,6,18,4],[47,10,18,10,"message"],[47,17,18,17],[47,20,19,6],[47,106,19,92],[47,109,20,6],[47,187,20,84],[47,190,21,6],[47,209,21,25],[47,212,22,6],[47,243,22,37],[47,246,23,6],[47,271,23,31],[47,274,24,6],[47,296,24,28],[47,299,25,6],[47,307,25,14],[47,310,26,6],[47,378,26,74],[48,6,28,4,"console"],[48,13,28,11],[48,14,28,12,"error"],[48,19,28,17],[48,20,28,18,"message"],[48,27,28,25],[48,28,28,26],[49,4,29,2],[50,4,31,2,"React"],[50,9,31,7],[50,10,31,8,"useEffect"],[50,19,31,17],[50,20,31,18],[50,26,31,24],[51,6,32,4],[51,10,32,8,"isFocused"],[51,19,32,17],[51,22,32,20],[51,27,32,25],[52,6,33,4],[52,10,33,8,"cleanup"],[52,17,33,48],[53,6,35,4],[53,10,35,10,"callback"],[53,18,35,18],[53,21,35,21,"callback"],[53,22,35,21],[53,27,35,27],[54,8,36,6],[54,12,36,12,"destroy"],[54,19,36,19],[54,22,36,22,"effect"],[54,28,36,28],[54,29,36,29],[54,30,36,30],[55,8,38,6],[55,12,38,10,"destroy"],[55,19,38,17],[55,24,38,22,"undefined"],[55,33,38,31],[55,37,38,35],[55,44,38,42,"destroy"],[55,51,38,49],[55,56,38,54],[55,66,38,64],[55,68,38,66],[56,10,39,8],[56,17,39,15,"destroy"],[56,24,39,22],[57,8,40,6],[58,8,42,6],[58,12,42,10,"process"],[58,19,42,17],[58,20,42,18,"env"],[58,23,42,21],[58,24,42,22,"NODE_ENV"],[58,32,42,30],[58,37,42,35],[58,49,42,47],[58,51,42,49],[59,10,43,8],[59,14,43,12,"message"],[59,22,43,19],[59,25,44,10],[59,118,44,103],[60,10,46,8],[60,14,46,12,"destroy"],[60,21,46,19],[60,26,46,24],[60,30,46,28],[60,32,46,30],[61,12,47,10,"message"],[61,20,47,17],[61,24,48,12],[61,122,48,110],[62,10,49,8],[62,11,49,9],[62,17,49,15],[62,21,49,19],[62,28,49,27,"destroy"],[62,35,49,34],[62,36,49,43,"then"],[62,40,49,47],[62,45,49,52],[62,55,49,62],[62,57,49,64],[63,12,50,10,"message"],[63,20,50,17],[63,24,51,12],[63,111,51,99],[63,114,52,12],[63,169,52,67],[63,172,53,12],[63,202,53,42],[63,205,54,12],[63,224,54,31],[63,227,55,12],[63,258,55,43],[63,261,56,12],[63,297,56,48],[63,300,57,12],[63,331,57,43],[63,334,58,12],[63,389,58,67],[63,392,59,12],[63,408,59,28],[63,411,60,12],[63,422,60,23],[63,425,61,12],[63,445,61,32],[63,448,62,12],[63,466,62,30],[63,469,63,12],[63,477,63,20],[63,480,64,12],[63,548,64,80],[64,10,65,8],[64,11,65,9],[64,17,65,15],[65,12,66,10,"message"],[65,20,66,17],[65,24,66,21],[65,42,66,39,"JSON"],[65,46,66,43],[65,47,66,44,"stringify"],[65,56,66,53],[65,57,66,54,"destroy"],[65,64,66,61],[65,65,66,62],[65,69,66,66],[66,10,67,8],[67,10,69,8,"console"],[67,17,69,15],[67,18,69,16,"error"],[67,23,69,21],[67,24,69,22,"message"],[67,32,69,29],[67,33,69,30],[68,8,70,6],[69,6,71,4],[69,7,71,5],[71,6,73,4],[72,6,74,4],[72,10,74,8,"navigation"],[72,20,74,18],[72,21,74,19,"isFocused"],[72,30,74,28],[72,31,74,29],[72,32,74,30],[72,34,74,32],[73,8,75,6,"cleanup"],[73,15,75,13],[73,18,75,16,"callback"],[73,26,75,24],[73,27,75,25],[73,28,75,26],[74,8,76,6,"isFocused"],[74,17,76,15],[74,20,76,18],[74,24,76,22],[75,6,77,4],[76,6,79,4],[76,10,79,10,"unsubscribeFocus"],[76,26,79,26],[76,29,79,29,"navigation"],[76,39,79,39],[76,40,79,40,"addListener"],[76,51,79,51],[76,52,79,52],[76,59,79,59],[76,61,79,61],[76,67,79,67],[77,8,80,6],[78,8,81,6],[79,8,82,6],[79,12,82,10,"isFocused"],[79,21,82,19],[79,23,82,21],[80,10,83,8],[81,8,84,6],[82,8,86,6],[82,12,86,10,"cleanup"],[82,19,86,17],[82,24,86,22,"undefined"],[82,33,86,31],[82,35,86,33],[83,10,87,8,"cleanup"],[83,17,87,15],[83,18,87,16],[83,19,87,17],[84,8,88,6],[85,8,90,6,"cleanup"],[85,15,90,13],[85,18,90,16,"callback"],[85,26,90,24],[85,27,90,25],[85,28,90,26],[86,8,91,6,"isFocused"],[86,17,91,15],[86,20,91,18],[86,24,91,22],[87,6,92,4],[87,7,92,5],[87,8,92,6],[88,6,94,4],[88,10,94,10,"unsubscribeBlur"],[88,25,94,25],[88,28,94,28,"navigation"],[88,38,94,38],[88,39,94,39,"addListener"],[88,50,94,50],[88,51,94,51],[88,57,94,57],[88,59,94,59],[88,65,94,65],[89,8,95,6],[89,12,95,10,"cleanup"],[89,19,95,17],[89,24,95,22,"undefined"],[89,33,95,31],[89,35,95,33],[90,10,96,8,"cleanup"],[90,17,96,15],[90,18,96,16],[90,19,96,17],[91,8,97,6],[92,8,99,6,"cleanup"],[92,15,99,13],[92,18,99,16,"undefined"],[92,27,99,25],[93,8,100,6,"isFocused"],[93,17,100,15],[93,20,100,18],[93,25,100,23],[94,6,101,4],[94,7,101,5],[94,8,101,6],[95,6,103,4],[95,13,103,11],[95,19,103,17],[96,8,104,6],[96,12,104,10,"cleanup"],[96,19,104,17],[96,24,104,22,"undefined"],[96,33,104,31],[96,35,104,33],[97,10,105,8,"cleanup"],[97,17,105,15],[97,18,105,16],[97,19,105,17],[98,8,106,6],[99,8,108,6,"unsubscribeFocus"],[99,24,108,22],[99,25,108,23],[99,26,108,24],[100,8,109,6,"unsubscribeBlur"],[100,23,109,21],[100,24,109,22],[100,25,109,23],[101,6,110,4],[101,7,110,5],[102,4,111,2],[102,5,111,3],[102,7,111,5],[102,8,111,6,"effect"],[102,14,111,12],[102,16,111,14,"navigation"],[102,26,111,24],[102,27,111,25],[102,28,111,26],[103,2,112,0],[104,0,112,1],[104,3]],"functionMap":{"names":["<global>","useFocusEffect","React.useEffect$argument_0","callback","navigation.addListener$argument_1","<anonymous>"],"mappings":"AAA;eCa;kBCiB;qBCI;KDoC;6DEQ;KFa;2DEE;KFO;WGE;KHO;GDC;CDC"},"hasCjsExports":false},"type":"js/module"}]}