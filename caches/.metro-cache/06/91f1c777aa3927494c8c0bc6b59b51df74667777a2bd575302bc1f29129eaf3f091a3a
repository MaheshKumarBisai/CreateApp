{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"isWorkletFunction\", {\n    enumerable: true,\n    get: function () {\n      return isWorkletFunction;\n    }\n  });\n  Object.defineProperty(exports, \"SensorType\", {\n    enumerable: true,\n    get: function () {\n      return SensorType;\n    }\n  });\n  Object.defineProperty(exports, \"IOSReferenceFrame\", {\n    enumerable: true,\n    get: function () {\n      return IOSReferenceFrame;\n    }\n  });\n  Object.defineProperty(exports, \"InterfaceOrientation\", {\n    enumerable: true,\n    get: function () {\n      return InterfaceOrientation;\n    }\n  });\n  Object.defineProperty(exports, \"KeyboardState\", {\n    enumerable: true,\n    get: function () {\n      return KeyboardState;\n    }\n  });\n  Object.defineProperty(exports, \"ReduceMotion\", {\n    enumerable: true,\n    get: function () {\n      return ReduceMotion;\n    }\n  });\n  var _worklet_11943784113106_init_data = {\n    code: \"function isWorkletFunction(value){return typeof value==='function'&&!!value.__workletHash;}\",\n    location: \"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-reanimated/src/reanimated2/commonTypes.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"isWorkletFunction\\\",\\\"value\\\",\\\"__workletHash\\\"],\\\"sources\\\":[\\\"/Users/mac/Downloads/create-anything/apps/mobile/node_modules/react-native-reanimated/src/reanimated2/commonTypes.ts\\\"],\\\"mappings\\\":\\\"AA6HO,SAAAA,iBAASA,CACdC,KAGA,CAAe,CAIf,MACE,OAAO,CAAAA,KAAK,GAAK,UAAU,EAC3B,CAAC,CAAEA,KAAK,CAAwCC,aAAa,CAEjE\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.10.1\"\n  };\n  /**\n   * A value that can be used both on the [JavaScript thread](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#javascript-thread) and the [UI thread](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#ui-thread).\n   *\n   * Shared values are defined using [useSharedValue](https://docs.swmansion.com/react-native-reanimated/docs/core/useSharedValue) hook. You access and modify shared values by their `.value` property.\n   */\n  // The below type is used for HostObjects returned by the JSI API that don't have\n  // any accessible fields or methods but can carry data that is accessed from the\n  // c++ side. We add a field to the type to make it possible for typescript to recognize\n  // which JSI methods accept those types as arguments and to be able to correctly type\n  // check other methods that may use them. However, this field is not actually defined\n  // nor should be used for anything else as assigning any data to those objects will\n  // throw an error.\n  // In case of objects with depth or arrays of objects or arrays of arrays etc.\n  // we add this utility type that makes it a SharaebleRef of the outermost type.\n  /**\n   * This function allows you to determine if a given function is a worklet. It only works\n   * with Reanimated Babel plugin enabled. Unless you are doing something with internals of\n   * Reanimated you shouldn't need to use this function.\n   *\n   * ### Note\n   * Do not call it before the worklet is declared, as it will always return false then. E.g.:\n   *\n   * ```ts\n   * isWorkletFunction(myWorklet); // Will always return false.\n   *\n   * function myWorklet() {\n   *   'worklet';\n   * };\n   * ```\n   *\n   * ### Maintainer note\n   * This function works well on the JS thread performance-wise, since the JIT can inline it.\n   * However, on other threads it will not get optimized and we will get a function call overhead.\n   * We want to change it in the future, but it's not feasible at the moment.\n   */\n  var isWorkletFunction = function () {\n    var _e = [new global.Error(), 1, -27];\n    var isWorkletFunction = function (value) {\n      // Since host objects always return true for `in` operator, we have to use dot notation to check if the property exists.\n      // See https://github.com/facebook/hermes/blob/340726ef8cf666a7cce75bc60b02fa56b3e54560/lib/VM/JSObject.cpp#L1276.\n      return typeof value === 'function' && !!value.__workletHash;\n    };\n    isWorkletFunction.__closure = {};\n    isWorkletFunction.__workletHash = 11943784113106;\n    isWorkletFunction.__initData = _worklet_11943784113106_init_data;\n    isWorkletFunction.__stackDetails = _e;\n    return isWorkletFunction;\n  }();\n  var SensorType = /*#__PURE__*/function (SensorType) {\n    SensorType[SensorType[\"ACCELEROMETER\"] = 1] = \"ACCELEROMETER\";\n    SensorType[SensorType[\"GYROSCOPE\"] = 2] = \"GYROSCOPE\";\n    SensorType[SensorType[\"GRAVITY\"] = 3] = \"GRAVITY\";\n    SensorType[SensorType[\"MAGNETIC_FIELD\"] = 4] = \"MAGNETIC_FIELD\";\n    SensorType[SensorType[\"ROTATION\"] = 5] = \"ROTATION\";\n    return SensorType;\n  }({});\n  var IOSReferenceFrame = /*#__PURE__*/function (IOSReferenceFrame) {\n    IOSReferenceFrame[IOSReferenceFrame[\"XArbitraryZVertical\"] = 0] = \"XArbitraryZVertical\";\n    IOSReferenceFrame[IOSReferenceFrame[\"XArbitraryCorrectedZVertical\"] = 1] = \"XArbitraryCorrectedZVertical\";\n    IOSReferenceFrame[IOSReferenceFrame[\"XMagneticNorthZVertical\"] = 2] = \"XMagneticNorthZVertical\";\n    IOSReferenceFrame[IOSReferenceFrame[\"XTrueNorthZVertical\"] = 3] = \"XTrueNorthZVertical\";\n    IOSReferenceFrame[IOSReferenceFrame[\"Auto\"] = 4] = \"Auto\";\n    return IOSReferenceFrame;\n  }({});\n  /**\n   * A function called upon animation completion. If the animation is cancelled, the callback will receive `false` as the argument; otherwise, it will receive `true`.\n   */\n  var InterfaceOrientation = /*#__PURE__*/function (InterfaceOrientation) {\n    InterfaceOrientation[InterfaceOrientation[\"ROTATION_0\"] = 0] = \"ROTATION_0\";\n    InterfaceOrientation[InterfaceOrientation[\"ROTATION_90\"] = 90] = \"ROTATION_90\";\n    InterfaceOrientation[InterfaceOrientation[\"ROTATION_180\"] = 180] = \"ROTATION_180\";\n    InterfaceOrientation[InterfaceOrientation[\"ROTATION_270\"] = 270] = \"ROTATION_270\";\n    return InterfaceOrientation;\n  }({});\n  var KeyboardState = /*#__PURE__*/function (KeyboardState) {\n    KeyboardState[KeyboardState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    KeyboardState[KeyboardState[\"OPENING\"] = 1] = \"OPENING\";\n    KeyboardState[KeyboardState[\"OPEN\"] = 2] = \"OPEN\";\n    KeyboardState[KeyboardState[\"CLOSING\"] = 3] = \"CLOSING\";\n    KeyboardState[KeyboardState[\"CLOSED\"] = 4] = \"CLOSED\";\n    return KeyboardState;\n  }({});\n  /**\n   * @param x - A number representing X coordinate relative to the parent component.\n   * @param y - A number representing Y coordinate relative to the parent component.\n   * @param width - A number representing the width of the component.\n   * @param height - A number representing the height of the component.\n   * @param pageX - A number representing X coordinate relative to the screen.\n   * @param pageY - A number representing Y coordinate relative to the screen.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/measure#returns\n   */\n  /**\n   * @param System - If the `Reduce motion` accessibility setting is enabled on the device, disable the animation. Otherwise, enable the animation.\n   * @param Always - Disable the animation.\n   * @param Never - Enable the animation.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/guides/accessibility\n   */\n  var ReduceMotion = /*#__PURE__*/function (ReduceMotion) {\n    ReduceMotion[\"System\"] = \"system\";\n    ReduceMotion[\"Always\"] = \"always\";\n    ReduceMotion[\"Never\"] = \"never\";\n    return ReduceMotion;\n  }({});\n});","lineCount":152,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,126,0,"Object"],[7,8,126,0],[7,9,126,0,"defineProperty"],[7,23,126,0],[7,24,126,0,"exports"],[7,31,126,0],[8,4,126,0,"enumerable"],[8,14,126,0],[9,4,126,0,"get"],[9,7,126,0],[9,18,126,0,"get"],[9,19,126,0],[10,6,126,0],[10,13,126,0,"isWorkletFunction"],[10,30,126,0],[11,4,126,0],[12,2,126,0],[13,2,196,0,"Object"],[13,8,196,0],[13,9,196,0,"defineProperty"],[13,23,196,0],[13,24,196,0,"exports"],[13,31,196,0],[14,4,196,0,"enumerable"],[14,14,196,0],[15,4,196,0,"get"],[15,7,196,0],[15,18,196,0,"get"],[15,19,196,0],[16,6,196,0],[16,13,196,0,"SensorType"],[16,23,196,0],[17,4,196,0],[18,2,196,0],[19,2,203,0,"Object"],[19,8,203,0],[19,9,203,0,"defineProperty"],[19,23,203,0],[19,24,203,0,"exports"],[19,31,203,0],[20,4,203,0,"enumerable"],[20,14,203,0],[21,4,203,0,"get"],[21,7,203,0],[21,18,203,0,"get"],[21,19,203,0],[22,6,203,0],[22,13,203,0,"IOSReferenceFrame"],[22,30,203,0],[23,4,203,0],[24,2,203,0],[25,2,252,0,"Object"],[25,8,252,0],[25,9,252,0,"defineProperty"],[25,23,252,0],[25,24,252,0,"exports"],[25,31,252,0],[26,4,252,0,"enumerable"],[26,14,252,0],[27,4,252,0,"get"],[27,7,252,0],[27,18,252,0,"get"],[27,19,252,0],[28,6,252,0],[28,13,252,0,"InterfaceOrientation"],[28,33,252,0],[29,4,252,0],[30,2,252,0],[31,2,263,0,"Object"],[31,8,263,0],[31,9,263,0,"defineProperty"],[31,23,263,0],[31,24,263,0,"exports"],[31,31,263,0],[32,4,263,0,"enumerable"],[32,14,263,0],[33,4,263,0,"get"],[33,7,263,0],[33,18,263,0,"get"],[33,19,263,0],[34,6,263,0],[34,13,263,0,"KeyboardState"],[34,26,263,0],[35,4,263,0],[36,2,263,0],[37,2,304,0,"Object"],[37,8,304,0],[37,9,304,0,"defineProperty"],[37,23,304,0],[37,24,304,0,"exports"],[37,31,304,0],[38,4,304,0,"enumerable"],[38,14,304,0],[39,4,304,0,"get"],[39,7,304,0],[39,18,304,0,"get"],[39,19,304,0],[40,6,304,0],[40,13,304,0,"ReduceMotion"],[40,25,304,0],[41,4,304,0],[42,2,304,0],[43,2,308,1],[43,6,308,1,"_worklet_11943784113106_init_data"],[43,39,308,1],[44,4,308,1,"code"],[44,8,308,1],[45,4,308,1,"location"],[45,12,308,1],[46,4,308,1,"sourceMap"],[46,13,308,1],[47,4,308,1,"version"],[47,11,308,1],[48,2,308,1],[49,2,11,0],[50,0,12,0],[51,0,13,0],[52,0,14,0],[53,0,15,0],[54,2,32,0],[55,2,33,0],[56,2,34,0],[57,2,35,0],[58,2,36,0],[59,2,37,0],[60,2,38,0],[61,2,43,0],[62,2,44,0],[63,2,105,0],[64,0,106,0],[65,0,107,0],[66,0,108,0],[67,0,109,0],[68,0,110,0],[69,0,111,0],[70,0,112,0],[71,0,113,0],[72,0,114,0],[73,0,115,0],[74,0,116,0],[75,0,117,0],[76,0,118,0],[77,0,119,0],[78,0,120,0],[79,0,121,0],[80,0,122,0],[81,0,123,0],[82,0,124,0],[83,0,125,0],[84,2,105,0],[84,6,126,16,"isWorkletFunction"],[84,23,126,33],[84,26,126,7],[85,4,126,7],[85,8,126,7,"_e"],[85,10,126,7],[85,18,126,7,"global"],[85,24,126,7],[85,25,126,7,"Error"],[85,30,126,7],[86,4,126,7],[86,8,126,7,"isWorkletFunction"],[86,25,126,7],[86,37,126,7,"isWorkletFunction"],[86,38,130,2,"value"],[86,43,130,16],[86,45,130,75],[87,6,132,2],[88,6,133,2],[89,6,134,2],[89,13,135,4],[89,20,135,11,"value"],[89,25,135,16],[89,30,135,21],[89,40,135,31],[89,44,136,4],[89,45,136,5],[89,46,136,7,"value"],[89,51,136,12],[89,52,136,52,"__workletHash"],[89,65,136,65],[90,4,138,0],[90,5,138,1],[91,4,138,1,"isWorkletFunction"],[91,21,138,1],[91,22,138,1,"__closure"],[91,31,138,1],[92,4,138,1,"isWorkletFunction"],[92,21,138,1],[92,22,138,1,"__workletHash"],[92,35,138,1],[93,4,138,1,"isWorkletFunction"],[93,21,138,1],[93,22,138,1,"__initData"],[93,32,138,1],[93,35,138,1,"_worklet_11943784113106_init_data"],[93,68,138,1],[94,4,138,1,"isWorkletFunction"],[94,21,138,1],[94,22,138,1,"__stackDetails"],[94,36,138,1],[94,39,138,1,"_e"],[94,41,138,1],[95,4,138,1],[95,11,138,1,"isWorkletFunction"],[95,28,138,1],[96,2,138,1],[96,3,126,7],[97,2,126,7],[97,6,196,12,"SensorType"],[97,16,196,22],[97,42,196,12,"SensorType"],[97,52,196,22],[98,4,196,12,"SensorType"],[98,14,196,22],[98,15,196,12,"SensorType"],[98,25,196,22],[99,4,196,12,"SensorType"],[99,14,196,22],[99,15,196,12,"SensorType"],[99,25,196,22],[100,4,196,12,"SensorType"],[100,14,196,22],[100,15,196,12,"SensorType"],[100,25,196,22],[101,4,196,12,"SensorType"],[101,14,196,22],[101,15,196,12,"SensorType"],[101,25,196,22],[102,4,196,12,"SensorType"],[102,14,196,22],[102,15,196,12,"SensorType"],[102,25,196,22],[103,4,196,22],[103,11,196,12,"SensorType"],[103,21,196,22],[104,2,196,22],[105,2,196,22],[105,6,203,12,"IOSReferenceFrame"],[105,23,203,29],[105,49,203,12,"IOSReferenceFrame"],[105,66,203,29],[106,4,203,12,"IOSReferenceFrame"],[106,21,203,29],[106,22,203,12,"IOSReferenceFrame"],[106,39,203,29],[107,4,203,12,"IOSReferenceFrame"],[107,21,203,29],[107,22,203,12,"IOSReferenceFrame"],[107,39,203,29],[108,4,203,12,"IOSReferenceFrame"],[108,21,203,29],[108,22,203,12,"IOSReferenceFrame"],[108,39,203,29],[109,4,203,12,"IOSReferenceFrame"],[109,21,203,29],[109,22,203,12,"IOSReferenceFrame"],[109,39,203,29],[110,4,203,12,"IOSReferenceFrame"],[110,21,203,29],[110,22,203,12,"IOSReferenceFrame"],[110,39,203,29],[111,4,203,29],[111,11,203,12,"IOSReferenceFrame"],[111,28,203,29],[112,2,203,29],[113,2,224,0],[114,0,225,0],[115,0,226,0],[116,2,224,0],[116,6,252,12,"InterfaceOrientation"],[116,26,252,32],[116,52,252,12,"InterfaceOrientation"],[116,72,252,32],[117,4,252,12,"InterfaceOrientation"],[117,24,252,32],[117,25,252,12,"InterfaceOrientation"],[117,45,252,32],[118,4,252,12,"InterfaceOrientation"],[118,24,252,32],[118,25,252,12,"InterfaceOrientation"],[118,45,252,32],[119,4,252,12,"InterfaceOrientation"],[119,24,252,32],[119,25,252,12,"InterfaceOrientation"],[119,45,252,32],[120,4,252,12,"InterfaceOrientation"],[120,24,252,32],[120,25,252,12,"InterfaceOrientation"],[120,45,252,32],[121,4,252,32],[121,11,252,12,"InterfaceOrientation"],[121,31,252,32],[122,2,252,32],[123,2,252,32],[123,6,263,12,"KeyboardState"],[123,19,263,25],[123,45,263,12,"KeyboardState"],[123,58,263,25],[124,4,263,12,"KeyboardState"],[124,17,263,25],[124,18,263,12,"KeyboardState"],[124,31,263,25],[125,4,263,12,"KeyboardState"],[125,17,263,25],[125,18,263,12,"KeyboardState"],[125,31,263,25],[126,4,263,12,"KeyboardState"],[126,17,263,25],[126,18,263,12,"KeyboardState"],[126,31,263,25],[127,4,263,12,"KeyboardState"],[127,17,263,25],[127,18,263,12,"KeyboardState"],[127,31,263,25],[128,4,263,12,"KeyboardState"],[128,17,263,25],[128,18,263,12,"KeyboardState"],[128,31,263,25],[129,4,263,25],[129,11,263,12,"KeyboardState"],[129,24,263,25],[130,2,263,25],[131,2,276,0],[132,0,277,0],[133,0,278,0],[134,0,279,0],[135,0,280,0],[136,0,281,0],[137,0,282,0],[138,0,283,0],[139,0,284,0],[140,2,298,0],[141,0,299,0],[142,0,300,0],[143,0,301,0],[144,0,302,0],[145,0,303,0],[146,2,298,0],[146,6,304,12,"ReduceMotion"],[146,18,304,24],[146,44,304,12,"ReduceMotion"],[146,56,304,24],[147,4,304,12,"ReduceMotion"],[147,16,304,24],[148,4,304,12,"ReduceMotion"],[148,16,304,24],[149,4,304,12,"ReduceMotion"],[149,16,304,24],[150,4,304,24],[150,11,304,12,"ReduceMotion"],[150,23,304,24],[151,2,304,24],[152,0,304,24],[152,3]],"functionMap":{"names":["<global>","isWorkletFunction"],"mappings":"AAA;OC6H;CDY"},"hasCjsExports":false},"type":"js/module"}]}