{"dependencies":[{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":474},"end":{"line":6,"column":76,"index":550}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":678},"end":{"line":11,"column":52,"index":730}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":731},"end":{"line":12,"column":35,"index":766}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":767},"end":{"line":13,"column":63,"index":830}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":831},"end":{"line":14,"column":55,"index":886}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"baseGestureHandlerProps\", {\n    enumerable: true,\n    get: function () {\n      return baseGestureHandlerProps;\n    }\n  });\n  Object.defineProperty(exports, \"baseGestureHandlerWithMonitorProps\", {\n    enumerable: true,\n    get: function () {\n      return baseGestureHandlerWithMonitorProps;\n    }\n  });\n  Object.defineProperty(exports, \"MouseButton\", {\n    enumerable: true,\n    get: function () {\n      return MouseButton;\n    }\n  });\n  exports.filterConfig = filterConfig;\n  exports.findNodeHandle = findNodeHandle;\n  exports.scheduleFlushOperations = scheduleFlushOperations;\n  var _reactNative = require(_dependencyMap[0], \"react-native\");\n  var _handlersRegistry = require(_dependencyMap[1], \"./handlersRegistry\");\n  var _utils = require(_dependencyMap[2], \"../utils\");\n  var _RNGestureHandlerModule = require(_dependencyMap[3], \"../RNGestureHandlerModule\");\n  var RNGestureHandlerModule = _interopDefault(_RNGestureHandlerModule);\n  var _ghQueueMicrotask = require(_dependencyMap[4], \"../ghQueueMicrotask\");\n  // Previous types exported gesture handlers as classes which creates an interface and variable, both named the same as class.\n  // Without those types, we'd introduce breaking change, forcing users to prefix every handler type specification with typeof\n  // e.g. React.createRef<TapGestureHandler> -> React.createRef<typeof TapGestureHandler>.\n  // See https://www.typescriptlang.org/docs/handbook/classes.html#constructor-functions for reference.\n\n  var commonProps = ['id', 'enabled', 'shouldCancelWhenOutside', 'hitSlop', 'cancelsTouchesInView', 'userSelect', 'activeCursor', 'mouseButton', 'enableContextMenu', 'touchAction'];\n  var componentInteractionProps = ['waitFor', 'simultaneousHandlers', 'blocksHandlers'];\n  var baseGestureHandlerProps = [...commonProps, ...componentInteractionProps, 'onBegan', 'onFailed', 'onCancelled', 'onActivated', 'onEnded', 'onGestureEvent', 'onHandlerStateChange'];\n  var baseGestureHandlerWithMonitorProps = [...commonProps, 'needsPointerData', 'manualActivation'];\n  var MouseButton = /*#__PURE__*/function (MouseButton) {\n    MouseButton[MouseButton[\"LEFT\"] = 1] = \"LEFT\";\n    MouseButton[MouseButton[\"RIGHT\"] = 2] = \"RIGHT\";\n    MouseButton[MouseButton[\"MIDDLE\"] = 4] = \"MIDDLE\";\n    MouseButton[MouseButton[\"BUTTON_4\"] = 8] = \"BUTTON_4\";\n    MouseButton[MouseButton[\"BUTTON_5\"] = 16] = \"BUTTON_5\";\n    MouseButton[MouseButton[\"ALL\"] = 31] = \"ALL\";\n    return MouseButton;\n  }({}); //TODO(TS) events in handlers\n  // Events payloads are types instead of interfaces due to TS limitation.\n  // See https://github.com/microsoft/TypeScript/issues/15300 for more info.\n  function isConfigParam(param, name) {\n    // param !== Object(param) returns false if `param` is a function\n    // or an object and returns true if `param` is null\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var filteredConfig = {\n      ...defaults\n    };\n    for (var key of validProps) {\n      var value = props[key];\n      if (isConfigParam(value, key)) {\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop' && typeof value !== 'object') {\n          value = {\n            top: value,\n            left: value,\n            bottom: value,\n            right: value\n          };\n        }\n        filteredConfig[key] = value;\n      }\n    }\n    return filteredConfig;\n  }\n  function transformIntoHandlerTags(handlerIDs) {\n    handlerIDs = (0, _utils.toArray)(handlerIDs);\n    if (_reactNative.Platform.OS === 'web') {\n      return handlerIDs.map(_ref => {\n        var current = _ref.current;\n        return current;\n      }).filter(handle => handle);\n    }\n    // converts handler string IDs into their numeric tags\n    return handlerIDs.map(handlerID => _handlersRegistry.handlerIDToTag[handlerID] || handlerID.current?.handlerTag || -1).filter(handlerTag => handlerTag > 0);\n  }\n  function findNodeHandle(node) {\n    if (_reactNative.Platform.OS === 'web') {\n      return node;\n    }\n    return (0, _reactNative.findNodeHandle)(node);\n  }\n  var flushOperationsScheduled = false;\n  function scheduleFlushOperations() {\n    if (!flushOperationsScheduled) {\n      flushOperationsScheduled = true;\n      (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n        RNGestureHandlerModule.default.flushOperations();\n        flushOperationsScheduled = false;\n      });\n    }\n  }\n});","lineCount":114,"map":[[12,2,36,0,"Object"],[12,8,36,0],[12,9,36,0,"defineProperty"],[12,23,36,0],[12,24,36,0,"exports"],[12,31,36,0],[13,4,36,0,"enumerable"],[13,14,36,0],[14,4,36,0,"get"],[14,7,36,0],[14,18,36,0,"get"],[14,19,36,0],[15,6,36,0],[15,13,36,0,"baseGestureHandlerProps"],[15,36,36,0],[16,4,36,0],[17,2,36,0],[18,2,48,0,"Object"],[18,8,48,0],[18,9,48,0,"defineProperty"],[18,23,48,0],[18,24,48,0,"exports"],[18,31,48,0],[19,4,48,0,"enumerable"],[19,14,48,0],[20,4,48,0,"get"],[20,7,48,0],[20,18,48,0,"get"],[20,19,48,0],[21,6,48,0],[21,13,48,0,"baseGestureHandlerWithMonitorProps"],[21,47,48,0],[22,4,48,0],[23,2,48,0],[24,2,116,0,"Object"],[24,8,116,0],[24,9,116,0,"defineProperty"],[24,23,116,0],[24,24,116,0,"exports"],[24,31,116,0],[25,4,116,0,"enumerable"],[25,14,116,0],[26,4,116,0,"get"],[26,7,116,0],[26,18,116,0,"get"],[26,19,116,0],[27,6,116,0],[27,13,116,0,"MouseButton"],[27,24,116,0],[28,4,116,0],[29,2,116,0],[30,2,227,0,"exports"],[30,9,227,0],[30,10,227,0,"filterConfig"],[30,22,227,0],[30,25,227,0,"filterConfig"],[30,37,227,0],[31,2,264,0,"exports"],[31,9,264,0],[31,10,264,0,"findNodeHandle"],[31,24,264,0],[31,27,264,0,"findNodeHandle"],[31,41,264,0],[32,2,275,0,"exports"],[32,9,275,0],[32,10,275,0,"scheduleFlushOperations"],[32,33,275,0],[32,36,275,0,"scheduleFlushOperations"],[32,59,275,0],[33,2,6,0],[33,6,6,0,"_reactNative"],[33,18,6,0],[33,21,6,0,"require"],[33,28,6,0],[33,29,6,0,"_dependencyMap"],[33,43,6,0],[34,2,11,0],[34,6,11,0,"_handlersRegistry"],[34,23,11,0],[34,26,11,0,"require"],[34,33,11,0],[34,34,11,0,"_dependencyMap"],[34,48,11,0],[35,2,12,0],[35,6,12,0,"_utils"],[35,12,12,0],[35,15,12,0,"require"],[35,22,12,0],[35,23,12,0,"_dependencyMap"],[35,37,12,0],[36,2,13,0],[36,6,13,0,"_RNGestureHandlerModule"],[36,29,13,0],[36,32,13,0,"require"],[36,39,13,0],[36,40,13,0,"_dependencyMap"],[36,54,13,0],[37,2,13,0],[37,6,13,0,"RNGestureHandlerModule"],[37,28,13,0],[37,31,13,0,"_interopDefault"],[37,46,13,0],[37,47,13,0,"_RNGestureHandlerModule"],[37,70,13,0],[38,2,14,0],[38,6,14,0,"_ghQueueMicrotask"],[38,23,14,0],[38,26,14,0,"require"],[38,33,14,0],[38,34,14,0,"_dependencyMap"],[38,48,14,0],[39,2,1,0],[40,2,2,0],[41,2,3,0],[42,2,4,0],[44,2,17,0],[44,6,17,6,"commonProps"],[44,17,17,17],[44,20,17,20],[44,21,18,2],[44,25,18,6],[44,27,19,2],[44,36,19,11],[44,38,20,2],[44,63,20,27],[44,65,21,2],[44,74,21,11],[44,76,22,2],[44,98,22,24],[44,100,23,2],[44,112,23,14],[44,114,24,2],[44,128,24,16],[44,130,25,2],[44,143,25,15],[44,145,26,2],[44,164,26,21],[44,166,27,2],[44,179,27,15],[44,180,28,10],[45,2,30,0],[45,6,30,6,"componentInteractionProps"],[45,31,30,31],[45,34,30,34],[45,35,31,2],[45,44,31,11],[45,46,32,2],[45,68,32,24],[45,70,33,2],[45,86,33,18],[45,87,34,10],[46,2,36,7],[46,6,36,13,"baseGestureHandlerProps"],[46,29,36,36],[46,32,36,39],[46,33,37,2],[46,36,37,5,"commonProps"],[46,47,37,16],[46,49,38,2],[46,52,38,5,"componentInteractionProps"],[46,77,38,30],[46,79,39,2],[46,88,39,11],[46,90,40,2],[46,100,40,12],[46,102,41,2],[46,115,41,15],[46,117,42,2],[46,130,42,15],[46,132,43,2],[46,141,43,11],[46,143,44,2],[46,159,44,18],[46,161,45,2],[46,183,45,24],[46,184,46,10],[47,2,48,7],[47,6,48,13,"baseGestureHandlerWithMonitorProps"],[47,40,48,47],[47,43,48,50],[47,44,49,2],[47,47,49,5,"commonProps"],[47,58,49,16],[47,60,50,2],[47,78,50,20],[47,80,51,2],[47,98,51,20],[47,99,52,1],[48,2,52,2],[48,6,116,12,"MouseButton"],[48,17,116,23],[48,43,116,12,"MouseButton"],[48,54,116,23],[49,4,116,12,"MouseButton"],[49,15,116,23],[49,16,116,12,"MouseButton"],[49,27,116,23],[50,4,116,12,"MouseButton"],[50,15,116,23],[50,16,116,12,"MouseButton"],[50,27,116,23],[51,4,116,12,"MouseButton"],[51,15,116,23],[51,16,116,12,"MouseButton"],[51,27,116,23],[52,4,116,12,"MouseButton"],[52,15,116,23],[52,16,116,12,"MouseButton"],[52,27,116,23],[53,4,116,12,"MouseButton"],[53,15,116,23],[53,16,116,12,"MouseButton"],[53,27,116,23],[54,4,116,12,"MouseButton"],[54,15,116,23],[54,16,116,12,"MouseButton"],[54,27,116,23],[55,4,116,23],[55,11,116,12,"MouseButton"],[55,22,116,23],[56,2,116,23],[56,9,142,0],[57,2,188,0],[58,2,189,0],[59,2,215,0],[59,11,215,9,"isConfigParam"],[59,24,215,22,"isConfigParam"],[59,25,215,23,"param"],[59,30,215,37],[59,32,215,39,"name"],[59,36,215,51],[59,38,215,53],[60,4,216,2],[61,4,217,2],[62,4,218,2],[62,11,219,4,"param"],[62,16,219,9],[62,21,219,14,"undefined"],[62,30,219,23],[62,35,220,5,"param"],[62,40,220,10],[62,45,220,15,"Object"],[62,51,220,21],[62,52,220,22,"param"],[62,57,220,27],[62,58,220,28],[62,62,221,6],[62,64,221,8],[62,76,221,20],[62,80,221,25,"param"],[62,85,221,58],[62,86,221,59],[62,87,221,60],[62,91,222,4,"name"],[62,95,222,8],[62,100,222,13],[62,122,222,35],[62,126,223,4,"name"],[62,130,223,8],[62,135,223,13],[62,151,223,29],[63,2,225,0],[64,2,227,7],[64,11,227,16,"filterConfig"],[64,23,227,28,"filterConfig"],[64,24,228,2,"props"],[64,29,228,32],[64,31,229,2,"validProps"],[64,41,229,22],[64,43,231,2],[65,4,231,2],[65,8,230,2,"defaults"],[65,16,230,35],[65,19,230,35,"arguments"],[65,28,230,35],[65,29,230,35,"length"],[65,35,230,35],[65,43,230,35,"arguments"],[65,52,230,35],[65,60,230,35,"undefined"],[65,69,230,35],[65,72,230,35,"arguments"],[65,81,230,35],[65,87,230,38],[65,88,230,39],[65,89,230,40],[66,4,232,2],[66,8,232,8,"filteredConfig"],[66,22,232,22],[66,25,232,25],[67,6,232,27],[67,9,232,30,"defaults"],[68,4,232,39],[68,5,232,40],[69,4,233,2],[69,9,233,7],[69,13,233,13,"key"],[69,16,233,16],[69,20,233,20,"validProps"],[69,30,233,30],[69,32,233,32],[70,6,234,4],[70,10,234,8,"value"],[70,15,234,13],[70,18,234,16,"props"],[70,23,234,21],[70,24,234,22,"key"],[70,27,234,25],[70,28,234,26],[71,6,235,4],[71,10,235,8,"isConfigParam"],[71,23,235,21],[71,24,235,22,"value"],[71,29,235,27],[71,31,235,29,"key"],[71,34,235,32],[71,35,235,33],[71,37,235,35],[72,8,236,6],[72,12,236,10,"key"],[72,15,236,13],[72,20,236,18],[72,42,236,40],[72,46,236,44,"key"],[72,49,236,47],[72,54,236,52],[72,63,236,61],[72,65,236,63],[73,10,237,8,"value"],[73,15,237,13],[73,18,237,16,"transformIntoHandlerTags"],[73,42,237,40],[73,43,237,41,"props"],[73,48,237,46],[73,49,237,47,"key"],[73,52,237,50],[73,53,237,51],[73,54,237,52],[74,8,238,6],[74,9,238,7],[74,15,238,13],[74,19,238,17,"key"],[74,22,238,20],[74,27,238,25],[74,36,238,34],[74,40,238,38],[74,47,238,45,"value"],[74,52,238,50],[74,57,238,55],[74,65,238,63],[74,67,238,65],[75,10,239,8,"value"],[75,15,239,13],[75,18,239,16],[76,12,239,18,"top"],[76,15,239,21],[76,17,239,23,"value"],[76,22,239,28],[77,12,239,30,"left"],[77,16,239,34],[77,18,239,36,"value"],[77,23,239,41],[78,12,239,43,"bottom"],[78,18,239,49],[78,20,239,51,"value"],[78,25,239,56],[79,12,239,58,"right"],[79,17,239,63],[79,19,239,65,"value"],[80,10,239,71],[80,11,239,72],[81,8,240,6],[82,8,241,6,"filteredConfig"],[82,22,241,20],[82,23,241,21,"key"],[82,26,241,24],[82,27,241,25],[82,30,241,28,"value"],[82,35,241,33],[83,6,242,4],[84,4,243,2],[85,4,244,2],[85,11,244,9,"filteredConfig"],[85,25,244,23],[86,2,245,0],[87,2,247,0],[87,11,247,9,"transformIntoHandlerTags"],[87,35,247,33,"transformIntoHandlerTags"],[87,36,247,34,"handlerIDs"],[87,46,247,49],[87,48,247,51],[88,4,248,2,"handlerIDs"],[88,14,248,12],[88,17,248,15],[88,21,248,15,"toArray"],[88,27,248,22],[88,28,248,22,"toArray"],[88,35,248,22],[88,37,248,23,"handlerIDs"],[88,47,248,33],[88,48,248,34],[89,4,250,2],[89,8,250,6,"Platform"],[89,20,250,14],[89,21,250,14,"Platform"],[89,29,250,14],[89,30,250,15,"OS"],[89,32,250,17],[89,37,250,22],[89,42,250,27],[89,44,250,29],[90,6,251,4],[90,13,251,11,"handlerIDs"],[90,23,251,21],[90,24,252,7,"map"],[90,27,252,10],[90,28,252,11,"_ref"],[90,32,252,11],[91,8,252,11],[91,12,252,14,"current"],[91,19,252,21],[91,22,252,21,"_ref"],[91,26,252,21],[91,27,252,14,"current"],[91,34,252,21],[92,8,252,21],[92,15,252,46,"current"],[92,22,252,53],[93,6,252,53],[93,8,252,54],[93,9,253,7,"filter"],[93,15,253,13],[93,16,253,15,"handle"],[93,22,253,26],[93,26,253,31,"handle"],[93,32,253,37],[93,33,253,38],[94,4,254,2],[95,4,255,2],[96,4,256,2],[96,11,256,9,"handlerIDs"],[96,21,256,19],[96,22,257,5,"map"],[96,25,257,8],[96,26,258,7,"handlerID"],[96,35,258,21],[96,39,259,8,"handlerIDToTag"],[96,56,259,22],[96,57,259,22,"handlerIDToTag"],[96,71,259,22],[96,72,259,23,"handlerID"],[96,81,259,32],[96,82,259,33],[96,86,259,37,"handlerID"],[96,95,259,46],[96,96,259,47,"current"],[96,103,259,54],[96,105,259,56,"handlerTag"],[96,115,259,66],[96,119,259,70],[96,120,259,71],[96,121,260,4],[96,122,260,5],[96,123,261,5,"filter"],[96,129,261,11],[96,130,261,13,"handlerTag"],[96,140,261,31],[96,144,261,36,"handlerTag"],[96,154,261,46],[96,157,261,49],[96,158,261,50],[96,159,261,51],[97,2,262,0],[98,2,264,7],[98,11,264,16,"findNodeHandle"],[98,25,264,30,"findNodeHandle"],[98,26,265,2,"node"],[98,30,265,77],[98,32,266,73],[99,4,267,2],[99,8,267,6,"Platform"],[99,20,267,14],[99,21,267,14,"Platform"],[99,29,267,14],[99,30,267,15,"OS"],[99,32,267,17],[99,37,267,22],[99,42,267,27],[99,44,267,29],[100,6,268,4],[100,13,268,11,"node"],[100,17,268,15],[101,4,269,2],[102,4,270,2],[102,11,270,9],[102,15,270,9,"findNodeHandleRN"],[102,27,270,25],[102,28,270,25,"findNodeHandle"],[102,42,270,25],[102,44,270,26,"node"],[102,48,270,30],[102,49,270,31],[103,2,271,0],[104,2,273,0],[104,6,273,4,"flushOperationsScheduled"],[104,30,273,28],[104,33,273,31],[104,38,273,36],[105,2,275,7],[105,11,275,16,"scheduleFlushOperations"],[105,34,275,39,"scheduleFlushOperations"],[105,35,275,39],[105,37,275,42],[106,4,276,2],[106,8,276,6],[106,9,276,7,"flushOperationsScheduled"],[106,33,276,31],[106,35,276,33],[107,6,277,4,"flushOperationsScheduled"],[107,30,277,28],[107,33,277,31],[107,37,277,35],[108,6,278,4],[108,10,278,4,"ghQueueMicrotask"],[108,27,278,20],[108,28,278,20,"ghQueueMicrotask"],[108,44,278,20],[108,46,278,21],[108,52,278,27],[109,8,279,6,"RNGestureHandlerModule"],[109,30,279,28],[109,31,279,28,"default"],[109,38,279,28],[109,39,279,29,"flushOperations"],[109,54,279,44],[109,55,279,45],[109,56,279,46],[110,8,281,6,"flushOperationsScheduled"],[110,32,281,30],[110,35,281,33],[110,40,281,38],[111,6,282,4],[111,7,282,5],[111,8,282,6],[112,4,283,2],[113,2,284,0],[114,0,284,1],[114,3]],"functionMap":{"names":["<global>","isConfigParam","filterConfig","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","findNodeHandle","scheduleFlushOperations","ghQueueMicrotask$argument_0"],"mappings":"AAA;ACsN;CDU;OEE;CFkB;AGE;WCK,0CD;cEC,uBF;MCK;wEDC;YEE,sCF;CHC;OME;CNO;OOI;qBCG;KDI;CPE"},"hasCjsExports":false},"type":"js/module"}]}